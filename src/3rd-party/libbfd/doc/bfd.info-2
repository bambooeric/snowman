This is bfd.info, produced by makeinfo version 6.0 from bfd.texinfo.

This file documents the BFD library.

   Copyright (C) 1991-2014 Free Software Foundation, Inc.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "GNU General Public License" and "Funding Free
Software", the Front-Cover texts being (a) (see below), and with the
Back-Cover Texts being (b) (see below).  A copy of the license is
included in the section entitled "GNU Free Documentation License".

   (a) The FSF's Front-Cover Text is:

   A GNU Manual

   (b) The FSF's Back-Cover Text is:

   You have freedom to copy and modify this GNU Manual, like GNU
software.  Copies published by the Free Software Foundation raise funds
for GNU development.
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Bfd: (bfd).                   The Binary File Descriptor library.
END-INFO-DIR-ENTRY


File: bfd.info,  Node: Internal,  Next: File Caching,  Prev: Opening and Closing,  Up: BFD front end

2.15 Implementation details
===========================

2.15.1 Internal functions
-------------------------

*Description*
These routines are used within BFD. They are not intended for export,
but are documented here for completeness.

2.15.1.1 'bfd_write_bigendian_4byte_int'
........................................

*Synopsis*
     bfd_boolean bfd_write_bigendian_4byte_int (bfd *, unsigned int);
   *Description*
Write a 4 byte integer I to the output BFD ABFD, in big endian order
regardless of what else is going on.  This is useful in archives.

2.15.1.2 'bfd_put_size'
.......................

2.15.1.3 'bfd_get_size'
.......................

*Description*
These macros as used for reading and writing raw data in sections; each
access (except for bytes) is vectored through the target format of the
BFD and mangled accordingly.  The mangling performs any necessary endian
translations and removes alignment restrictions.  Note that types
accepted and returned by these macros are identical so they can be
swapped around in macros--for example, 'libaout.h' defines 'GET_WORD' to
either 'bfd_get_32' or 'bfd_get_64'.

   In the put routines, VAL must be a 'bfd_vma'.  If we are on a system
without prototypes, the caller is responsible for making sure that is
true, with a cast if necessary.  We don't cast them in the macro
definitions because that would prevent 'lint' or 'gcc -Wall' from
detecting sins such as passing a pointer.  To detect calling these with
less than a 'bfd_vma', use 'gcc -Wconversion' on a host with 64 bit
'bfd_vma''s.

     /* Byte swapping macros for user section data.  */

     #define bfd_put_8(abfd, val, ptr) \
       ((void) (*((unsigned char *) (ptr)) = (val) & 0xff))
     #define bfd_put_signed_8 \
       bfd_put_8
     #define bfd_get_8(abfd, ptr) \
       (*(const unsigned char *) (ptr) & 0xff)
     #define bfd_get_signed_8(abfd, ptr) \
       (((*(const unsigned char *) (ptr) & 0xff) ^ 0x80) - 0x80)

     #define bfd_put_16(abfd, val, ptr) \
       BFD_SEND (abfd, bfd_putx16, ((val),(ptr)))
     #define bfd_put_signed_16 \
       bfd_put_16
     #define bfd_get_16(abfd, ptr) \
       BFD_SEND (abfd, bfd_getx16, (ptr))
     #define bfd_get_signed_16(abfd, ptr) \
       BFD_SEND (abfd, bfd_getx_signed_16, (ptr))

     #define bfd_put_32(abfd, val, ptr) \
       BFD_SEND (abfd, bfd_putx32, ((val),(ptr)))
     #define bfd_put_signed_32 \
       bfd_put_32
     #define bfd_get_32(abfd, ptr) \
       BFD_SEND (abfd, bfd_getx32, (ptr))
     #define bfd_get_signed_32(abfd, ptr) \
       BFD_SEND (abfd, bfd_getx_signed_32, (ptr))

     #define bfd_put_64(abfd, val, ptr) \
       BFD_SEND (abfd, bfd_putx64, ((val), (ptr)))
     #define bfd_put_signed_64 \
       bfd_put_64
     #define bfd_get_64(abfd, ptr) \
       BFD_SEND (abfd, bfd_getx64, (ptr))
     #define bfd_get_signed_64(abfd, ptr) \
       BFD_SEND (abfd, bfd_getx_signed_64, (ptr))

     #define bfd_get(bits, abfd, ptr)                       \
       ((bits) == 8 ? (bfd_vma) bfd_get_8 (abfd, ptr)       \
        : (bits) == 16 ? bfd_get_16 (abfd, ptr)             \
        : (bits) == 32 ? bfd_get_32 (abfd, ptr)             \
        : (bits) == 64 ? bfd_get_64 (abfd, ptr)             \
        : (abort (), (bfd_vma) - 1))

     #define bfd_put(bits, abfd, val, ptr)                  \
       ((bits) == 8 ? bfd_put_8  (abfd, val, ptr)           \
        : (bits) == 16 ? bfd_put_16 (abfd, val, ptr)                \
        : (bits) == 32 ? bfd_put_32 (abfd, val, ptr)                \
        : (bits) == 64 ? bfd_put_64 (abfd, val, ptr)                \
        : (abort (), (void) 0))


2.15.1.4 'bfd_h_put_size'
.........................

*Description*
These macros have the same function as their 'bfd_get_x' brethren,
except that they are used for removing information for the header
records of object files.  Believe it or not, some object files keep
their header records in big endian order and their data in little endian
order.

     /* Byte swapping macros for file header data.  */

     #define bfd_h_put_8(abfd, val, ptr) \
       bfd_put_8 (abfd, val, ptr)
     #define bfd_h_put_signed_8(abfd, val, ptr) \
       bfd_put_8 (abfd, val, ptr)
     #define bfd_h_get_8(abfd, ptr) \
       bfd_get_8 (abfd, ptr)
     #define bfd_h_get_signed_8(abfd, ptr) \
       bfd_get_signed_8 (abfd, ptr)

     #define bfd_h_put_16(abfd, val, ptr) \
       BFD_SEND (abfd, bfd_h_putx16, (val, ptr))
     #define bfd_h_put_signed_16 \
       bfd_h_put_16
     #define bfd_h_get_16(abfd, ptr) \
       BFD_SEND (abfd, bfd_h_getx16, (ptr))
     #define bfd_h_get_signed_16(abfd, ptr) \
       BFD_SEND (abfd, bfd_h_getx_signed_16, (ptr))

     #define bfd_h_put_32(abfd, val, ptr) \
       BFD_SEND (abfd, bfd_h_putx32, (val, ptr))
     #define bfd_h_put_signed_32 \
       bfd_h_put_32
     #define bfd_h_get_32(abfd, ptr) \
       BFD_SEND (abfd, bfd_h_getx32, (ptr))
     #define bfd_h_get_signed_32(abfd, ptr) \
       BFD_SEND (abfd, bfd_h_getx_signed_32, (ptr))

     #define bfd_h_put_64(abfd, val, ptr) \
       BFD_SEND (abfd, bfd_h_putx64, (val, ptr))
     #define bfd_h_put_signed_64 \
       bfd_h_put_64
     #define bfd_h_get_64(abfd, ptr) \
       BFD_SEND (abfd, bfd_h_getx64, (ptr))
     #define bfd_h_get_signed_64(abfd, ptr) \
       BFD_SEND (abfd, bfd_h_getx_signed_64, (ptr))

     /* Aliases for the above, which should eventually go away.  */

     #define H_PUT_64  bfd_h_put_64
     #define H_PUT_32  bfd_h_put_32
     #define H_PUT_16  bfd_h_put_16
     #define H_PUT_8   bfd_h_put_8
     #define H_PUT_S64 bfd_h_put_signed_64
     #define H_PUT_S32 bfd_h_put_signed_32
     #define H_PUT_S16 bfd_h_put_signed_16
     #define H_PUT_S8  bfd_h_put_signed_8
     #define H_GET_64  bfd_h_get_64
     #define H_GET_32  bfd_h_get_32
     #define H_GET_16  bfd_h_get_16
     #define H_GET_8   bfd_h_get_8
     #define H_GET_S64 bfd_h_get_signed_64
     #define H_GET_S32 bfd_h_get_signed_32
     #define H_GET_S16 bfd_h_get_signed_16
     #define H_GET_S8  bfd_h_get_signed_8



2.15.1.5 'bfd_log2'
...................

*Synopsis*
     unsigned int bfd_log2 (bfd_vma x);
   *Description*
Return the log base 2 of the value supplied, rounded up.  E.g., an X of
1025 returns 11.  A X of 0 returns 0.


File: bfd.info,  Node: File Caching,  Next: Linker Functions,  Prev: Internal,  Up: BFD front end

2.16 File caching
=================

The file caching mechanism is embedded within BFD and allows the
application to open as many BFDs as it wants without regard to the
underlying operating system's file descriptor limit (often as low as 20
open files).  The module in 'cache.c' maintains a least recently used
list of 'bfd_cache_max_open' files, and exports the name
'bfd_cache_lookup', which runs around and makes sure that the required
BFD is open.  If not, then it chooses a file to close, closes it and
opens the one wanted, returning its file handle.

2.16.1 Caching functions
------------------------

2.16.1.1 'bfd_cache_init'
.........................

*Synopsis*
     bfd_boolean bfd_cache_init (bfd *abfd);
   *Description*
Add a newly opened BFD to the cache.

2.16.1.2 'bfd_cache_close'
..........................

*Synopsis*
     bfd_boolean bfd_cache_close (bfd *abfd);
   *Description*
Remove the BFD ABFD from the cache.  If the attached file is open, then
close it too.

   *Returns*
'FALSE' is returned if closing the file fails, 'TRUE' is returned if all
is well.

2.16.1.3 'bfd_cache_close_all'
..............................

*Synopsis*
     bfd_boolean bfd_cache_close_all (void);
   *Description*
Remove all BFDs from the cache.  If the attached file is open, then
close it too.

   *Returns*
'FALSE' is returned if closing one of the file fails, 'TRUE' is returned
if all is well.

2.16.1.4 'bfd_open_file'
........................

*Synopsis*
     FILE* bfd_open_file (bfd *abfd);
   *Description*
Call the OS to open a file for ABFD.  Return the 'FILE *' (possibly
'NULL') that results from this operation.  Set up the BFD so that future
accesses know the file is open.  If the 'FILE *' returned is 'NULL',
then it won't have been put in the cache, so it won't have to be removed
from it.


File: bfd.info,  Node: Linker Functions,  Next: Hash Tables,  Prev: File Caching,  Up: BFD front end

2.17 Linker Functions
=====================

The linker uses three special entry points in the BFD target vector.  It
is not necessary to write special routines for these entry points when
creating a new BFD back end, since generic versions are provided.
However, writing them can speed up linking and make it use significantly
less runtime memory.

   The first routine creates a hash table used by the other routines.
The second routine adds the symbols from an object file to the hash
table.  The third routine takes all the object files and links them
together to create the output file.  These routines are designed so that
the linker proper does not need to know anything about the symbols in
the object files that it is linking.  The linker merely arranges the
sections as directed by the linker script and lets BFD handle the
details of symbols and relocs.

   The second routine and third routines are passed a pointer to a
'struct bfd_link_info' structure (defined in 'bfdlink.h') which holds
information relevant to the link, including the linker hash table (which
was created by the first routine) and a set of callback functions to the
linker proper.

   The generic linker routines are in 'linker.c', and use the header
file 'genlink.h'.  As of this writing, the only back ends which have
implemented versions of these routines are a.out (in 'aoutx.h') and
ECOFF (in 'ecoff.c').  The a.out routines are used as examples
throughout this section.

* Menu:

* Creating a Linker Hash Table::
* Adding Symbols to the Hash Table::
* Performing the Final Link::


File: bfd.info,  Node: Creating a Linker Hash Table,  Next: Adding Symbols to the Hash Table,  Prev: Linker Functions,  Up: Linker Functions

2.17.1 Creating a linker hash table
-----------------------------------

The linker routines must create a hash table, which must be derived from
'struct bfd_link_hash_table' described in 'bfdlink.c'.  *Note Hash
Tables::, for information on how to create a derived hash table.  This
entry point is called using the target vector of the linker output file.

   The '_bfd_link_hash_table_create' entry point must allocate and
initialize an instance of the desired hash table.  If the back end does
not require any additional information to be stored with the entries in
the hash table, the entry point may simply create a 'struct
bfd_link_hash_table'.  Most likely, however, some additional information
will be needed.

   For example, with each entry in the hash table the a.out linker keeps
the index the symbol has in the final output file (this index number is
used so that when doing a relocatable link the symbol index used in the
output file can be quickly filled in when copying over a reloc).  The
a.out linker code defines the required structures and functions for a
hash table derived from 'struct bfd_link_hash_table'.  The a.out linker
hash table is created by the function
'NAME(aout,link_hash_table_create)'; it simply allocates space for the
hash table, initializes it, and returns a pointer to it.

   When writing the linker routines for a new back end, you will
generally not know exactly which fields will be required until you have
finished.  You should simply create a new hash table which defines no
additional fields, and then simply add fields as they become necessary.


File: bfd.info,  Node: Adding Symbols to the Hash Table,  Next: Performing the Final Link,  Prev: Creating a Linker Hash Table,  Up: Linker Functions

2.17.2 Adding symbols to the hash table
---------------------------------------

The linker proper will call the '_bfd_link_add_symbols' entry point for
each object file or archive which is to be linked (typically these are
the files named on the command line, but some may also come from the
linker script).  The entry point is responsible for examining the file.
For an object file, BFD must add any relevant symbol information to the
hash table.  For an archive, BFD must determine which elements of the
archive should be used and adding them to the link.

   The a.out version of this entry point is
'NAME(aout,link_add_symbols)'.

* Menu:

* Differing file formats::
* Adding symbols from an object file::
* Adding symbols from an archive::


File: bfd.info,  Node: Differing file formats,  Next: Adding symbols from an object file,  Prev: Adding Symbols to the Hash Table,  Up: Adding Symbols to the Hash Table

2.17.2.1 Differing file formats
...............................

Normally all the files involved in a link will be of the same format,
but it is also possible to link together different format object files,
and the back end must support that.  The '_bfd_link_add_symbols' entry
point is called via the target vector of the file to be added.  This has
an important consequence: the function may not assume that the hash
table is the type created by the corresponding
'_bfd_link_hash_table_create' vector.  All the '_bfd_link_add_symbols'
function can assume about the hash table is that it is derived from
'struct bfd_link_hash_table'.

   Sometimes the '_bfd_link_add_symbols' function must store some
information in the hash table entry to be used by the '_bfd_final_link'
function.  In such a case the output bfd xvec must be checked to make
sure that the hash table was created by an object file of the same
format.

   The '_bfd_final_link' routine must be prepared to handle a hash entry
without any extra information added by the '_bfd_link_add_symbols'
function.  A hash entry without extra information will also occur when
the linker script directs the linker to create a symbol.  Note that,
regardless of how a hash table entry is added, all the fields will be
initialized to some sort of null value by the hash table entry
initialization function.

   See 'ecoff_link_add_externals' for an example of how to check the
output bfd before saving information (in this case, the ECOFF external
symbol debugging information) in a hash table entry.


File: bfd.info,  Node: Adding symbols from an object file,  Next: Adding symbols from an archive,  Prev: Differing file formats,  Up: Adding Symbols to the Hash Table

2.17.2.2 Adding symbols from an object file
...........................................

When the '_bfd_link_add_symbols' routine is passed an object file, it
must add all externally visible symbols in that object file to the hash
table.  The actual work of adding the symbol to the hash table is
normally handled by the function '_bfd_generic_link_add_one_symbol'.
The '_bfd_link_add_symbols' routine is responsible for reading all the
symbols from the object file and passing the correct information to
'_bfd_generic_link_add_one_symbol'.

   The '_bfd_link_add_symbols' routine should not use
'bfd_canonicalize_symtab' to read the symbols.  The point of providing
this routine is to avoid the overhead of converting the symbols into
generic 'asymbol' structures.

   '_bfd_generic_link_add_one_symbol' handles the details of combining
common symbols, warning about multiple definitions, and so forth.  It
takes arguments which describe the symbol to add, notably symbol flags,
a section, and an offset.  The symbol flags include such things as
'BSF_WEAK' or 'BSF_INDIRECT'.  The section is a section in the object
file, or something like 'bfd_und_section_ptr' for an undefined symbol or
'bfd_com_section_ptr' for a common symbol.

   If the '_bfd_final_link' routine is also going to need to read the
symbol information, the '_bfd_link_add_symbols' routine should save it
somewhere attached to the object file BFD. However, the information
should only be saved if the 'keep_memory' field of the 'info' argument
is TRUE, so that the '-no-keep-memory' linker switch is effective.

   The a.out function which adds symbols from an object file is
'aout_link_add_object_symbols', and most of the interesting work is in
'aout_link_add_symbols'.  The latter saves pointers to the hash tables
entries created by '_bfd_generic_link_add_one_symbol' indexed by symbol
number, so that the '_bfd_final_link' routine does not have to call the
hash table lookup routine to locate the entry.


File: bfd.info,  Node: Adding symbols from an archive,  Prev: Adding symbols from an object file,  Up: Adding Symbols to the Hash Table

2.17.2.3 Adding symbols from an archive
.......................................

When the '_bfd_link_add_symbols' routine is passed an archive, it must
look through the symbols defined by the archive and decide which
elements of the archive should be included in the link.  For each such
element it must call the 'add_archive_element' linker callback, and it
must add the symbols from the object file to the linker hash table.
(The callback may in fact indicate that a replacement BFD should be
used, in which case the symbols from that BFD should be added to the
linker hash table instead.)

   In most cases the work of looking through the symbols in the archive
should be done by the '_bfd_generic_link_add_archive_symbols' function.
'_bfd_generic_link_add_archive_symbols' is passed a function to call to
make the final decision about adding an archive element to the link and
to do the actual work of adding the symbols to the linker hash table.
If the element is to be included, the 'add_archive_element' linker
callback routine must be called with the element as an argument, and the
element's symbols must be added to the linker hash table just as though
the element had itself been passed to the '_bfd_link_add_symbols'
function.

   When the a.out '_bfd_link_add_symbols' function receives an archive,
it calls '_bfd_generic_link_add_archive_symbols' passing
'aout_link_check_archive_element' as the function argument.
'aout_link_check_archive_element' calls 'aout_link_check_ar_symbols'.
If the latter decides to add the element (an element is only added if it
provides a real, non-common, definition for a previously undefined or
common symbol) it calls the 'add_archive_element' callback and then
'aout_link_check_archive_element' calls 'aout_link_add_symbols' to
actually add the symbols to the linker hash table - possibly those of a
substitute BFD, if the 'add_archive_element' callback avails itself of
that option.

   The ECOFF back end is unusual in that it does not normally call
'_bfd_generic_link_add_archive_symbols', because ECOFF archives already
contain a hash table of symbols.  The ECOFF back end searches the
archive itself to avoid the overhead of creating a new hash table.


File: bfd.info,  Node: Performing the Final Link,  Prev: Adding Symbols to the Hash Table,  Up: Linker Functions

2.17.3 Performing the final link
--------------------------------

When all the input files have been processed, the linker calls the
'_bfd_final_link' entry point of the output BFD. This routine is
responsible for producing the final output file, which has several
aspects.  It must relocate the contents of the input sections and copy
the data into the output sections.  It must build an output symbol table
including any local symbols from the input files and the global symbols
from the hash table.  When producing relocatable output, it must modify
the input relocs and write them into the output file.  There may also be
object format dependent work to be done.

   The linker will also call the 'write_object_contents' entry point
when the BFD is closed.  The two entry points must work together in
order to produce the correct output file.

   The details of how this works are inevitably dependent upon the
specific object file format.  The a.out '_bfd_final_link' routine is
'NAME(aout,final_link)'.

* Menu:

* Information provided by the linker::
* Relocating the section contents::
* Writing the symbol table::


File: bfd.info,  Node: Information provided by the linker,  Next: Relocating the section contents,  Prev: Performing the Final Link,  Up: Performing the Final Link

2.17.3.1 Information provided by the linker
...........................................

Before the linker calls the '_bfd_final_link' entry point, it sets up
some data structures for the function to use.

   The 'input_bfds' field of the 'bfd_link_info' structure will point to
a list of all the input files included in the link.  These files are
linked through the 'link.next' field of the 'bfd' structure.

   Each section in the output file will have a list of 'link_order'
structures attached to the 'map_head.link_order' field (the 'link_order'
structure is defined in 'bfdlink.h').  These structures describe how to
create the contents of the output section in terms of the contents of
various input sections, fill constants, and, eventually, other types of
information.  They also describe relocs that must be created by the BFD
backend, but do not correspond to any input file; this is used to
support -Ur, which builds constructors while generating a relocatable
object file.


File: bfd.info,  Node: Relocating the section contents,  Next: Writing the symbol table,  Prev: Information provided by the linker,  Up: Performing the Final Link

2.17.3.2 Relocating the section contents
........................................

The '_bfd_final_link' function should look through the 'link_order'
structures attached to each section of the output file.  Each
'link_order' structure should either be handled specially, or it should
be passed to the function '_bfd_default_link_order' which will do the
right thing ('_bfd_default_link_order' is defined in 'linker.c').

   For efficiency, a 'link_order' of type 'bfd_indirect_link_order'
whose associated section belongs to a BFD of the same format as the
output BFD must be handled specially.  This type of 'link_order'
describes part of an output section in terms of a section belonging to
one of the input files.  The '_bfd_final_link' function should read the
contents of the section and any associated relocs, apply the relocs to
the section contents, and write out the modified section contents.  If
performing a relocatable link, the relocs themselves must also be
modified and written out.

   The functions '_bfd_relocate_contents' and '_bfd_final_link_relocate'
provide some general support for performing the actual relocations,
notably overflow checking.  Their arguments include information about
the symbol the relocation is against and a 'reloc_howto_type' argument
which describes the relocation to perform.  These functions are defined
in 'reloc.c'.

   The a.out function which handles reading, relocating, and writing
section contents is 'aout_link_input_section'.  The actual relocation is
done in 'aout_link_input_section_std' and 'aout_link_input_section_ext'.


File: bfd.info,  Node: Writing the symbol table,  Prev: Relocating the section contents,  Up: Performing the Final Link

2.17.3.3 Writing the symbol table
.................................

The '_bfd_final_link' function must gather all the symbols in the input
files and write them out.  It must also write out all the symbols in the
global hash table.  This must be controlled by the 'strip' and 'discard'
fields of the 'bfd_link_info' structure.

   The local symbols of the input files will not have been entered into
the linker hash table.  The '_bfd_final_link' routine must consider each
input file and include the symbols in the output file.  It may be
convenient to do this when looking through the 'link_order' structures,
or it may be done by stepping through the 'input_bfds' list.

   The '_bfd_final_link' routine must also traverse the global hash
table to gather all the externally visible symbols.  It is possible that
most of the externally visible symbols may be written out when
considering the symbols of each input file, but it is still necessary to
traverse the hash table since the linker script may have defined some
symbols that are not in any of the input files.

   The 'strip' field of the 'bfd_link_info' structure controls which
symbols are written out.  The possible values are listed in 'bfdlink.h'.
If the value is 'strip_some', then the 'keep_hash' field of the
'bfd_link_info' structure is a hash table of symbols to keep; each
symbol should be looked up in this hash table, and only symbols which
are present should be included in the output file.

   If the 'strip' field of the 'bfd_link_info' structure permits local
symbols to be written out, the 'discard' field is used to further
controls which local symbols are included in the output file.  If the
value is 'discard_l', then all local symbols which begin with a certain
prefix are discarded; this is controlled by the
'bfd_is_local_label_name' entry point.

   The a.out backend handles symbols by calling
'aout_link_write_symbols' on each input BFD and then traversing the
global hash table with the function 'aout_link_write_other_symbol'.  It
builds a string table while writing out the symbols, which is written to
the output file at the end of 'NAME(aout,final_link)'.

2.17.3.4 'bfd_link_split_section'
.................................

*Synopsis*
     bfd_boolean bfd_link_split_section (bfd *abfd, asection *sec);
   *Description*
Return nonzero if SEC should be split during a reloceatable or final
link.
     #define bfd_link_split_section(abfd, sec) \
            BFD_SEND (abfd, _bfd_link_split_section, (abfd, sec))


2.17.3.5 'bfd_section_already_linked'
.....................................

*Synopsis*
     bfd_boolean bfd_section_already_linked (bfd *abfd,
         asection *sec,
         struct bfd_link_info *info);
   *Description*
Check if DATA has been already linked during a reloceatable or final
link.  Return TRUE if it has.
     #define bfd_section_already_linked(abfd, sec, info) \
            BFD_SEND (abfd, _section_already_linked, (abfd, sec, info))


2.17.3.6 'bfd_generic_define_common_symbol'
...........................................

*Synopsis*
     bfd_boolean bfd_generic_define_common_symbol
        (bfd *output_bfd, struct bfd_link_info *info,
         struct bfd_link_hash_entry *h);
   *Description*
Convert common symbol H into a defined symbol.  Return TRUE on success
and FALSE on failure.
     #define bfd_define_common_symbol(output_bfd, info, h) \
            BFD_SEND (output_bfd, _bfd_define_common_symbol, (output_bfd, info, h))


2.17.3.7 'bfd_find_version_for_sym'
...................................

*Synopsis*
     struct bfd_elf_version_tree * bfd_find_version_for_sym
        (struct bfd_elf_version_tree *verdefs,
         const char *sym_name, bfd_boolean *hide);
   *Description*
Search an elf version script tree for symbol versioning info and export
/ don't-export status for a given symbol.  Return non-NULL on success
and NULL on failure; also sets the output 'hide' boolean parameter.

2.17.3.8 'bfd_hide_sym_by_version'
..................................

*Synopsis*
     bfd_boolean bfd_hide_sym_by_version
        (struct bfd_elf_version_tree *verdefs, const char *sym_name);
   *Description*
Search an elf version script tree for symbol versioning info for a given
symbol.  Return TRUE if the symbol is hidden.


File: bfd.info,  Node: Hash Tables,  Prev: Linker Functions,  Up: BFD front end

2.18 Hash Tables
================

BFD provides a simple set of hash table functions.  Routines are
provided to initialize a hash table, to free a hash table, to look up a
string in a hash table and optionally create an entry for it, and to
traverse a hash table.  There is currently no routine to delete an
string from a hash table.

   The basic hash table does not permit any data to be stored with a
string.  However, a hash table is designed to present a base class from
which other types of hash tables may be derived.  These derived types
may store additional information with the string.  Hash tables were
implemented in this way, rather than simply providing a data pointer in
a hash table entry, because they were designed for use by the linker
back ends.  The linker may create thousands of hash table entries, and
the overhead of allocating private data and storing and following
pointers becomes noticeable.

   The basic hash table code is in 'hash.c'.

* Menu:

* Creating and Freeing a Hash Table::
* Looking Up or Entering a String::
* Traversing a Hash Table::
* Deriving a New Hash Table Type::


File: bfd.info,  Node: Creating and Freeing a Hash Table,  Next: Looking Up or Entering a String,  Prev: Hash Tables,  Up: Hash Tables

2.18.1 Creating and freeing a hash table
----------------------------------------

To create a hash table, create an instance of a 'struct bfd_hash_table'
(defined in 'bfd.h') and call 'bfd_hash_table_init' (if you know
approximately how many entries you will need, the function
'bfd_hash_table_init_n', which takes a SIZE argument, may be used).
'bfd_hash_table_init' returns 'FALSE' if some sort of error occurs.

   The function 'bfd_hash_table_init' take as an argument a function to
use to create new entries.  For a basic hash table, use the function
'bfd_hash_newfunc'.  *Note Deriving a New Hash Table Type::, for why you
would want to use a different value for this argument.

   'bfd_hash_table_init' will create an objalloc which will be used to
allocate new entries.  You may allocate memory on this objalloc using
'bfd_hash_allocate'.

   Use 'bfd_hash_table_free' to free up all the memory that has been
allocated for a hash table.  This will not free up the 'struct
bfd_hash_table' itself, which you must provide.

   Use 'bfd_hash_set_default_size' to set the default size of hash table
to use.


File: bfd.info,  Node: Looking Up or Entering a String,  Next: Traversing a Hash Table,  Prev: Creating and Freeing a Hash Table,  Up: Hash Tables

2.18.2 Looking up or entering a string
--------------------------------------

The function 'bfd_hash_lookup' is used both to look up a string in the
hash table and to create a new entry.

   If the CREATE argument is 'FALSE', 'bfd_hash_lookup' will look up a
string.  If the string is found, it will returns a pointer to a 'struct
bfd_hash_entry'.  If the string is not found in the table
'bfd_hash_lookup' will return 'NULL'.  You should not modify any of the
fields in the returns 'struct bfd_hash_entry'.

   If the CREATE argument is 'TRUE', the string will be entered into the
hash table if it is not already there.  Either way a pointer to a
'struct bfd_hash_entry' will be returned, either to the existing
structure or to a newly created one.  In this case, a 'NULL' return
means that an error occurred.

   If the CREATE argument is 'TRUE', and a new entry is created, the
COPY argument is used to decide whether to copy the string onto the hash
table objalloc or not.  If COPY is passed as 'FALSE', you must be
careful not to deallocate or modify the string as long as the hash table
exists.


File: bfd.info,  Node: Traversing a Hash Table,  Next: Deriving a New Hash Table Type,  Prev: Looking Up or Entering a String,  Up: Hash Tables

2.18.3 Traversing a hash table
------------------------------

The function 'bfd_hash_traverse' may be used to traverse a hash table,
calling a function on each element.  The traversal is done in a random
order.

   'bfd_hash_traverse' takes as arguments a function and a generic 'void
*' pointer.  The function is called with a hash table entry (a 'struct
bfd_hash_entry *') and the generic pointer passed to
'bfd_hash_traverse'.  The function must return a 'boolean' value, which
indicates whether to continue traversing the hash table.  If the
function returns 'FALSE', 'bfd_hash_traverse' will stop the traversal
and return immediately.


File: bfd.info,  Node: Deriving a New Hash Table Type,  Prev: Traversing a Hash Table,  Up: Hash Tables

2.18.4 Deriving a new hash table type
-------------------------------------

Many uses of hash tables want to store additional information which each
entry in the hash table.  Some also find it convenient to store
additional information with the hash table itself.  This may be done
using a derived hash table.

   Since C is not an object oriented language, creating a derived hash
table requires sticking together some boilerplate routines with a few
differences specific to the type of hash table you want to create.

   An example of a derived hash table is the linker hash table.  The
structures for this are defined in 'bfdlink.h'.  The functions are in
'linker.c'.

   You may also derive a hash table from an already derived hash table.
For example, the a.out linker backend code uses a hash table derived
from the linker hash table.

* Menu:

* Define the Derived Structures::
* Write the Derived Creation Routine::
* Write Other Derived Routines::


File: bfd.info,  Node: Define the Derived Structures,  Next: Write the Derived Creation Routine,  Prev: Deriving a New Hash Table Type,  Up: Deriving a New Hash Table Type

2.18.4.1 Define the derived structures
......................................

You must define a structure for an entry in the hash table, and a
structure for the hash table itself.

   The first field in the structure for an entry in the hash table must
be of the type used for an entry in the hash table you are deriving
from.  If you are deriving from a basic hash table this is 'struct
bfd_hash_entry', which is defined in 'bfd.h'.  The first field in the
structure for the hash table itself must be of the type of the hash
table you are deriving from itself.  If you are deriving from a basic
hash table, this is 'struct bfd_hash_table'.

   For example, the linker hash table defines 'struct
bfd_link_hash_entry' (in 'bfdlink.h').  The first field, 'root', is of
type 'struct bfd_hash_entry'.  Similarly, the first field in 'struct
bfd_link_hash_table', 'table', is of type 'struct bfd_hash_table'.


File: bfd.info,  Node: Write the Derived Creation Routine,  Next: Write Other Derived Routines,  Prev: Define the Derived Structures,  Up: Deriving a New Hash Table Type

2.18.4.2 Write the derived creation routine
...........................................

You must write a routine which will create and initialize an entry in
the hash table.  This routine is passed as the function argument to
'bfd_hash_table_init'.

   In order to permit other hash tables to be derived from the hash
table you are creating, this routine must be written in a standard way.

   The first argument to the creation routine is a pointer to a hash
table entry.  This may be 'NULL', in which case the routine should
allocate the right amount of space.  Otherwise the space has already
been allocated by a hash table type derived from this one.

   After allocating space, the creation routine must call the creation
routine of the hash table type it is derived from, passing in a pointer
to the space it just allocated.  This will initialize any fields used by
the base hash table.

   Finally the creation routine must initialize any local fields for the
new hash table type.

   Here is a boilerplate example of a creation routine.  FUNCTION_NAME
is the name of the routine.  ENTRY_TYPE is the type of an entry in the
hash table you are creating.  BASE_NEWFUNC is the name of the creation
routine of the hash table type your hash table is derived from.

     struct bfd_hash_entry *
     FUNCTION_NAME (struct bfd_hash_entry *entry,
                          struct bfd_hash_table *table,
                          const char *string)
     {
       struct ENTRY_TYPE *ret = (ENTRY_TYPE *) entry;

      /* Allocate the structure if it has not already been allocated by a
         derived class.  */
       if (ret == NULL)
         {
           ret = bfd_hash_allocate (table, sizeof (* ret));
           if (ret == NULL)
             return NULL;
         }

      /* Call the allocation method of the base class.  */
       ret = ((ENTRY_TYPE *)
             BASE_NEWFUNC ((struct bfd_hash_entry *) ret, table, string));

      /* Initialize the local fields here.  */

       return (struct bfd_hash_entry *) ret;
     }
   *Description*
The creation routine for the linker hash table, which is in 'linker.c',
looks just like this example.  FUNCTION_NAME is
'_bfd_link_hash_newfunc'.  ENTRY_TYPE is 'struct bfd_link_hash_entry'.
BASE_NEWFUNC is 'bfd_hash_newfunc', the creation routine for a basic
hash table.

   '_bfd_link_hash_newfunc' also initializes the local fields in a
linker hash table entry: 'type', 'written' and 'next'.


File: bfd.info,  Node: Write Other Derived Routines,  Prev: Write the Derived Creation Routine,  Up: Deriving a New Hash Table Type

2.18.4.3 Write other derived routines
.....................................

You will want to write other routines for your new hash table, as well.

   You will want an initialization routine which calls the
initialization routine of the hash table you are deriving from and
initializes any other local fields.  For the linker hash table, this is
'_bfd_link_hash_table_init' in 'linker.c'.

   You will want a lookup routine which calls the lookup routine of the
hash table you are deriving from and casts the result.  The linker hash
table uses 'bfd_link_hash_lookup' in 'linker.c' (this actually takes an
additional argument which it uses to decide how to return the looked up
value).

   You may want a traversal routine.  This should just call the
traversal routine of the hash table you are deriving from with
appropriate casts.  The linker hash table uses 'bfd_link_hash_traverse'
in 'linker.c'.

   These routines may simply be defined as macros.  For example, the
a.out backend linker hash table, which is derived from the linker hash
table, uses macros for the lookup and traversal routines.  These are
'aout_link_hash_lookup' and 'aout_link_hash_traverse' in aoutx.h.


File: bfd.info,  Node: BFD back ends,  Next: GNU Free Documentation License,  Prev: BFD front end,  Up: Top

3 BFD back ends
***************

* Menu:

* What to Put Where::
* aout ::	a.out backends
* coff ::	coff backends
* elf  ::	elf backends
* mmo  ::	mmo backend


File: bfd.info,  Node: What to Put Where,  Next: aout,  Prev: BFD back ends,  Up: BFD back ends

3.1 What to Put Where
=====================

All of BFD lives in one directory.


File: bfd.info,  Node: aout,  Next: coff,  Prev: What to Put Where,  Up: BFD back ends

3.2 a.out backends
==================

*Description*
BFD supports a number of different flavours of a.out format, though the
major differences are only the sizes of the structures on disk, and the
shape of the relocation information.

   The support is split into a basic support file 'aoutx.h' and other
files which derive functions from the base.  One derivation file is
'aoutf1.h' (for a.out flavour 1), and adds to the basic a.out functions
support for sun3, sun4, 386 and 29k a.out files, to create a target jump
vector for a specific target.

   This information is further split out into more specific files for
each machine, including 'sunos.c' for sun3 and sun4, 'newsos3.c' for the
Sony NEWS, and 'demo64.c' for a demonstration of a 64 bit a.out format.

   The base file 'aoutx.h' defines general mechanisms for reading and
writing records to and from disk and various other methods which BFD
requires.  It is included by 'aout32.c' and 'aout64.c' to form the names
'aout_32_swap_exec_header_in', 'aout_64_swap_exec_header_in', etc.

   As an example, this is what goes on to make the back end for a sun4,
from 'aout32.c':

            #define ARCH_SIZE 32
            #include "aoutx.h"

   Which exports names:

            ...
            aout_32_canonicalize_reloc
            aout_32_find_nearest_line
            aout_32_get_lineno
            aout_32_get_reloc_upper_bound
            ...

   from 'sunos.c':

            #define TARGET_NAME "a.out-sunos-big"
            #define VECNAME    sparc_aout_sunos_be_vec
            #include "aoutf1.h"

   requires all the names from 'aout32.c', and produces the jump vector

            sparc_aout_sunos_be_vec

   The file 'host-aout.c' is a special case.  It is for a large set of
hosts that use "more or less standard" a.out files, and for which
cross-debugging is not interesting.  It uses the standard 32-bit a.out
support routines, but determines the file offsets and addresses of the
text, data, and BSS sections, the machine architecture and machine type,
and the entry point address, in a host-dependent manner.  Once these
values have been determined, generic code is used to handle the object
file.

   When porting it to run on a new system, you must supply:

             HOST_PAGE_SIZE
             HOST_SEGMENT_SIZE
             HOST_MACHINE_ARCH       (optional)
             HOST_MACHINE_MACHINE    (optional)
             HOST_TEXT_START_ADDR
             HOST_STACK_END_ADDR

   in the file '../include/sys/h-XXX.h' (for your host).  These values,
plus the structures and macros defined in 'a.out.h' on your host system,
will produce a BFD target that will access ordinary a.out files on your
host.  To configure a new machine to use 'host-aout.c', specify:

            TDEFAULTS = -DDEFAULT_VECTOR=host_aout_big_vec
            TDEPFILES= host-aout.o trad-core.o

   in the 'config/XXX.mt' file, and modify 'configure.ac' to use the
'XXX.mt' file (by setting "'bfd_target=XXX'") when your configuration is
selected.

3.2.1 Relocations
-----------------

*Description*
The file 'aoutx.h' provides for both the _standard_ and _extended_ forms
of a.out relocation records.

   The standard records contain only an address, a symbol index, and a
type field.  The extended records (used on 29ks and sparcs) also have a
full integer for an addend.

3.2.2 Internal entry points
---------------------------

*Description*
'aoutx.h' exports several routines for accessing the contents of an
a.out file, which are gathered and exported in turn by various format
specific files (eg sunos.c).

3.2.2.1 'aout_SIZE_swap_exec_header_in'
.......................................

*Synopsis*
     void aout_SIZE_swap_exec_header_in,
        (bfd *abfd,
         struct external_exec *bytes,
         struct internal_exec *execp);
   *Description*
Swap the information in an executable header RAW_BYTES taken from a raw
byte stream memory image into the internal exec header structure EXECP.

3.2.2.2 'aout_SIZE_swap_exec_header_out'
........................................

*Synopsis*
     void aout_SIZE_swap_exec_header_out
        (bfd *abfd,
         struct internal_exec *execp,
         struct external_exec *raw_bytes);
   *Description*
Swap the information in an internal exec header structure EXECP into the
buffer RAW_BYTES ready for writing to disk.

3.2.2.3 'aout_SIZE_some_aout_object_p'
......................................

*Synopsis*
     const bfd_target *aout_SIZE_some_aout_object_p
        (bfd *abfd,
         struct internal_exec *execp,
         const bfd_target *(*callback_to_real_object_p) (bfd *));
   *Description*
Some a.out variant thinks that the file open in ABFD checking is an
a.out file.  Do some more checking, and set up for access if it really
is.  Call back to the calling environment's "finish up" function just
before returning, to handle any last-minute setup.

3.2.2.4 'aout_SIZE_mkobject'
............................

*Synopsis*
     bfd_boolean aout_SIZE_mkobject, (bfd *abfd);
   *Description*
Initialize BFD ABFD for use with a.out files.

3.2.2.5 'aout_SIZE_machine_type'
................................

*Synopsis*
     enum machine_type  aout_SIZE_machine_type
        (enum bfd_architecture arch,
         unsigned long machine,
         bfd_boolean *unknown);
   *Description*
Keep track of machine architecture and machine type for a.out's.  Return
the 'machine_type' for a particular architecture and machine, or
'M_UNKNOWN' if that exact architecture and machine can't be represented
in a.out format.

   If the architecture is understood, machine type 0 (default) is always
understood.

3.2.2.6 'aout_SIZE_set_arch_mach'
.................................

*Synopsis*
     bfd_boolean aout_SIZE_set_arch_mach,
        (bfd *,
         enum bfd_architecture arch,
         unsigned long machine);
   *Description*
Set the architecture and the machine of the BFD ABFD to the values ARCH
and MACHINE.  Verify that ABFD's format can support the architecture
required.

3.2.2.7 'aout_SIZE_new_section_hook'
....................................

*Synopsis*
     bfd_boolean aout_SIZE_new_section_hook,
        (bfd *abfd,
         asection *newsect);
   *Description*
Called by the BFD in response to a 'bfd_make_section' request.


File: bfd.info,  Node: coff,  Next: elf,  Prev: aout,  Up: BFD back ends

3.3 coff backends
=================

BFD supports a number of different flavours of coff format.  The major
differences between formats are the sizes and alignments of fields in
structures on disk, and the occasional extra field.

   Coff in all its varieties is implemented with a few common files and
a number of implementation specific files.  For example, The 88k bcs
coff format is implemented in the file 'coff-m88k.c'.  This file
'#include's 'coff/m88k.h' which defines the external structure of the
coff format for the 88k, and 'coff/internal.h' which defines the
internal structure.  'coff-m88k.c' also defines the relocations used by
the 88k format *Note Relocations::.

   The Intel i960 processor version of coff is implemented in
'coff-i960.c'.  This file has the same structure as 'coff-m88k.c',
except that it includes 'coff/i960.h' rather than 'coff-m88k.h'.

3.3.1 Porting to a new version of coff
--------------------------------------

The recommended method is to select from the existing implementations
the version of coff which is most like the one you want to use.  For
example, we'll say that i386 coff is the one you select, and that your
coff flavour is called foo.  Copy 'i386coff.c' to 'foocoff.c', copy
'../include/coff/i386.h' to '../include/coff/foo.h', and add the lines
to 'targets.c' and 'Makefile.in' so that your new back end is used.
Alter the shapes of the structures in '../include/coff/foo.h' so that
they match what you need.  You will probably also have to add '#ifdef's
to the code in 'coff/internal.h' and 'coffcode.h' if your version of
coff is too wild.

   You can verify that your new BFD backend works quite simply by
building 'objdump' from the 'binutils' directory, and making sure that
its version of what's going on and your host system's idea (assuming it
has the pretty standard coff dump utility, usually called 'att-dump' or
just 'dump') are the same.  Then clean up your code, and send what
you've done to Cygnus.  Then your stuff will be in the next release, and
you won't have to keep integrating it.

3.3.2 How the coff backend works
--------------------------------

3.3.2.1 File layout
...................

The Coff backend is split into generic routines that are applicable to
any Coff target and routines that are specific to a particular target.
The target-specific routines are further split into ones which are
basically the same for all Coff targets except that they use the
external symbol format or use different values for certain constants.

   The generic routines are in 'coffgen.c'.  These routines work for any
Coff target.  They use some hooks into the target specific code; the
hooks are in a 'bfd_coff_backend_data' structure, one of which exists
for each target.

   The essentially similar target-specific routines are in 'coffcode.h'.
This header file includes executable C code.  The various Coff targets
first include the appropriate Coff header file, make any special defines
that are needed, and then include 'coffcode.h'.

   Some of the Coff targets then also have additional routines in the
target source file itself.

   For example, 'coff-i960.c' includes 'coff/internal.h' and
'coff/i960.h'.  It then defines a few constants, such as 'I960', and
includes 'coffcode.h'.  Since the i960 has complex relocation types,
'coff-i960.c' also includes some code to manipulate the i960 relocs.
This code is not in 'coffcode.h' because it would not be used by any
other target.

3.3.2.2 Coff long section names
...............................

In the standard Coff object format, section names are limited to the
eight bytes available in the 's_name' field of the 'SCNHDR' section
header structure.  The format requires the field to be NUL-padded, but
not necessarily NUL-terminated, so the longest section names permitted
are a full eight characters.

   The Microsoft PE variants of the Coff object file format add an
extension to support the use of long section names.  This extension is
defined in section 4 of the Microsoft PE/COFF specification (rev 8.1).
If a section name is too long to fit into the section header's 's_name'
field, it is instead placed into the string table, and the 's_name'
field is filled with a slash ("/") followed by the ASCII decimal
representation of the offset of the full name relative to the string
table base.

   Note that this implies that the extension can only be used in object
files, as executables do not contain a string table.  The standard
specifies that long section names from objects emitted into executable
images are to be truncated.

   However, as a GNU extension, BFD can generate executable images that
contain a string table and long section names.  This would appear to be
technically valid, as the standard only says that Coff debugging
information is deprecated, not forbidden, and in practice it works,
although some tools that parse PE files expecting the MS standard format
may become confused; 'PEview' is one known example.

   The functionality is supported in BFD by code implemented under the
control of the macro 'COFF_LONG_SECTION_NAMES'.  If not defined, the
format does not support long section names in any way.  If defined, it
is used to initialise a flag, '_bfd_coff_long_section_names', and a hook
function pointer, '_bfd_coff_set_long_section_names', in the Coff
backend data structure.  The flag controls the generation of long
section names in output BFDs at runtime; if it is false, as it will be
by default when generating an executable image, long section names are
truncated; if true, the long section names extension is employed.  The
hook points to a function that allows the value of the flag to be
altered at runtime, on formats that support long section names at all;
on other formats it points to a stub that returns an error indication.

   With input BFDs, the flag is set according to whether any long
section names are detected while reading the section headers.  For a
completely new BFD, the flag is set to the default for the target
format.  This information can be used by a client of the BFD library
when deciding what output format to generate, and means that a BFD that
is opened for read and subsequently converted to a writeable BFD and
modified in-place will retain whatever format it had on input.

   If 'COFF_LONG_SECTION_NAMES' is simply defined (blank), or is defined
to the value "1", then long section names are enabled by default; if it
is defined to the value zero, they are disabled by default (but still
accepted in input BFDs).  The header 'coffcode.h' defines a macro,
'COFF_DEFAULT_LONG_SECTION_NAMES', which is used in the backends to
initialise the backend data structure fields appropriately; see the
comments for further detail.

3.3.2.3 Bit twiddling
.....................

Each flavour of coff supported in BFD has its own header file describing
the external layout of the structures.  There is also an internal
description of the coff layout, in 'coff/internal.h'.  A major function
of the coff backend is swapping the bytes and twiddling the bits to
translate the external form of the structures into the normal internal
form.  This is all performed in the 'bfd_swap'_thing_direction routines.
Some elements are different sizes between different versions of coff; it
is the duty of the coff version specific include file to override the
definitions of various packing routines in 'coffcode.h'.  E.g., the size
of line number entry in coff is sometimes 16 bits, and sometimes 32
bits.  '#define'ing 'PUT_LNSZ_LNNO' and 'GET_LNSZ_LNNO' will select the
correct one.  No doubt, some day someone will find a version of coff
which has a varying field size not catered to at the moment.  To port
BFD, that person will have to add more '#defines'.  Three of the bit
twiddling routines are exported to 'gdb'; 'coff_swap_aux_in',
'coff_swap_sym_in' and 'coff_swap_lineno_in'.  'GDB' reads the symbol
table on its own, but uses BFD to fix things up.  More of the bit
twiddlers are exported for 'gas'; 'coff_swap_aux_out',
'coff_swap_sym_out', 'coff_swap_lineno_out', 'coff_swap_reloc_out',
'coff_swap_filehdr_out', 'coff_swap_aouthdr_out',
'coff_swap_scnhdr_out'.  'Gas' currently keeps track of all the symbol
table and reloc drudgery itself, thereby saving the internal BFD
overhead, but uses BFD to swap things on the way out, making cross ports
much safer.  Doing so also allows BFD (and thus the linker) to use the
same header files as 'gas', which makes one avenue to disaster
disappear.

3.3.2.4 Symbol reading
......................

The simple canonical form for symbols used by BFD is not rich enough to
keep all the information available in a coff symbol table.  The back end
gets around this problem by keeping the original symbol table around,
"behind the scenes".

   When a symbol table is requested (through a call to
'bfd_canonicalize_symtab'), a request gets through to
'coff_get_normalized_symtab'.  This reads the symbol table from the coff
file and swaps all the structures inside into the internal form.  It
also fixes up all the pointers in the table (represented in the file by
offsets from the first symbol in the table) into physical pointers to
elements in the new internal table.  This involves some work since the
meanings of fields change depending upon context: a field that is a
pointer to another structure in the symbol table at one moment may be
the size in bytes of a structure at the next.  Another pass is made over
the table.  All symbols which mark file names ('C_FILE' symbols) are
modified so that the internal string points to the value in the auxent
(the real filename) rather than the normal text associated with the
symbol ('".file"').

   At this time the symbol names are moved around.  Coff stores all
symbols less than nine characters long physically within the symbol
table; longer strings are kept at the end of the file in the string
table.  This pass moves all strings into memory and replaces them with
pointers to the strings.

   The symbol table is massaged once again, this time to create the
canonical table used by the BFD application.  Each symbol is inspected
in turn, and a decision made (using the 'sclass' field) about the
various flags to set in the 'asymbol'.  *Note Symbols::.  The generated
canonical table shares strings with the hidden internal symbol table.

   Any linenumbers are read from the coff file too, and attached to the
symbols which own the functions the linenumbers belong to.

3.3.2.5 Symbol writing
......................

Writing a symbol to a coff file which didn't come from a coff file will
lose any debugging information.  The 'asymbol' structure remembers the
BFD from which the symbol was taken, and on output the back end makes
sure that the same destination target as source target is present.

   When the symbols have come from a coff file then all the debugging
information is preserved.

   Symbol tables are provided for writing to the back end in a vector of
pointers to pointers.  This allows applications like the linker to
accumulate and output large symbol tables without having to do too much
byte copying.

   This function runs through the provided symbol table and patches each
symbol marked as a file place holder ('C_FILE') to point to the next
file place holder in the list.  It also marks each 'offset' field in the
list with the offset from the first symbol of the current symbol.

   Another function of this procedure is to turn the canonical value
form of BFD into the form used by coff.  Internally, BFD expects symbol
values to be offsets from a section base; so a symbol physically at
0x120, but in a section starting at 0x100, would have the value 0x20.
Coff expects symbols to contain their final value, so symbols have their
values changed at this point to reflect their sum with their owning
section.  This transformation uses the 'output_section' field of the
'asymbol''s 'asection' *Note Sections::.

   * 'coff_mangle_symbols'
   This routine runs though the provided symbol table and uses the
offsets generated by the previous pass and the pointers generated when
the symbol table was read in to create the structured hierarchy required
by coff.  It changes each pointer to a symbol into the index into the
symbol table of the asymbol.

   * 'coff_write_symbols'
   This routine runs through the symbol table and patches up the symbols
from their internal form into the coff way, calls the bit twiddlers, and
writes out the table to the file.

3.3.2.6 'coff_symbol_type'
..........................

*Description*
The hidden information for an 'asymbol' is described in a
'combined_entry_type':


     typedef struct coff_ptr_struct
     {
       /* Remembers the offset from the first symbol in the file for
          this symbol. Generated by coff_renumber_symbols.  */
       unsigned int offset;

       /* Should the value of this symbol be renumbered.  Used for
          XCOFF C_BSTAT symbols.  Set by coff_slurp_symbol_table.  */
       unsigned int fix_value : 1;

       /* Should the tag field of this symbol be renumbered.
          Created by coff_pointerize_aux.  */
       unsigned int fix_tag : 1;

       /* Should the endidx field of this symbol be renumbered.
          Created by coff_pointerize_aux.  */
       unsigned int fix_end : 1;

       /* Should the x_csect.x_scnlen field be renumbered.
          Created by coff_pointerize_aux.  */
       unsigned int fix_scnlen : 1;

       /* Fix up an XCOFF C_BINCL/C_EINCL symbol.  The value is the
          index into the line number entries.  Set by coff_slurp_symbol_table.  */
       unsigned int fix_line : 1;

       /* The container for the symbol structure as read and translated
          from the file.  */
       union
       {
         union internal_auxent auxent;
         struct internal_syment syment;
       } u;

      /* Selector for the union above.  */
      bfd_boolean is_sym;
     } combined_entry_type;


     /* Each canonical asymbol really looks like this: */

     typedef struct coff_symbol_struct
     {
       /* The actual symbol which the rest of BFD works with */
       asymbol symbol;

       /* A pointer to the hidden information for this symbol */
       combined_entry_type *native;

       /* A pointer to the linenumber information for this symbol */
       struct lineno_cache_entry *lineno;

       /* Have the line numbers been relocated yet ? */
       bfd_boolean done_lineno;
     } coff_symbol_type;

3.3.2.7 'bfd_coff_backend_data'
...............................

     /* COFF symbol classifications.  */

     enum coff_symbol_classification
     {
       /* Global symbol.  */
       COFF_SYMBOL_GLOBAL,
       /* Common symbol.  */
       COFF_SYMBOL_COMMON,
       /* Undefined symbol.  */
       COFF_SYMBOL_UNDEFINED,
       /* Local symbol.  */
       COFF_SYMBOL_LOCAL,
       /* PE section symbol.  */
       COFF_SYMBOL_PE_SECTION
     };

   Special entry points for gdb to swap in coff symbol table parts:
     typedef struct
     {
       void (*_bfd_coff_swap_aux_in)
         (bfd *, void *, int, int, int, int, void *);

       void (*_bfd_coff_swap_sym_in)
         (bfd *, void *, void *);

       void (*_bfd_coff_swap_lineno_in)
         (bfd *, void *, void *);

       unsigned int (*_bfd_coff_swap_aux_out)
         (bfd *, void *, int, int, int, int, void *);

       unsigned int (*_bfd_coff_swap_sym_out)
         (bfd *, void *, void *);

       unsigned int (*_bfd_coff_swap_lineno_out)
         (bfd *, void *, void *);

       unsigned int (*_bfd_coff_swap_reloc_out)
         (bfd *, void *, void *);

       unsigned int (*_bfd_coff_swap_filehdr_out)
         (bfd *, void *, void *);

       unsigned int (*_bfd_coff_swap_aouthdr_out)
         (bfd *, void *, void *);

       unsigned int (*_bfd_coff_swap_scnhdr_out)
         (bfd *, void *, void *);

       unsigned int _bfd_filhsz;
       unsigned int _bfd_aoutsz;
       unsigned int _bfd_scnhsz;
       unsigned int _bfd_symesz;
       unsigned int _bfd_auxesz;
       unsigned int _bfd_relsz;
       unsigned int _bfd_linesz;
       unsigned int _bfd_filnmlen;
       bfd_boolean _bfd_coff_long_filenames;

       bfd_boolean _bfd_coff_long_section_names;
       bfd_boolean (*_bfd_coff_set_long_section_names)
         (bfd *, int);

       unsigned int _bfd_coff_default_section_alignment_power;
       bfd_boolean _bfd_coff_force_symnames_in_strings;
       unsigned int _bfd_coff_debug_string_prefix_length;
       unsigned int _bfd_coff_max_nscns;

       void (*_bfd_coff_swap_filehdr_in)
         (bfd *, void *, void *);

       void (*_bfd_coff_swap_aouthdr_in)
         (bfd *, void *, void *);

       void (*_bfd_coff_swap_scnhdr_in)
         (bfd *, void *, void *);

       void (*_bfd_coff_swap_reloc_in)
         (bfd *abfd, void *, void *);

       bfd_boolean (*_bfd_coff_bad_format_hook)
         (bfd *, void *);

       bfd_boolean (*_bfd_coff_set_arch_mach_hook)
         (bfd *, void *);

       void * (*_bfd_coff_mkobject_hook)
         (bfd *, void *, void *);

       bfd_boolean (*_bfd_styp_to_sec_flags_hook)
         (bfd *, void *, const char *, asection *, flagword *);

       void (*_bfd_set_alignment_hook)
         (bfd *, asection *, void *);

       bfd_boolean (*_bfd_coff_slurp_symbol_table)
         (bfd *);

       bfd_boolean (*_bfd_coff_symname_in_debug)
         (bfd *, struct internal_syment *);

       bfd_boolean (*_bfd_coff_pointerize_aux_hook)
         (bfd *, combined_entry_type *, combined_entry_type *,
                 unsigned int, combined_entry_type *);

       bfd_boolean (*_bfd_coff_print_aux)
         (bfd *, FILE *, combined_entry_type *, combined_entry_type *,
                 combined_entry_type *, unsigned int);

       void (*_bfd_coff_reloc16_extra_cases)
         (bfd *, struct bfd_link_info *, struct bfd_link_order *, arelent *,
                bfd_byte *, unsigned int *, unsigned int *);

       int (*_bfd_coff_reloc16_estimate)
         (bfd *, asection *, arelent *, unsigned int,
                 struct bfd_link_info *);

       enum coff_symbol_classification (*_bfd_coff_classify_symbol)
         (bfd *, struct internal_syment *);

       bfd_boolean (*_bfd_coff_compute_section_file_positions)
         (bfd *);

       bfd_boolean (*_bfd_coff_start_final_link)
         (bfd *, struct bfd_link_info *);

       bfd_boolean (*_bfd_coff_relocate_section)
         (bfd *, struct bfd_link_info *, bfd *, asection *, bfd_byte *,
                 struct internal_reloc *, struct internal_syment *, asection **);

       reloc_howto_type *(*_bfd_coff_rtype_to_howto)
         (bfd *, asection *, struct internal_reloc *,
                 struct coff_link_hash_entry *, struct internal_syment *,
                 bfd_vma *);

       bfd_boolean (*_bfd_coff_adjust_symndx)
         (bfd *, struct bfd_link_info *, bfd *, asection *,
                 struct internal_reloc *, bfd_boolean *);

       bfd_boolean (*_bfd_coff_link_add_one_symbol)
         (struct bfd_link_info *, bfd *, const char *, flagword,
                 asection *, bfd_vma, const char *, bfd_boolean, bfd_boolean,
                 struct bfd_link_hash_entry **);

       bfd_boolean (*_bfd_coff_link_output_has_begun)
         (bfd *, struct coff_final_link_info *);

       bfd_boolean (*_bfd_coff_final_link_postscript)
         (bfd *, struct coff_final_link_info *);

       bfd_boolean (*_bfd_coff_print_pdata)
         (bfd *, void *);

     } bfd_coff_backend_data;

     #define coff_backend_info(abfd) \
       ((bfd_coff_backend_data *) (abfd)->xvec->backend_data)

     #define bfd_coff_swap_aux_in(a,e,t,c,ind,num,i) \
       ((coff_backend_info (a)->_bfd_coff_swap_aux_in) (a,e,t,c,ind,num,i))

     #define bfd_coff_swap_sym_in(a,e,i) \
       ((coff_backend_info (a)->_bfd_coff_swap_sym_in) (a,e,i))

     #define bfd_coff_swap_lineno_in(a,e,i) \
       ((coff_backend_info ( a)->_bfd_coff_swap_lineno_in) (a,e,i))

     #define bfd_coff_swap_reloc_out(abfd, i, o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_reloc_out) (abfd, i, o))

     #define bfd_coff_swap_lineno_out(abfd, i, o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_lineno_out) (abfd, i, o))

     #define bfd_coff_swap_aux_out(a,i,t,c,ind,num,o) \
       ((coff_backend_info (a)->_bfd_coff_swap_aux_out) (a,i,t,c,ind,num,o))

     #define bfd_coff_swap_sym_out(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_sym_out) (abfd, i, o))

     #define bfd_coff_swap_scnhdr_out(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_out) (abfd, i, o))

     #define bfd_coff_swap_filehdr_out(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_out) (abfd, i, o))

     #define bfd_coff_swap_aouthdr_out(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_out) (abfd, i, o))

     #define bfd_coff_filhsz(abfd) (coff_backend_info (abfd)->_bfd_filhsz)
     #define bfd_coff_aoutsz(abfd) (coff_backend_info (abfd)->_bfd_aoutsz)
     #define bfd_coff_scnhsz(abfd) (coff_backend_info (abfd)->_bfd_scnhsz)
     #define bfd_coff_symesz(abfd) (coff_backend_info (abfd)->_bfd_symesz)
     #define bfd_coff_auxesz(abfd) (coff_backend_info (abfd)->_bfd_auxesz)
     #define bfd_coff_relsz(abfd)  (coff_backend_info (abfd)->_bfd_relsz)
     #define bfd_coff_linesz(abfd) (coff_backend_info (abfd)->_bfd_linesz)
     #define bfd_coff_filnmlen(abfd) (coff_backend_info (abfd)->_bfd_filnmlen)
     #define bfd_coff_long_filenames(abfd) \
       (coff_backend_info (abfd)->_bfd_coff_long_filenames)
     #define bfd_coff_long_section_names(abfd) \
       (coff_backend_info (abfd)->_bfd_coff_long_section_names)
     #define bfd_coff_set_long_section_names(abfd, enable) \
       ((coff_backend_info (abfd)->_bfd_coff_set_long_section_names) (abfd, enable))
     #define bfd_coff_default_section_alignment_power(abfd) \
       (coff_backend_info (abfd)->_bfd_coff_default_section_alignment_power)
     #define bfd_coff_max_nscns(abfd) \
       (coff_backend_info (abfd)->_bfd_coff_max_nscns)

     #define bfd_coff_swap_filehdr_in(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_in) (abfd, i, o))

     #define bfd_coff_swap_aouthdr_in(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_in) (abfd, i, o))

     #define bfd_coff_swap_scnhdr_in(abfd, i,o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_in) (abfd, i, o))

     #define bfd_coff_swap_reloc_in(abfd, i, o) \
       ((coff_backend_info (abfd)->_bfd_coff_swap_reloc_in) (abfd, i, o))

     #define bfd_coff_bad_format_hook(abfd, filehdr) \
       ((coff_backend_info (abfd)->_bfd_coff_bad_format_hook) (abfd, filehdr))

     #define bfd_coff_set_arch_mach_hook(abfd, filehdr)\
       ((coff_backend_info (abfd)->_bfd_coff_set_arch_mach_hook) (abfd, filehdr))
     #define bfd_coff_mkobject_hook(abfd, filehdr, aouthdr)\
       ((coff_backend_info (abfd)->_bfd_coff_mkobject_hook)\
        (abfd, filehdr, aouthdr))

     #define bfd_coff_styp_to_sec_flags_hook(abfd, scnhdr, name, section, flags_ptr)\
       ((coff_backend_info (abfd)->_bfd_styp_to_sec_flags_hook)\
        (abfd, scnhdr, name, section, flags_ptr))

     #define bfd_coff_set_alignment_hook(abfd, sec, scnhdr)\
       ((coff_backend_info (abfd)->_bfd_set_alignment_hook) (abfd, sec, scnhdr))

     #define bfd_coff_slurp_symbol_table(abfd)\
       ((coff_backend_info (abfd)->_bfd_coff_slurp_symbol_table) (abfd))

     #define bfd_coff_symname_in_debug(abfd, sym)\
       ((coff_backend_info (abfd)->_bfd_coff_symname_in_debug) (abfd, sym))

     #define bfd_coff_force_symnames_in_strings(abfd)\
       (coff_backend_info (abfd)->_bfd_coff_force_symnames_in_strings)

     #define bfd_coff_debug_string_prefix_length(abfd)\
       (coff_backend_info (abfd)->_bfd_coff_debug_string_prefix_length)

     #define bfd_coff_print_aux(abfd, file, base, symbol, aux, indaux)\
       ((coff_backend_info (abfd)->_bfd_coff_print_aux)\
        (abfd, file, base, symbol, aux, indaux))

     #define bfd_coff_reloc16_extra_cases(abfd, link_info, link_order,\
                                          reloc, data, src_ptr, dst_ptr)\
       ((coff_backend_info (abfd)->_bfd_coff_reloc16_extra_cases)\
        (abfd, link_info, link_order, reloc, data, src_ptr, dst_ptr))

     #define bfd_coff_reloc16_estimate(abfd, section, reloc, shrink, link_info)\
       ((coff_backend_info (abfd)->_bfd_coff_reloc16_estimate)\
        (abfd, section, reloc, shrink, link_info))

     #define bfd_coff_classify_symbol(abfd, sym)\
       ((coff_backend_info (abfd)->_bfd_coff_classify_symbol)\
        (abfd, sym))

     #define bfd_coff_compute_section_file_positions(abfd)\
       ((coff_backend_info (abfd)->_bfd_coff_compute_section_file_positions)\
        (abfd))

     #define bfd_coff_start_final_link(obfd, info)\
       ((coff_backend_info (obfd)->_bfd_coff_start_final_link)\
        (obfd, info))
     #define bfd_coff_relocate_section(obfd,info,ibfd,o,con,rel,isyms,secs)\
       ((coff_backend_info (ibfd)->_bfd_coff_relocate_section)\
        (obfd, info, ibfd, o, con, rel, isyms, secs))
     #define bfd_coff_rtype_to_howto(abfd, sec, rel, h, sym, addendp)\
       ((coff_backend_info (abfd)->_bfd_coff_rtype_to_howto)\
        (abfd, sec, rel, h, sym, addendp))
     #define bfd_coff_adjust_symndx(obfd, info, ibfd, sec, rel, adjustedp)\
       ((coff_backend_info (abfd)->_bfd_coff_adjust_symndx)\
        (obfd, info, ibfd, sec, rel, adjustedp))
     #define bfd_coff_link_add_one_symbol(info, abfd, name, flags, section,\
                                          value, string, cp, coll, hashp)\
       ((coff_backend_info (abfd)->_bfd_coff_link_add_one_symbol)\
        (info, abfd, name, flags, section, value, string, cp, coll, hashp))

     #define bfd_coff_link_output_has_begun(a,p) \
       ((coff_backend_info (a)->_bfd_coff_link_output_has_begun) (a, p))
     #define bfd_coff_final_link_postscript(a,p) \
       ((coff_backend_info (a)->_bfd_coff_final_link_postscript) (a, p))

     #define bfd_coff_have_print_pdata(a) \
       (coff_backend_info (a)->_bfd_coff_print_pdata)
     #define bfd_coff_print_pdata(a,p) \
       ((coff_backend_info (a)->_bfd_coff_print_pdata) (a, p))

     /* Macro: Returns true if the bfd is a PE executable as opposed to a
        PE object file.  */
     #define bfd_pei_p(abfd) \
       (CONST_STRNEQ ((abfd)->xvec->name, "pei-"))

3.3.2.8 Writing relocations
...........................

To write relocations, the back end steps though the canonical relocation
table and create an 'internal_reloc'.  The symbol index to use is
removed from the 'offset' field in the symbol table supplied.  The
address comes directly from the sum of the section base address and the
relocation offset; the type is dug directly from the howto field.  Then
the 'internal_reloc' is swapped into the shape of an 'external_reloc'
and written out to disk.

3.3.2.9 Reading linenumbers
...........................

Creating the linenumber table is done by reading in the entire coff
linenumber table, and creating another table for internal use.

   A coff linenumber table is structured so that each function is marked
as having a line number of 0.  Each line within the function is an
offset from the first line in the function.  The base of the line number
information for the table is stored in the symbol associated with the
function.

   Note: The PE format uses line number 0 for a flag indicating a new
source file.

   The information is copied from the external to the internal table,
and each symbol which marks a function is marked by pointing its...

   How does this work ?

3.3.2.10 Reading relocations
............................

Coff relocations are easily transformed into the internal BFD form
('arelent').

   Reading a coff relocation table is done in the following stages:

   * Read the entire coff relocation table into memory.

   * Process each relocation in turn; first swap it from the external to
     the internal form.

   * Turn the symbol referenced in the relocation's symbol index into a
     pointer into the canonical symbol table.  This table is the same as
     the one returned by a call to 'bfd_canonicalize_symtab'.  The back
     end will call that routine and save the result if a
     canonicalization hasn't been done.

   * The reloc index is turned into a pointer to a howto structure, in a
     back end specific way.  For instance, the 386 and 960 use the
     'r_type' to directly produce an index into a howto table vector;
     the 88k subtracts a number from the 'r_type' field and creates an
     addend field.


File: bfd.info,  Node: elf,  Next: mmo,  Prev: coff,  Up: BFD back ends

3.4 ELF backends
================

BFD support for ELF formats is being worked on.  Currently, the best
supported back ends are for sparc and i386 (running svr4 or Solaris 2).

   Documentation of the internals of the support code still needs to be
written.  The code is changing quickly enough that we haven't bothered
yet.


File: bfd.info,  Node: mmo,  Prev: elf,  Up: BFD back ends

3.5 mmo backend
===============

The mmo object format is used exclusively together with Professor Donald
E. Knuth's educational 64-bit processor MMIX. The simulator 'mmix' which
is available at <http://mmix.cs.hm.edu/src/index.html> understands this
format.  That package also includes a combined assembler and linker
called 'mmixal'.  The mmo format has no advantages feature-wise compared
to e.g.  ELF. It is a simple non-relocatable object format with no
support for archives or debugging information, except for symbol value
information and line numbers (which is not yet implemented in BFD). See
<http://mmix.cs.hm.edu/> for more information about MMIX. The ELF format
is used for intermediate object files in the BFD implementation.

* Menu:

* File layout::
* Symbol-table::
* mmo section mapping::


File: bfd.info,  Node: File layout,  Next: Symbol-table,  Prev: mmo,  Up: mmo

3.5.1 File layout
-----------------

The mmo file contents is not partitioned into named sections as with
e.g. ELF. Memory areas is formed by specifying the location of the data
that follows.  Only the memory area '0x0000...00' to '0x01ff...ff' is
executable, so it is used for code (and constants) and the area
'0x2000...00' to '0x20ff...ff' is used for writable data.  *Note mmo
section mapping::.

   There is provision for specifying "special data" of 65536 different
types.  We use type 80 (decimal), arbitrarily chosen the same as the ELF
'e_machine' number for MMIX, filling it with section information
normally found in ELF objects.  *Note mmo section mapping::.

   Contents is entered as 32-bit words, xor:ed over previous contents,
always zero-initialized.  A word that starts with the byte '0x98' forms
a command called a 'lopcode', where the next byte distinguished between
the thirteen lopcodes.  The two remaining bytes, called the 'Y' and 'Z'
fields, or the 'YZ' field (a 16-bit big-endian number), are used for
various purposes different for each lopcode.  As documented in
<http://mmix.cs.hm.edu/doc/mmixal.pdf>, the lopcodes are:

'lop_quote'
     0x98000001.  The next word is contents, regardless of whether it
     starts with 0x98 or not.

'lop_loc'
     0x9801YYZZ, where 'Z' is 1 or 2.  This is a location directive,
     setting the location for the next data to the next 32-bit word (for
     Z = 1) or 64-bit word (for Z = 2), plus Y * 2^56.  Normally 'Y' is
     0 for the text segment and 2 for the data segment.  Beware that the
     low bits of non- tetrabyte-aligned values are silently discarded
     when being automatically incremented and when storing contents (in
     contrast to e.g.  its use as current location when followed by
     lop_fixo et al before the next possibly-quoted tetrabyte contents).

'lop_skip'
     0x9802YYZZ. Increase the current location by 'YZ' bytes.

'lop_fixo'
     0x9803YYZZ, where 'Z' is 1 or 2.  Store the current location as 64
     bits into the location pointed to by the next 32-bit (Z = 1) or
     64-bit (Z = 2) word, plus Y * 2^56.

'lop_fixr'
     0x9804YYZZ. 'YZ' is stored into the current location plus 2 - 4 *
     YZ.

'lop_fixrx'
     0x980500ZZ. 'Z' is 16 or 24.  A value 'L' derived from the
     following 32-bit word are used in a manner similar to 'YZ' in
     lop_fixr: it is xor:ed into the current location minus 4 * L.  The
     first byte of the word is 0 or 1.  If it is 1, then L = (LOWEST 24
     BITS OF WORD) - 2^Z, if 0, then L = (LOWEST 24 BITS OF WORD).

'lop_file'
     0x9806YYZZ. 'Y' is the file number, 'Z' is count of 32-bit words.
     Set the file number to 'Y' and the line counter to 0.  The next Z *
     4 bytes contain the file name, padded with zeros if the count is
     not a multiple of four.  The same 'Y' may occur multiple times, but
     'Z' must be 0 for all but the first occurrence.

'lop_line'
     0x9807YYZZ. 'YZ' is the line number.  Together with lop_file, it
     forms the source location for the next 32-bit word.  Note that for
     each non-lopcode 32-bit word, line numbers are assumed incremented
     by one.

'lop_spec'
     0x9808YYZZ. 'YZ' is the type number.  Data until the next lopcode
     other than lop_quote forms special data of type 'YZ'.  *Note mmo
     section mapping::.

     Other types than 80, (or type 80 with a content that does not
     parse) is stored in sections named '.MMIX.spec_data.N' where N is
     the 'YZ'-type.  The flags for such a sections say not to allocate
     or load the data.  The vma is 0.  Contents of multiple occurrences
     of special data N is concatenated to the data of the previous
     lop_spec Ns.  The location in data or code at which the lop_spec
     occurred is lost.

'lop_pre'
     0x980901ZZ. The first lopcode in a file.  The 'Z' field forms the
     length of header information in 32-bit words, where the first word
     tells the time in seconds since '00:00:00 GMT Jan 1 1970'.

'lop_post'
     0x980a00ZZ. Z > 32.  This lopcode follows after all
     content-generating lopcodes in a program.  The 'Z' field denotes
     the value of 'rG' at the beginning of the program.  The following
     256 - Z big-endian 64-bit words are loaded into global registers
     '$G' ... '$255'.

'lop_stab'
     0x980b0000.  The next-to-last lopcode in a program.  Must follow
     immediately after the lop_post lopcode and its data.  After this
     lopcode follows all symbols in a compressed format (*note
     Symbol-table::).

'lop_end'
     0x980cYYZZ. The last lopcode in a program.  It must follow the
     lop_stab lopcode and its data.  The 'YZ' field contains the number
     of 32-bit words of symbol table information after the preceding
     lop_stab lopcode.

   Note that the lopcode "fixups"; 'lop_fixr', 'lop_fixrx' and
'lop_fixo' are not generated by BFD, but are handled.  They are
generated by 'mmixal'.

   This trivial one-label, one-instruction file:

      :Main TRAP 1,2,3

   can be represented this way in mmo:

      0x98090101 - lop_pre, one 32-bit word with timestamp.
      <timestamp>
      0x98010002 - lop_loc, text segment, using a 64-bit address.
                   Note that mmixal does not emit this for the file above.
      0x00000000 - Address, high 32 bits.
      0x00000000 - Address, low 32 bits.
      0x98060002 - lop_file, 2 32-bit words for file-name.
      0x74657374 - "test"
      0x2e730000 - ".s\0\0"
      0x98070001 - lop_line, line 1.
      0x00010203 - TRAP 1,2,3
      0x980a00ff - lop_post, setting $255 to 0.
      0x00000000
      0x00000000
      0x980b0000 - lop_stab for ":Main" = 0, serial 1.
      0x203a4040   *Note Symbol-table::.
      0x10404020
      0x4d206120
      0x69016e00
      0x81000000
      0x980c0005 - lop_end; symbol table contained five 32-bit words.


File: bfd.info,  Node: Symbol-table,  Next: mmo section mapping,  Prev: File layout,  Up: mmo

3.5.2 Symbol table format
-------------------------

From mmixal.w (or really, the generated mmixal.tex) in the MMIXware
package which also contains the 'mmix' simulator: "Symbols are stored
and retrieved by means of a 'ternary search trie', following ideas of
Bentley and Sedgewick.  (See ACM-SIAM Symp. on Discrete Algorithms '8'
(1997), 360-369; R.Sedgewick, 'Algorithms in C' (Reading, Mass.
Addison-Wesley, 1998), '15.4'.)  Each trie node stores a character, and
there are branches to subtries for the cases where a given character is
less than, equal to, or greater than the character in the trie.  There
also is a pointer to a symbol table entry if a symbol ends at the
current node."

   So it's a tree encoded as a stream of bytes.  The stream of bytes
acts on a single virtual global symbol, adding and removing characters
and signalling complete symbol points.  Here, we read the stream and
create symbols at the completion points.

   First, there's a control byte 'm'.  If any of the listed bits in 'm'
is nonzero, we execute what stands at the right, in the listed order:

      (MMO3_LEFT)
      0x40 - Traverse left trie.
             (Read a new command byte and recurse.)

      (MMO3_SYMBITS)
      0x2f - Read the next byte as a character and store it in the
             current character position; increment character position.
             Test the bits of m:

             (MMO3_WCHAR)
             0x80 - The character is 16-bit (so read another byte,
                    merge into current character.

             (MMO3_TYPEBITS)
             0xf  - We have a complete symbol; parse the type, value
                    and serial number and do what should be done
                    with a symbol.  The type and length information
                    is in j = (m & 0xf).

                    (MMO3_REGQUAL_BITS)
                    j == 0xf: A register variable.  The following
                              byte tells which register.
                    j <= 8:   An absolute symbol.  Read j bytes as the
                              big-endian number the symbol equals.
                              A j = 2 with two zero bytes denotes an
                              unknown symbol.
                    j > 8:    As with j <= 8, but add (0x20 << 56)
                              to the value in the following j - 8
                              bytes.

                    Then comes the serial number, as a variant of
                    uleb128, but better named ubeb128:
                    Read bytes and shift the previous value left 7
                    (multiply by 128).  Add in the new byte, repeat
                    until a byte has bit 7 set.  The serial number
                    is the computed value minus 128.

             (MMO3_MIDDLE)
             0x20 - Traverse middle trie.  (Read a new command byte
                    and recurse.)  Decrement character position.

      (MMO3_RIGHT)
      0x10 - Traverse right trie.  (Read a new command byte and
             recurse.)

   Let's look again at the 'lop_stab' for the trivial file (*note File
layout::).

      0x980b0000 - lop_stab for ":Main" = 0, serial 1.
      0x203a4040
      0x10404020
      0x4d206120
      0x69016e00
      0x81000000

   This forms the trivial trie (note that the path between ":" and "M"
is redundant):

      203a     ":"
      40       /
      40      /
      10      \
      40      /
      40     /
      204d  "M"
      2061  "a"
      2069  "i"
      016e  "n" is the last character in a full symbol, and
            with a value represented in one byte.
      00    The value is 0.
      81    The serial number is 1.


File: bfd.info,  Node: mmo section mapping,  Prev: Symbol-table,  Up: mmo

3.5.3 mmo section mapping
-------------------------

The implementation in BFD uses special data type 80 (decimal) to
encapsulate and describe named sections, containing e.g. debug
information.  If needed, any datum in the encapsulation will be quoted
using lop_quote.  First comes a 32-bit word holding the number of 32-bit
words containing the zero-terminated zero-padded segment name.  After
the name there's a 32-bit word holding flags describing the section
type.  Then comes a 64-bit big-endian word with the section length (in
bytes), then another with the section start address.  Depending on the
type of section, the contents might follow, zero-padded to 32-bit
boundary.  For a loadable section (such as data or code), the contents
might follow at some later point, not necessarily immediately, as a
lop_loc with the same start address as in the section description,
followed by the contents.  This in effect forms a descriptor that must
be emitted before the actual contents.  Sections described this way must
not overlap.

   For areas that don't have such descriptors, synthetic sections are
formed by BFD. Consecutive contents in the two memory areas
'0x0000...00' to '0x01ff...ff' and '0x2000...00' to '0x20ff...ff' are
entered in sections named '.text' and '.data' respectively.  If an area
is not otherwise described, but would together with a neighboring lower
area be less than '0x40000000' bytes long, it is joined with the lower
area and the gap is zero-filled.  For other cases, a new section is
formed, named '.MMIX.sec.N'.  Here, N is a number, a running count
through the mmo file, starting at 0.

   A loadable section specified as:

      .section secname,"ax"
      TETRA 1,2,3,4,-1,-2009
      BYTE 80

   and linked to address '0x4', is represented by the sequence:

      0x98080050 - lop_spec 80
      0x00000002 - two 32-bit words for the section name
      0x7365636e - "secn"
      0x616d6500 - "ame\0"
      0x00000033 - flags CODE, READONLY, LOAD, ALLOC
      0x00000000 - high 32 bits of section length
      0x0000001c - section length is 28 bytes; 6 * 4 + 1 + alignment to 32 bits
      0x00000000 - high 32 bits of section address
      0x00000004 - section address is 4
      0x98010002 - 64 bits with address of following data
      0x00000000 - high 32 bits of address
      0x00000004 - low 32 bits: data starts at address 4
      0x00000001 - 1
      0x00000002 - 2
      0x00000003 - 3
      0x00000004 - 4
      0xffffffff - -1
      0xfffff827 - -2009
      0x50000000 - 80 as a byte, padded with zeros.

   Note that the lop_spec wrapping does not include the section
contents.  Compare this to a non-loaded section specified as:

      .section thirdsec
      TETRA 200001,100002
      BYTE 38,40

   This, when linked to address '0x200000000000001c', is represented by:

      0x98080050 - lop_spec 80
      0x00000002 - two 32-bit words for the section name
      0x7365636e - "thir"
      0x616d6500 - "dsec"
      0x00000010 - flag READONLY
      0x00000000 - high 32 bits of section length
      0x0000000c - section length is 12 bytes; 2 * 4 + 2 + alignment to 32 bits
      0x20000000 - high 32 bits of address
      0x0000001c - low 32 bits of address 0x200000000000001c
      0x00030d41 - 200001
      0x000186a2 - 100002
      0x26280000 - 38, 40 as bytes, padded with zeros

   For the latter example, the section contents must not be loaded in
memory, and is therefore specified as part of the special data.  The
address is usually unimportant but might provide information for e.g.
the DWARF 2 debugging format.


File: bfd.info,  Node: GNU Free Documentation License,  Next: BFD Index,  Prev: BFD back ends,  Up: Top

                     Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     <http://fsf.org/>

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.  We
     recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it can
     be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You accept
     the license if you copy, modify or distribute the work in a way
     requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in the
     notice that says that the Document is released under this License.
     If a section does not fit the above definition of Secondary then it
     is not allowed to be designated as Invariant.  The Document may
     contain zero Invariant Sections.  If the Document does not identify
     any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images composed
     of pixels) generic paint programs or (for drawings) some widely
     available drawing editor, and that is suitable for input to text
     formatters or for automatic translation to a variety of formats
     suitable for input to text formatters.  A copy made in an otherwise
     Transparent file format whose markup, or absence of markup, has
     been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if
     used for any substantial amount of text.  A copy that is not
     "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and standard-conforming
     simple HTML, PostScript or PDF designed for human modification.
     Examples of transparent image formats include PNG, XCF and JPG.
     Opaque formats include proprietary formats that can be read and
     edited only by proprietary word processors, SGML or XML for which
     the DTD and/or processing tools are not generally available, and
     the machine-generated HTML, PostScript or PDF produced by some word
     processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     The "publisher" means any person or entity that distributes copies
     of the Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow the
     conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the title
     equally prominent and visible.  You may add other material on the
     covers in addition.  Copying with changes limited to the covers, as
     long as they preserve the title of the Document and satisfy these
     conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a machine-readable
     Transparent copy along with each Opaque copy, or state in or with
     each Opaque copy a computer-network location from which the general
     network-using public has access to download using public-standard
     network protocols a complete Transparent copy of the Document, free
     of added material.  If you use the latter option, you must take
     reasonably prudent steps, when you begin distribution of Opaque
     copies in quantity, to ensure that this Transparent copy will
     remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of copies,
     to give them a chance to provide you with an updated version of the
     Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with the
     Modified Version filling the role of the Document, thus licensing
     distribution and modification of the Modified Version to whoever
     possesses a copy of it.  In addition, you must do these things in
     the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of previous
          versions (which should, if there were any, be listed in the
          History section of the Document).  You may use the same title
          as a previous version if the original publisher of that
          version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on the
          Title Page.  If there is no section Entitled "History" in the
          Document, create one stating the title, year, authors, and
          publisher of the Document as given on its Title Page, then add
          an item describing the Modified Version as stated in the
          previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in the
          "History" section.  You may omit a network location for a work
          that was published at least four years before the Document
          itself, or if the original publisher of the version it refers
          to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section
          all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered
          in their text and in their titles.  Section numbers or the
          equivalent are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option designate
     some or all of these sections as invariant.  To do this, add their
     titles to the list of Invariant Sections in the Modified Version's
     license notice.  These titles must be distinct from any other
     section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end of
     the list of Cover Texts in the Modified Version.  Only one passage
     of Front-Cover Text and one of Back-Cover Text may be added by (or
     through arrangements made by) any one entity.  If the Document
     already includes a cover text for the same cover, previously added
     by you or by arrangement made by the same entity you are acting on
     behalf of, you may not add another; but you may replace the old
     one, on explicit permission from the previous publisher that added
     the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination all
     of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the documents
     in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow this
     License in all other respects regarding verbatim copying of that
     document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of a
     storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense, or distribute it is void,
     and will automatically terminate your rights under this License.

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from you
     under this License.  If your rights have been terminated and not
     permanently reinstated, receipt of a copy of some or all of the
     same material does not give you any rights to use it.

  10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     <http://www.gnu.org/copyleft/>.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If the
     Document does not specify a version number of this License, you may
     choose any version ever published (not as a draft) by the Free
     Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that
     proxy's public statement of acceptance of a version permanently
     authorizes you to choose that version for the Document.

  11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
     World Wide Web server that publishes copyrightable works and also
     provides prominent facilities for anybody to edit those works.  A
     public wiki that anybody can edit is an example of such a server.
     A "Massive Multiauthor Collaboration" (or "MMC") contained in the
     site means any set of copyrightable works thus published on the MMC
     site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0
     license published by Creative Commons Corporation, a not-for-profit
     corporation with a principal place of business in San Francisco,
     California, as well as future copyleft versions of that license
     published by that same organization.

     "Incorporate" means to publish or republish a Document, in whole or
     in part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this
     License, and if all works that were first published under this
     License somewhere other than this MMC, and subsequently
     incorporated in whole or in part into the MMC, (1) had no cover
     texts or invariant sections, and (2) were thus incorporated prior
     to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the
     site under CC-BY-SA on the same site at any time before August 1,
     2009, provided the MMC is eligible for relicensing.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

   If you have Invariant Sections, Front-Cover Texts and Back-Cover
Texts, replace the "with...Texts."  line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

   If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of free
software license, such as the GNU General Public License, to permit
their use in free software.


File: bfd.info,  Node: BFD Index,  Prev: GNU Free Documentation License,  Up: Top

BFD Index
*********

 [index ]
* Menu:

* _bfd_final_link_relocate:              Relocating the section contents.
                                                             (line   22)
* _bfd_generic_link_add_archive_symbols: Adding symbols from an archive.
                                                             (line   15)
* _bfd_generic_link_add_one_symbol:      Adding symbols from an object file.
                                                             (line   19)
* _bfd_generic_make_empty_symbol:        symbol handling functions.
                                                             (line   96)
* _bfd_link_add_symbols in target vector: Adding Symbols to the Hash Table.
                                                             (line    6)
* _bfd_link_final_link in target vector: Performing the Final Link.
                                                             (line    6)
* _bfd_link_hash_table_create in target vector: Creating a Linker Hash Table.
                                                             (line    6)
* _bfd_relocate_contents:                Relocating the section contents.
                                                             (line   22)
* aout_SIZE_machine_type:                aout.               (line  145)
* aout_SIZE_mkobject:                    aout.               (line  137)
* aout_SIZE_new_section_hook:            aout.               (line  175)
* aout_SIZE_set_arch_mach:               aout.               (line  162)
* aout_SIZE_some_aout_object_p:          aout.               (line  123)
* aout_SIZE_swap_exec_header_in:         aout.               (line   99)
* aout_SIZE_swap_exec_header_out:        aout.               (line  111)
* arelent_chain:                         typedef arelent.    (line  340)
* BFD:                                   Overview.           (line    6)
* BFD canonical format:                  Canonical format.   (line   11)
* bfd_alloc:                             Opening and Closing.
                                                             (line  238)
* bfd_alloc2:                            Opening and Closing.
                                                             (line  247)
* bfd_alt_mach_code:                     Miscellaneous.      (line  302)
* bfd_arch_bits_per_address:             Architectures.      (line  598)
* bfd_arch_bits_per_byte:                Architectures.      (line  590)
* bfd_arch_default_fill:                 Architectures.      (line  679)
* bfd_arch_get_compatible:               Architectures.      (line  533)
* bfd_arch_list:                         Architectures.      (line  524)
* bfd_arch_mach_octets_per_byte:         Architectures.      (line  667)
* BFD_ARELOC_BFIN_ADD:                   howto manager.      (line 1011)
* BFD_ARELOC_BFIN_ADDR:                  howto manager.      (line 1045)
* BFD_ARELOC_BFIN_AND:                   howto manager.      (line 1025)
* BFD_ARELOC_BFIN_COMP:                  howto manager.      (line 1039)
* BFD_ARELOC_BFIN_CONST:                 howto manager.      (line 1009)
* BFD_ARELOC_BFIN_DIV:                   howto manager.      (line 1017)
* BFD_ARELOC_BFIN_HWPAGE:                howto manager.      (line 1043)
* BFD_ARELOC_BFIN_LAND:                  howto manager.      (line 1031)
* BFD_ARELOC_BFIN_LEN:                   howto manager.      (line 1035)
* BFD_ARELOC_BFIN_LOR:                   howto manager.      (line 1033)
* BFD_ARELOC_BFIN_LSHIFT:                howto manager.      (line 1021)
* BFD_ARELOC_BFIN_MOD:                   howto manager.      (line 1019)
* BFD_ARELOC_BFIN_MULT:                  howto manager.      (line 1015)
* BFD_ARELOC_BFIN_NEG:                   howto manager.      (line 1037)
* BFD_ARELOC_BFIN_OR:                    howto manager.      (line 1027)
* BFD_ARELOC_BFIN_PAGE:                  howto manager.      (line 1041)
* BFD_ARELOC_BFIN_PUSH:                  howto manager.      (line 1007)
* BFD_ARELOC_BFIN_RSHIFT:                howto manager.      (line 1023)
* BFD_ARELOC_BFIN_SUB:                   howto manager.      (line 1013)
* BFD_ARELOC_BFIN_XOR:                   howto manager.      (line 1029)
* bfd_cache_close:                       File Caching.       (line   25)
* bfd_cache_close_all:                   File Caching.       (line   38)
* bfd_cache_init:                        File Caching.       (line   17)
* bfd_calc_gnu_debuglink_crc32:          Opening and Closing.
                                                             (line  274)
* bfd_canonicalize_reloc:                Miscellaneous.      (line   18)
* bfd_canonicalize_symtab:               symbol handling functions.
                                                             (line   52)
* bfd_check_format:                      Formats.            (line   20)
* bfd_check_format_matches:              Formats.            (line   51)
* bfd_check_overflow:                    typedef arelent.    (line  353)
* bfd_close:                             Opening and Closing.
                                                             (line  160)
* bfd_close_all_done:                    Opening and Closing.
                                                             (line  178)
* bfd_coff_backend_data:                 coff.               (line  307)
* bfd_copy_private_bfd_data:             Miscellaneous.      (line  157)
* bfd_copy_private_header_data:          Miscellaneous.      (line  140)
* bfd_copy_private_section_data:         section prototypes. (line  277)
* bfd_copy_private_symbol_data:          symbol handling functions.
                                                             (line  145)
* bfd_core_file_failing_command:         Core Files.         (line   11)
* bfd_core_file_failing_signal:          Core Files.         (line   20)
* bfd_core_file_pid:                     Core Files.         (line   29)
* bfd_create:                            Opening and Closing.
                                                             (line  197)
* bfd_create_gnu_debuglink_section:      Opening and Closing.
                                                             (line  386)
* bfd_decode_symclass:                   symbol handling functions.
                                                             (line  116)
* bfd_default_arch_struct:               Architectures.      (line  545)
* bfd_default_compatible:                Architectures.      (line  607)
* bfd_default_reloc_type_lookup:         howto manager.      (line 2988)
* bfd_default_scan:                      Architectures.      (line  616)
* bfd_default_set_arch_mach:             Architectures.      (line  563)
* bfd_demangle:                          Miscellaneous.      (line  353)
* bfd_emul_get_commonpagesize:           Miscellaneous.      (line  333)
* bfd_emul_get_maxpagesize:              Miscellaneous.      (line  313)
* bfd_emul_set_commonpagesize:           Miscellaneous.      (line  344)
* bfd_emul_set_maxpagesize:              Miscellaneous.      (line  324)
* bfd_errmsg:                            Error reporting.    (line   67)
* bfd_fdopenr:                           Opening and Closing.
                                                             (line   56)
* bfd_fill_in_gnu_debuglink_section:     Opening and Closing.
                                                             (line  400)
* bfd_find_target:                       bfd_target.         (line  469)
* bfd_find_version_for_sym:              Writing the symbol table.
                                                             (line   83)
* bfd_follow_gnu_debugaltlink:           Opening and Closing.
                                                             (line  366)
* bfd_follow_gnu_debuglink:              Opening and Closing.
                                                             (line  345)
* bfd_fopen:                             Opening and Closing.
                                                             (line   11)
* bfd_format_string:                     Formats.            (line   78)
* bfd_generic_define_common_symbol:      Writing the symbol table.
                                                             (line   69)
* bfd_generic_discard_group:             section prototypes. (line  302)
* bfd_generic_gc_sections:               howto manager.      (line 3019)
* bfd_generic_get_relocated_section_contents: howto manager. (line 3049)
* bfd_generic_is_group_section:          section prototypes. (line  294)
* bfd_generic_lookup_section_flags:      howto manager.      (line 3029)
* bfd_generic_merge_sections:            howto manager.      (line 3039)
* bfd_generic_relax_section:             howto manager.      (line 3006)
* bfd_get_alt_debug_link_info:           Opening and Closing.
                                                             (line  299)
* bfd_get_arch:                          Architectures.      (line  574)
* bfd_get_arch_info:                     Architectures.      (line  626)
* bfd_get_arch_size:                     Miscellaneous.      (line   61)
* bfd_get_assert_handler:                Error reporting.    (line  152)
* bfd_get_debug_link_info:               Opening and Closing.
                                                             (line  288)
* bfd_get_error:                         Error reporting.    (line   48)
* bfd_get_error_handler:                 Error reporting.    (line  119)
* bfd_get_gp_size:                       Miscellaneous.      (line  104)
* bfd_get_linker_section:                section prototypes. (line   35)
* bfd_get_mach:                          Architectures.      (line  582)
* bfd_get_mtime:                         Miscellaneous.      (line  403)
* bfd_get_next_mapent:                   Archives.           (line   57)
* bfd_get_next_section_by_name:          section prototypes. (line   25)
* bfd_get_reloc_code_name:               howto manager.      (line 2997)
* bfd_get_reloc_size:                    typedef arelent.    (line  331)
* bfd_get_reloc_upper_bound:             Miscellaneous.      (line    8)
* bfd_get_section_by_name:               section prototypes. (line   16)
* bfd_get_section_by_name_if:            section prototypes. (line   44)
* bfd_get_section_contents:              section prototypes. (line  250)
* bfd_get_sign_extend_vma:               Miscellaneous.      (line   76)
* bfd_get_size:                          Miscellaneous.      (line  412)
* bfd_get_size <1>:                      Internal.           (line   24)
* bfd_get_symtab_upper_bound:            symbol handling functions.
                                                             (line    5)
* bfd_get_target_info:                   bfd_target.         (line  485)
* bfd_get_unique_section_name:           section prototypes. (line   63)
* bfd_hash_allocate:                     Creating and Freeing a Hash Table.
                                                             (line   17)
* bfd_hash_lookup:                       Looking Up or Entering a String.
                                                             (line    6)
* bfd_hash_newfunc:                      Creating and Freeing a Hash Table.
                                                             (line   12)
* bfd_hash_set_default_size:             Creating and Freeing a Hash Table.
                                                             (line   25)
* bfd_hash_table_free:                   Creating and Freeing a Hash Table.
                                                             (line   21)
* bfd_hash_table_init:                   Creating and Freeing a Hash Table.
                                                             (line    6)
* bfd_hash_table_init_n:                 Creating and Freeing a Hash Table.
                                                             (line    6)
* bfd_hash_traverse:                     Traversing a Hash Table.
                                                             (line    6)
* bfd_hide_sym_by_version:               Writing the symbol table.
                                                             (line   95)
* bfd_h_put_size:                        Internal.           (line   97)
* bfd_init:                              Initialization.     (line   10)
* bfd_install_relocation:                typedef arelent.    (line  394)
* bfd_is_local_label:                    symbol handling functions.
                                                             (line   17)
* bfd_is_local_label_name:               symbol handling functions.
                                                             (line   26)
* bfd_is_target_special_symbol:          symbol handling functions.
                                                             (line   39)
* bfd_is_undefined_symclass:             symbol handling functions.
                                                             (line  125)
* bfd_link_split_section:                Writing the symbol table.
                                                             (line   43)
* bfd_log2:                              Internal.           (line  166)
* bfd_lookup_arch:                       Architectures.      (line  634)
* bfd_make_debug_symbol:                 symbol handling functions.
                                                             (line  106)
* bfd_make_empty_symbol:                 symbol handling functions.
                                                             (line   81)
* bfd_make_readable:                     Opening and Closing.
                                                             (line  224)
* bfd_make_section:                      section prototypes. (line  141)
* bfd_make_section_anyway:               section prototypes. (line  113)
* bfd_make_section_anyway_with_flags:    section prototypes. (line   95)
* bfd_make_section_old_way:              section prototypes. (line   75)
* bfd_make_section_with_flags:           section prototypes. (line  129)
* bfd_make_writable:                     Opening and Closing.
                                                             (line  210)
* bfd_malloc_and_get_section:            section prototypes. (line  267)
* bfd_map_over_sections:                 section prototypes. (line  176)
* bfd_merge_private_bfd_data:            Miscellaneous.      (line  172)
* bfd_mmap:                              Miscellaneous.      (line  440)
* bfd_octets_per_byte:                   Architectures.      (line  657)
* bfd_openr:                             Opening and Closing.
                                                             (line   37)
* bfd_openr_iovec:                       Opening and Closing.
                                                             (line   94)
* bfd_openr_next_archived_file:          Archives.           (line   83)
* bfd_openstreamr:                       Opening and Closing.
                                                             (line   82)
* bfd_openw:                             Opening and Closing.
                                                             (line  145)
* bfd_open_file:                         File Caching.       (line   51)
* bfd_perform_relocation:                typedef arelent.    (line  369)
* bfd_perror:                            Error reporting.    (line   76)
* bfd_printable_arch_mach:               Architectures.      (line  645)
* bfd_printable_name:                    Architectures.      (line  505)
* bfd_print_symbol_vandf:                symbol handling functions.
                                                             (line   73)
* bfd_put_size:                          Internal.           (line   21)
* BFD_RELOC_12_PCREL:                    howto manager.      (line   37)
* BFD_RELOC_14:                          howto manager.      (line   30)
* BFD_RELOC_16:                          howto manager.      (line   29)
* BFD_RELOC_16C_ABS20:                   howto manager.      (line 2086)
* BFD_RELOC_16C_ABS20_C:                 howto manager.      (line 2087)
* BFD_RELOC_16C_ABS24:                   howto manager.      (line 2088)
* BFD_RELOC_16C_ABS24_C:                 howto manager.      (line 2089)
* BFD_RELOC_16C_DISP04:                  howto manager.      (line 2066)
* BFD_RELOC_16C_DISP04_C:                howto manager.      (line 2067)
* BFD_RELOC_16C_DISP08:                  howto manager.      (line 2068)
* BFD_RELOC_16C_DISP08_C:                howto manager.      (line 2069)
* BFD_RELOC_16C_DISP16:                  howto manager.      (line 2070)
* BFD_RELOC_16C_DISP16_C:                howto manager.      (line 2071)
* BFD_RELOC_16C_DISP24:                  howto manager.      (line 2072)
* BFD_RELOC_16C_DISP24a:                 howto manager.      (line 2074)
* BFD_RELOC_16C_DISP24a_C:               howto manager.      (line 2075)
* BFD_RELOC_16C_DISP24_C:                howto manager.      (line 2073)
* BFD_RELOC_16C_IMM04:                   howto manager.      (line 2090)
* BFD_RELOC_16C_IMM04_C:                 howto manager.      (line 2091)
* BFD_RELOC_16C_IMM16:                   howto manager.      (line 2092)
* BFD_RELOC_16C_IMM16_C:                 howto manager.      (line 2093)
* BFD_RELOC_16C_IMM20:                   howto manager.      (line 2094)
* BFD_RELOC_16C_IMM20_C:                 howto manager.      (line 2095)
* BFD_RELOC_16C_IMM24:                   howto manager.      (line 2096)
* BFD_RELOC_16C_IMM24_C:                 howto manager.      (line 2097)
* BFD_RELOC_16C_IMM32:                   howto manager.      (line 2098)
* BFD_RELOC_16C_IMM32_C:                 howto manager.      (line 2099)
* BFD_RELOC_16C_NUM08:                   howto manager.      (line 2060)
* BFD_RELOC_16C_NUM08_C:                 howto manager.      (line 2061)
* BFD_RELOC_16C_NUM16:                   howto manager.      (line 2062)
* BFD_RELOC_16C_NUM16_C:                 howto manager.      (line 2063)
* BFD_RELOC_16C_NUM32:                   howto manager.      (line 2064)
* BFD_RELOC_16C_NUM32_C:                 howto manager.      (line 2065)
* BFD_RELOC_16C_REG04:                   howto manager.      (line 2076)
* BFD_RELOC_16C_REG04a:                  howto manager.      (line 2078)
* BFD_RELOC_16C_REG04a_C:                howto manager.      (line 2079)
* BFD_RELOC_16C_REG04_C:                 howto manager.      (line 2077)
* BFD_RELOC_16C_REG14:                   howto manager.      (line 2080)
* BFD_RELOC_16C_REG14_C:                 howto manager.      (line 2081)
* BFD_RELOC_16C_REG16:                   howto manager.      (line 2082)
* BFD_RELOC_16C_REG16_C:                 howto manager.      (line 2083)
* BFD_RELOC_16C_REG20:                   howto manager.      (line 2084)
* BFD_RELOC_16C_REG20_C:                 howto manager.      (line 2085)
* BFD_RELOC_16_BASEREL:                  howto manager.      (line   92)
* BFD_RELOC_16_GOTOFF:                   howto manager.      (line   51)
* BFD_RELOC_16_GOT_PCREL:                howto manager.      (line   48)
* BFD_RELOC_16_PCREL:                    howto manager.      (line   36)
* BFD_RELOC_16_PCREL_S2:                 howto manager.      (line  102)
* BFD_RELOC_16_PLTOFF:                   howto manager.      (line   63)
* BFD_RELOC_16_PLT_PCREL:                howto manager.      (line   59)
* BFD_RELOC_23_PCREL_S2:                 howto manager.      (line  103)
* BFD_RELOC_24:                          howto manager.      (line   28)
* BFD_RELOC_24_PCREL:                    howto manager.      (line   35)
* BFD_RELOC_24_PLT_PCREL:                howto manager.      (line   58)
* BFD_RELOC_26:                          howto manager.      (line   27)
* BFD_RELOC_32:                          howto manager.      (line   26)
* BFD_RELOC_32_BASEREL:                  howto manager.      (line   91)
* BFD_RELOC_32_GOTOFF:                   howto manager.      (line   50)
* BFD_RELOC_32_GOT_PCREL:                howto manager.      (line   47)
* BFD_RELOC_32_PCREL:                    howto manager.      (line   34)
* BFD_RELOC_32_PCREL_S2:                 howto manager.      (line  101)
* BFD_RELOC_32_PLTOFF:                   howto manager.      (line   62)
* BFD_RELOC_32_PLT_PCREL:                howto manager.      (line   57)
* BFD_RELOC_32_SECREL:                   howto manager.      (line   45)
* BFD_RELOC_386_COPY:                    howto manager.      (line  515)
* BFD_RELOC_386_GLOB_DAT:                howto manager.      (line  516)
* BFD_RELOC_386_GOT32:                   howto manager.      (line  513)
* BFD_RELOC_386_GOTOFF:                  howto manager.      (line  519)
* BFD_RELOC_386_GOTPC:                   howto manager.      (line  520)
* BFD_RELOC_386_IRELATIVE:               howto manager.      (line  536)
* BFD_RELOC_386_JUMP_SLOT:               howto manager.      (line  517)
* BFD_RELOC_386_PLT32:                   howto manager.      (line  514)
* BFD_RELOC_386_RELATIVE:                howto manager.      (line  518)
* BFD_RELOC_386_TLS_DESC:                howto manager.      (line  535)
* BFD_RELOC_386_TLS_DESC_CALL:           howto manager.      (line  534)
* BFD_RELOC_386_TLS_DTPMOD32:            howto manager.      (line  530)
* BFD_RELOC_386_TLS_DTPOFF32:            howto manager.      (line  531)
* BFD_RELOC_386_TLS_GD:                  howto manager.      (line  525)
* BFD_RELOC_386_TLS_GOTDESC:             howto manager.      (line  533)
* BFD_RELOC_386_TLS_GOTIE:               howto manager.      (line  523)
* BFD_RELOC_386_TLS_IE:                  howto manager.      (line  522)
* BFD_RELOC_386_TLS_IE_32:               howto manager.      (line  528)
* BFD_RELOC_386_TLS_LDM:                 howto manager.      (line  526)
* BFD_RELOC_386_TLS_LDO_32:              howto manager.      (line  527)
* BFD_RELOC_386_TLS_LE:                  howto manager.      (line  524)
* BFD_RELOC_386_TLS_LE_32:               howto manager.      (line  529)
* BFD_RELOC_386_TLS_TPOFF:               howto manager.      (line  521)
* BFD_RELOC_386_TLS_TPOFF32:             howto manager.      (line  532)
* BFD_RELOC_390_12:                      howto manager.      (line 1750)
* BFD_RELOC_390_20:                      howto manager.      (line 1831)
* BFD_RELOC_390_COPY:                    howto manager.      (line 1756)
* BFD_RELOC_390_GLOB_DAT:                howto manager.      (line 1758)
* BFD_RELOC_390_GOT12:                   howto manager.      (line 1752)
* BFD_RELOC_390_GOT16:                   howto manager.      (line 1766)
* BFD_RELOC_390_GOT20:                   howto manager.      (line 1832)
* BFD_RELOC_390_GOT64:                   howto manager.      (line 1786)
* BFD_RELOC_390_GOTENT:                  howto manager.      (line 1790)
* BFD_RELOC_390_GOTOFF64:                howto manager.      (line 1792)
* BFD_RELOC_390_GOTPC:                   howto manager.      (line 1764)
* BFD_RELOC_390_GOTPCDBL:                howto manager.      (line 1784)
* BFD_RELOC_390_GOTPLT12:                howto manager.      (line 1794)
* BFD_RELOC_390_GOTPLT16:                howto manager.      (line 1796)
* BFD_RELOC_390_GOTPLT20:                howto manager.      (line 1833)
* BFD_RELOC_390_GOTPLT32:                howto manager.      (line 1798)
* BFD_RELOC_390_GOTPLT64:                howto manager.      (line 1800)
* BFD_RELOC_390_GOTPLTENT:               howto manager.      (line 1802)
* BFD_RELOC_390_IRELATIVE:               howto manager.      (line 1836)
* BFD_RELOC_390_JMP_SLOT:                howto manager.      (line 1760)
* BFD_RELOC_390_PC12DBL:                 howto manager.      (line 1768)
* BFD_RELOC_390_PC16DBL:                 howto manager.      (line 1772)
* BFD_RELOC_390_PC24DBL:                 howto manager.      (line 1776)
* BFD_RELOC_390_PC32DBL:                 howto manager.      (line 1780)
* BFD_RELOC_390_PLT12DBL:                howto manager.      (line 1770)
* BFD_RELOC_390_PLT16DBL:                howto manager.      (line 1774)
* BFD_RELOC_390_PLT24DBL:                howto manager.      (line 1778)
* BFD_RELOC_390_PLT32:                   howto manager.      (line 1754)
* BFD_RELOC_390_PLT32DBL:                howto manager.      (line 1782)
* BFD_RELOC_390_PLT64:                   howto manager.      (line 1788)
* BFD_RELOC_390_PLTOFF16:                howto manager.      (line 1804)
* BFD_RELOC_390_PLTOFF32:                howto manager.      (line 1806)
* BFD_RELOC_390_PLTOFF64:                howto manager.      (line 1808)
* BFD_RELOC_390_RELATIVE:                howto manager.      (line 1762)
* BFD_RELOC_390_TLS_DTPMOD:              howto manager.      (line 1827)
* BFD_RELOC_390_TLS_DTPOFF:              howto manager.      (line 1828)
* BFD_RELOC_390_TLS_GD32:                howto manager.      (line 1813)
* BFD_RELOC_390_TLS_GD64:                howto manager.      (line 1814)
* BFD_RELOC_390_TLS_GDCALL:              howto manager.      (line 1811)
* BFD_RELOC_390_TLS_GOTIE12:             howto manager.      (line 1815)
* BFD_RELOC_390_TLS_GOTIE20:             howto manager.      (line 1834)
* BFD_RELOC_390_TLS_GOTIE32:             howto manager.      (line 1816)
* BFD_RELOC_390_TLS_GOTIE64:             howto manager.      (line 1817)
* BFD_RELOC_390_TLS_IE32:                howto manager.      (line 1820)
* BFD_RELOC_390_TLS_IE64:                howto manager.      (line 1821)
* BFD_RELOC_390_TLS_IEENT:               howto manager.      (line 1822)
* BFD_RELOC_390_TLS_LDCALL:              howto manager.      (line 1812)
* BFD_RELOC_390_TLS_LDM32:               howto manager.      (line 1818)
* BFD_RELOC_390_TLS_LDM64:               howto manager.      (line 1819)
* BFD_RELOC_390_TLS_LDO32:               howto manager.      (line 1825)
* BFD_RELOC_390_TLS_LDO64:               howto manager.      (line 1826)
* BFD_RELOC_390_TLS_LE32:                howto manager.      (line 1823)
* BFD_RELOC_390_TLS_LE64:                howto manager.      (line 1824)
* BFD_RELOC_390_TLS_LOAD:                howto manager.      (line 1810)
* BFD_RELOC_390_TLS_TPOFF:               howto manager.      (line 1829)
* BFD_RELOC_64:                          howto manager.      (line   25)
* BFD_RELOC_64_PCREL:                    howto manager.      (line   33)
* BFD_RELOC_64_PLTOFF:                   howto manager.      (line   61)
* BFD_RELOC_64_PLT_PCREL:                howto manager.      (line   56)
* BFD_RELOC_68K_GLOB_DAT:                howto manager.      (line   72)
* BFD_RELOC_68K_JMP_SLOT:                howto manager.      (line   73)
* BFD_RELOC_68K_RELATIVE:                howto manager.      (line   74)
* BFD_RELOC_68K_TLS_GD16:                howto manager.      (line   76)
* BFD_RELOC_68K_TLS_GD32:                howto manager.      (line   75)
* BFD_RELOC_68K_TLS_GD8:                 howto manager.      (line   77)
* BFD_RELOC_68K_TLS_IE16:                howto manager.      (line   85)
* BFD_RELOC_68K_TLS_IE32:                howto manager.      (line   84)
* BFD_RELOC_68K_TLS_IE8:                 howto manager.      (line   86)
* BFD_RELOC_68K_TLS_LDM16:               howto manager.      (line   79)
* BFD_RELOC_68K_TLS_LDM32:               howto manager.      (line   78)
* BFD_RELOC_68K_TLS_LDM8:                howto manager.      (line   80)
* BFD_RELOC_68K_TLS_LDO16:               howto manager.      (line   82)
* BFD_RELOC_68K_TLS_LDO32:               howto manager.      (line   81)
* BFD_RELOC_68K_TLS_LDO8:                howto manager.      (line   83)
* BFD_RELOC_68K_TLS_LE16:                howto manager.      (line   88)
* BFD_RELOC_68K_TLS_LE32:                howto manager.      (line   87)
* BFD_RELOC_68K_TLS_LE8:                 howto manager.      (line   89)
* BFD_RELOC_8:                           howto manager.      (line   31)
* BFD_RELOC_860_COPY:                    howto manager.      (line 2201)
* BFD_RELOC_860_GLOB_DAT:                howto manager.      (line 2202)
* BFD_RELOC_860_HAGOT:                   howto manager.      (line 2227)
* BFD_RELOC_860_HAGOTOFF:                howto manager.      (line 2228)
* BFD_RELOC_860_HAPC:                    howto manager.      (line 2229)
* BFD_RELOC_860_HIGH:                    howto manager.      (line 2230)
* BFD_RELOC_860_HIGHADJ:                 howto manager.      (line 2226)
* BFD_RELOC_860_HIGOT:                   howto manager.      (line 2231)
* BFD_RELOC_860_HIGOTOFF:                howto manager.      (line 2232)
* BFD_RELOC_860_JUMP_SLOT:               howto manager.      (line 2203)
* BFD_RELOC_860_LOGOT0:                  howto manager.      (line 2215)
* BFD_RELOC_860_LOGOT1:                  howto manager.      (line 2217)
* BFD_RELOC_860_LOGOTOFF0:               howto manager.      (line 2219)
* BFD_RELOC_860_LOGOTOFF1:               howto manager.      (line 2221)
* BFD_RELOC_860_LOGOTOFF2:               howto manager.      (line 2223)
* BFD_RELOC_860_LOGOTOFF3:               howto manager.      (line 2224)
* BFD_RELOC_860_LOPC:                    howto manager.      (line 2225)
* BFD_RELOC_860_LOW0:                    howto manager.      (line 2208)
* BFD_RELOC_860_LOW1:                    howto manager.      (line 2210)
* BFD_RELOC_860_LOW2:                    howto manager.      (line 2212)
* BFD_RELOC_860_LOW3:                    howto manager.      (line 2214)
* BFD_RELOC_860_PC16:                    howto manager.      (line 2207)
* BFD_RELOC_860_PC26:                    howto manager.      (line 2205)
* BFD_RELOC_860_PLT26:                   howto manager.      (line 2206)
* BFD_RELOC_860_RELATIVE:                howto manager.      (line 2204)
* BFD_RELOC_860_SPGOT0:                  howto manager.      (line 2216)
* BFD_RELOC_860_SPGOT1:                  howto manager.      (line 2218)
* BFD_RELOC_860_SPGOTOFF0:               howto manager.      (line 2220)
* BFD_RELOC_860_SPGOTOFF1:               howto manager.      (line 2222)
* BFD_RELOC_860_SPLIT0:                  howto manager.      (line 2209)
* BFD_RELOC_860_SPLIT1:                  howto manager.      (line 2211)
* BFD_RELOC_860_SPLIT2:                  howto manager.      (line 2213)
* BFD_RELOC_8_BASEREL:                   howto manager.      (line   96)
* BFD_RELOC_8_FFnn:                      howto manager.      (line   99)
* BFD_RELOC_8_GOTOFF:                    howto manager.      (line   55)
* BFD_RELOC_8_GOT_PCREL:                 howto manager.      (line   49)
* BFD_RELOC_8_PCREL:                     howto manager.      (line   38)
* BFD_RELOC_8_PLTOFF:                    howto manager.      (line   67)
* BFD_RELOC_8_PLT_PCREL:                 howto manager.      (line   60)
* BFD_RELOC_AARCH64_16:                  howto manager.      (line 2555)
* BFD_RELOC_AARCH64_16_PCREL:            howto manager.      (line 2561)
* BFD_RELOC_AARCH64_32:                  howto manager.      (line 2554)
* BFD_RELOC_AARCH64_32_PCREL:            howto manager.      (line 2560)
* BFD_RELOC_AARCH64_64:                  howto manager.      (line 2553)
* BFD_RELOC_AARCH64_64_PCREL:            howto manager.      (line 2559)
* BFD_RELOC_AARCH64_ADD_LO12:            howto manager.      (line 2611)
* BFD_RELOC_AARCH64_ADR_GOT_PAGE:        howto manager.      (line 2657)
* BFD_RELOC_AARCH64_ADR_HI21_NC_PCREL:   howto manager.      (line 2607)
* BFD_RELOC_AARCH64_ADR_HI21_PCREL:      howto manager.      (line 2604)
* BFD_RELOC_AARCH64_ADR_LO21_PCREL:      howto manager.      (line 2601)
* BFD_RELOC_AARCH64_BRANCH19:            howto manager.      (line 2623)
* BFD_RELOC_AARCH64_CALL26:              howto manager.      (line 2631)
* BFD_RELOC_AARCH64_COPY:                howto manager.      (line 2728)
* BFD_RELOC_AARCH64_GAS_INTERNAL_FIXUP:  howto manager.      (line 2752)
* BFD_RELOC_AARCH64_GLOB_DAT:            howto manager.      (line 2730)
* BFD_RELOC_AARCH64_GOT_LD_PREL19:       howto manager.      (line 2651)
* BFD_RELOC_AARCH64_IRELATIVE:           howto manager.      (line 2744)
* BFD_RELOC_AARCH64_JUMP26:              howto manager.      (line 2627)
* BFD_RELOC_AARCH64_JUMP_SLOT:           howto manager.      (line 2732)
* BFD_RELOC_AARCH64_LD32_GOT_LO12_NC:    howto manager.      (line 2665)
* BFD_RELOC_AARCH64_LD64_GOT_LO12_NC:    howto manager.      (line 2661)
* BFD_RELOC_AARCH64_LDST128_LO12:        howto manager.      (line 2647)
* BFD_RELOC_AARCH64_LDST16_LO12:         howto manager.      (line 2635)
* BFD_RELOC_AARCH64_LDST32_LO12:         howto manager.      (line 2639)
* BFD_RELOC_AARCH64_LDST64_LO12:         howto manager.      (line 2643)
* BFD_RELOC_AARCH64_LDST8_LO12:          howto manager.      (line 2615)
* BFD_RELOC_AARCH64_LDST_LO12:           howto manager.      (line 2755)
* BFD_RELOC_AARCH64_LD_GOT_LO12_NC:      howto manager.      (line 2759)
* BFD_RELOC_AARCH64_LD_LO19_PCREL:       howto manager.      (line 2597)
* BFD_RELOC_AARCH64_MOVW_G0:             howto manager.      (line 2564)
* BFD_RELOC_AARCH64_MOVW_G0_NC:          howto manager.      (line 2567)
* BFD_RELOC_AARCH64_MOVW_G0_S:           howto manager.      (line 2585)
* BFD_RELOC_AARCH64_MOVW_G1:             howto manager.      (line 2570)
* BFD_RELOC_AARCH64_MOVW_G1_NC:          howto manager.      (line 2573)
* BFD_RELOC_AARCH64_MOVW_G1_S:           howto manager.      (line 2589)
* BFD_RELOC_AARCH64_MOVW_G2:             howto manager.      (line 2576)
* BFD_RELOC_AARCH64_MOVW_G2_NC:          howto manager.      (line 2579)
* BFD_RELOC_AARCH64_MOVW_G2_S:           howto manager.      (line 2593)
* BFD_RELOC_AARCH64_MOVW_G3:             howto manager.      (line 2582)
* BFD_RELOC_AARCH64_NONE:                howto manager.      (line 2551)
* BFD_RELOC_AARCH64_RELATIVE:            howto manager.      (line 2734)
* BFD_RELOC_AARCH64_RELOC_END:           howto manager.      (line 2746)
* BFD_RELOC_AARCH64_RELOC_START:         howto manager.      (line 2546)
* BFD_RELOC_AARCH64_TLSDESC:             howto manager.      (line 2742)
* BFD_RELOC_AARCH64_TLSDESC_ADD:         howto manager.      (line 2724)
* BFD_RELOC_AARCH64_TLSDESC_ADD_LO12_NC: howto manager.      (line 2716)
* BFD_RELOC_AARCH64_TLSDESC_ADR_PAGE21:  howto manager.      (line 2710)
* BFD_RELOC_AARCH64_TLSDESC_ADR_PREL21:  howto manager.      (line 2708)
* BFD_RELOC_AARCH64_TLSDESC_CALL:        howto manager.      (line 2726)
* BFD_RELOC_AARCH64_TLSDESC_LD32_LO12_NC: howto manager.     (line 2714)
* BFD_RELOC_AARCH64_TLSDESC_LD64_LO12_NC: howto manager.     (line 2712)
* BFD_RELOC_AARCH64_TLSDESC_LDR:         howto manager.      (line 2722)
* BFD_RELOC_AARCH64_TLSDESC_LD_LO12_NC:  howto manager.      (line 2765)
* BFD_RELOC_AARCH64_TLSDESC_LD_PREL19:   howto manager.      (line 2706)
* BFD_RELOC_AARCH64_TLSDESC_OFF_G0_NC:   howto manager.      (line 2720)
* BFD_RELOC_AARCH64_TLSDESC_OFF_G1:      howto manager.      (line 2718)
* BFD_RELOC_AARCH64_TLSGD_ADD_LO12_NC:   howto manager.      (line 2674)
* BFD_RELOC_AARCH64_TLSGD_ADR_PAGE21:    howto manager.      (line 2669)
* BFD_RELOC_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21: howto manager.
                                                             (line 2682)
* BFD_RELOC_AARCH64_TLSIE_LD32_GOTTPREL_LO12_NC: howto manager.
                                                             (line 2686)
* BFD_RELOC_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC: howto manager.
                                                             (line 2684)
* BFD_RELOC_AARCH64_TLSIE_LD_GOTTPREL_LO12_NC: howto manager.
                                                             (line 2762)
* BFD_RELOC_AARCH64_TLSIE_LD_GOTTPREL_PREL19: howto manager. (line 2688)
* BFD_RELOC_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC: howto manager.
                                                             (line 2680)
* BFD_RELOC_AARCH64_TLSIE_MOVW_GOTTPREL_G1: howto manager.   (line 2678)
* BFD_RELOC_AARCH64_TLSLE_ADD_TPREL_HI12: howto manager.     (line 2700)
* BFD_RELOC_AARCH64_TLSLE_ADD_TPREL_LO12: howto manager.     (line 2702)
* BFD_RELOC_AARCH64_TLSLE_ADD_TPREL_LO12_NC: howto manager.  (line 2704)
* BFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G0: howto manager.      (line 2696)
* BFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G0_NC: howto manager.   (line 2698)
* BFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G1: howto manager.      (line 2692)
* BFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G1_NC: howto manager.   (line 2694)
* BFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G2: howto manager.      (line 2690)
* BFD_RELOC_AARCH64_TLS_DTPMOD:          howto manager.      (line 2736)
* BFD_RELOC_AARCH64_TLS_DTPREL:          howto manager.      (line 2738)
* BFD_RELOC_AARCH64_TLS_TPREL:           howto manager.      (line 2740)
* BFD_RELOC_AARCH64_TSTBR14:             howto manager.      (line 2619)
* BFD_RELOC_ALPHA_BOH:                   howto manager.      (line  292)
* BFD_RELOC_ALPHA_BRSGP:                 howto manager.      (line  279)
* BFD_RELOC_ALPHA_BSR:                   howto manager.      (line  286)
* BFD_RELOC_ALPHA_CODEADDR:              howto manager.      (line  272)
* BFD_RELOC_ALPHA_DTPMOD64:              howto manager.      (line  297)
* BFD_RELOC_ALPHA_DTPREL16:              howto manager.      (line  302)
* BFD_RELOC_ALPHA_DTPREL64:              howto manager.      (line  299)
* BFD_RELOC_ALPHA_DTPREL_HI16:           howto manager.      (line  300)
* BFD_RELOC_ALPHA_DTPREL_LO16:           howto manager.      (line  301)
* BFD_RELOC_ALPHA_ELF_LITERAL:           howto manager.      (line  240)
* BFD_RELOC_ALPHA_GOTDTPREL16:           howto manager.      (line  298)
* BFD_RELOC_ALPHA_GOTTPREL16:            howto manager.      (line  303)
* BFD_RELOC_ALPHA_GPDISP:                howto manager.      (line  235)
* BFD_RELOC_ALPHA_GPDISP_HI16:           howto manager.      (line  223)
* BFD_RELOC_ALPHA_GPDISP_LO16:           howto manager.      (line  230)
* BFD_RELOC_ALPHA_GPREL_HI16:            howto manager.      (line  275)
* BFD_RELOC_ALPHA_GPREL_LO16:            howto manager.      (line  276)
* BFD_RELOC_ALPHA_HINT:                  howto manager.      (line  265)
* BFD_RELOC_ALPHA_LDA:                   howto manager.      (line  289)
* BFD_RELOC_ALPHA_LINKAGE:               howto manager.      (line  269)
* BFD_RELOC_ALPHA_LITERAL:               howto manager.      (line  239)
* BFD_RELOC_ALPHA_LITUSE:                howto manager.      (line  241)
* BFD_RELOC_ALPHA_NOP:                   howto manager.      (line  283)
* BFD_RELOC_ALPHA_TLSGD:                 howto manager.      (line  295)
* BFD_RELOC_ALPHA_TLSLDM:                howto manager.      (line  296)
* BFD_RELOC_ALPHA_TPREL16:               howto manager.      (line  307)
* BFD_RELOC_ALPHA_TPREL64:               howto manager.      (line  304)
* BFD_RELOC_ALPHA_TPREL_HI16:            howto manager.      (line  305)
* BFD_RELOC_ALPHA_TPREL_LO16:            howto manager.      (line  306)
* BFD_RELOC_ARC_B22_PCREL:               howto manager.      (line  958)
* BFD_RELOC_ARC_B26:                     howto manager.      (line  962)
* BFD_RELOC_ARM_ADRL_IMMEDIATE:          howto manager.      (line  832)
* BFD_RELOC_ARM_ADR_IMM:                 howto manager.      (line  846)
* BFD_RELOC_ARM_ALU_PC_G0:               howto manager.      (line  799)
* BFD_RELOC_ARM_ALU_PC_G0_NC:            howto manager.      (line  798)
* BFD_RELOC_ARM_ALU_PC_G1:               howto manager.      (line  801)
* BFD_RELOC_ARM_ALU_PC_G1_NC:            howto manager.      (line  800)
* BFD_RELOC_ARM_ALU_PC_G2:               howto manager.      (line  802)
* BFD_RELOC_ARM_ALU_SB_G0:               howto manager.      (line  813)
* BFD_RELOC_ARM_ALU_SB_G0_NC:            howto manager.      (line  812)
* BFD_RELOC_ARM_ALU_SB_G1:               howto manager.      (line  815)
* BFD_RELOC_ARM_ALU_SB_G1_NC:            howto manager.      (line  814)
* BFD_RELOC_ARM_ALU_SB_G2:               howto manager.      (line  816)
* BFD_RELOC_ARM_CP_OFF_IMM:              howto manager.      (line  842)
* BFD_RELOC_ARM_CP_OFF_IMM_S2:           howto manager.      (line  843)
* BFD_RELOC_ARM_GLOB_DAT:                howto manager.      (line  775)
* BFD_RELOC_ARM_GOT32:                   howto manager.      (line  776)
* BFD_RELOC_ARM_GOTOFF:                  howto manager.      (line  779)
* BFD_RELOC_ARM_GOTPC:                   howto manager.      (line  780)
* BFD_RELOC_ARM_GOT_PREL:                howto manager.      (line  781)
* BFD_RELOC_ARM_HVC:                     howto manager.      (line  839)
* BFD_RELOC_ARM_HWLITERAL:               howto manager.      (line  853)
* BFD_RELOC_ARM_IMMEDIATE:               howto manager.      (line  831)
* BFD_RELOC_ARM_IN_POOL:                 howto manager.      (line  849)
* BFD_RELOC_ARM_IRELATIVE:               howto manager.      (line  829)
* BFD_RELOC_ARM_JUMP_SLOT:               howto manager.      (line  774)
* BFD_RELOC_ARM_LDC_PC_G0:               howto manager.      (line  809)
* BFD_RELOC_ARM_LDC_PC_G1:               howto manager.      (line  810)
* BFD_RELOC_ARM_LDC_PC_G2:               howto manager.      (line  811)
* BFD_RELOC_ARM_LDC_SB_G0:               howto manager.      (line  823)
* BFD_RELOC_ARM_LDC_SB_G1:               howto manager.      (line  824)
* BFD_RELOC_ARM_LDC_SB_G2:               howto manager.      (line  825)
* BFD_RELOC_ARM_LDRS_PC_G0:              howto manager.      (line  806)
* BFD_RELOC_ARM_LDRS_PC_G1:              howto manager.      (line  807)
* BFD_RELOC_ARM_LDRS_PC_G2:              howto manager.      (line  808)
* BFD_RELOC_ARM_LDRS_SB_G0:              howto manager.      (line  820)
* BFD_RELOC_ARM_LDRS_SB_G1:              howto manager.      (line  821)
* BFD_RELOC_ARM_LDRS_SB_G2:              howto manager.      (line  822)
* BFD_RELOC_ARM_LDR_IMM:                 howto manager.      (line  847)
* BFD_RELOC_ARM_LDR_PC_G0:               howto manager.      (line  803)
* BFD_RELOC_ARM_LDR_PC_G1:               howto manager.      (line  804)
* BFD_RELOC_ARM_LDR_PC_G2:               howto manager.      (line  805)
* BFD_RELOC_ARM_LDR_SB_G0:               howto manager.      (line  817)
* BFD_RELOC_ARM_LDR_SB_G1:               howto manager.      (line  818)
* BFD_RELOC_ARM_LDR_SB_G2:               howto manager.      (line  819)
* BFD_RELOC_ARM_LITERAL:                 howto manager.      (line  848)
* BFD_RELOC_ARM_MOVT:                    howto manager.      (line  766)
* BFD_RELOC_ARM_MOVT_PCREL:              howto manager.      (line  768)
* BFD_RELOC_ARM_MOVW:                    howto manager.      (line  765)
* BFD_RELOC_ARM_MOVW_PCREL:              howto manager.      (line  767)
* BFD_RELOC_ARM_MULTI:                   howto manager.      (line  841)
* BFD_RELOC_ARM_OFFSET_IMM:              howto manager.      (line  746)
* BFD_RELOC_ARM_OFFSET_IMM8:             howto manager.      (line  850)
* BFD_RELOC_ARM_PCREL_BLX:               howto manager.      (line  722)
* BFD_RELOC_ARM_PCREL_BRANCH:            howto manager.      (line  719)
* BFD_RELOC_ARM_PCREL_CALL:              howto manager.      (line  730)
* BFD_RELOC_ARM_PCREL_JUMP:              howto manager.      (line  733)
* BFD_RELOC_ARM_PLT32:                   howto manager.      (line  777)
* BFD_RELOC_ARM_PREL31:                  howto manager.      (line  763)
* BFD_RELOC_ARM_RELATIVE:                howto manager.      (line  778)
* BFD_RELOC_ARM_ROSEGREL32:              howto manager.      (line  755)
* BFD_RELOC_ARM_SBREL32:                 howto manager.      (line  757)
* BFD_RELOC_ARM_SHIFT_IMM:               howto manager.      (line  837)
* BFD_RELOC_ARM_SMC:                     howto manager.      (line  838)
* BFD_RELOC_ARM_SWI:                     howto manager.      (line  840)
* BFD_RELOC_ARM_T32_ADD_IMM:             howto manager.      (line  834)
* BFD_RELOC_ARM_T32_ADD_PC12:            howto manager.      (line  836)
* BFD_RELOC_ARM_T32_CP_OFF_IMM:          howto manager.      (line  844)
* BFD_RELOC_ARM_T32_CP_OFF_IMM_S2:       howto manager.      (line  845)
* BFD_RELOC_ARM_T32_IMM12:               howto manager.      (line  835)
* BFD_RELOC_ARM_T32_IMMEDIATE:           howto manager.      (line  833)
* BFD_RELOC_ARM_T32_OFFSET_IMM:          howto manager.      (line  852)
* BFD_RELOC_ARM_T32_OFFSET_U8:           howto manager.      (line  851)
* BFD_RELOC_ARM_TARGET1:                 howto manager.      (line  752)
* BFD_RELOC_ARM_TARGET2:                 howto manager.      (line  759)
* BFD_RELOC_ARM_THM_TLS_CALL:            howto manager.      (line  793)
* BFD_RELOC_ARM_THM_TLS_DESCSEQ:         howto manager.      (line  795)
* BFD_RELOC_ARM_THUMB_ADD:               howto manager.      (line  854)
* BFD_RELOC_ARM_THUMB_IMM:               howto manager.      (line  855)
* BFD_RELOC_ARM_THUMB_MOVT:              howto manager.      (line  770)
* BFD_RELOC_ARM_THUMB_MOVT_PCREL:        howto manager.      (line  772)
* BFD_RELOC_ARM_THUMB_MOVW:              howto manager.      (line  769)
* BFD_RELOC_ARM_THUMB_MOVW_PCREL:        howto manager.      (line  771)
* BFD_RELOC_ARM_THUMB_OFFSET:            howto manager.      (line  749)
* BFD_RELOC_ARM_THUMB_SHIFT:             howto manager.      (line  856)
* BFD_RELOC_ARM_TLS_CALL:                howto manager.      (line  792)
* BFD_RELOC_ARM_TLS_DESC:                howto manager.      (line  796)
* BFD_RELOC_ARM_TLS_DESCSEQ:             howto manager.      (line  794)
* BFD_RELOC_ARM_TLS_DTPMOD32:            howto manager.      (line  787)
* BFD_RELOC_ARM_TLS_DTPOFF32:            howto manager.      (line  786)
* BFD_RELOC_ARM_TLS_GD32:                howto manager.      (line  783)
* BFD_RELOC_ARM_TLS_GOTDESC:             howto manager.      (line  791)
* BFD_RELOC_ARM_TLS_IE32:                howto manager.      (line  789)
* BFD_RELOC_ARM_TLS_LDM32:               howto manager.      (line  785)
* BFD_RELOC_ARM_TLS_LDO32:               howto manager.      (line  784)
* BFD_RELOC_ARM_TLS_LE32:                howto manager.      (line  790)
* BFD_RELOC_ARM_TLS_TPOFF32:             howto manager.      (line  788)
* BFD_RELOC_ARM_V4BX:                    howto manager.      (line  827)
* BFD_RELOC_AVR_13_PCREL:                howto manager.      (line 1584)
* BFD_RELOC_AVR_16_PM:                   howto manager.      (line 1587)
* BFD_RELOC_AVR_6:                       howto manager.      (line 1655)
* BFD_RELOC_AVR_6_ADIW:                  howto manager.      (line 1658)
* BFD_RELOC_AVR_7_PCREL:                 howto manager.      (line 1581)
* BFD_RELOC_AVR_8_HI:                    howto manager.      (line 1664)
* BFD_RELOC_AVR_8_HLO:                   howto manager.      (line 1667)
* BFD_RELOC_AVR_8_LO:                    howto manager.      (line 1661)
* BFD_RELOC_AVR_CALL:                    howto manager.      (line 1649)
* BFD_RELOC_AVR_DIFF16:                  howto manager.      (line 1671)
* BFD_RELOC_AVR_DIFF32:                  howto manager.      (line 1672)
* BFD_RELOC_AVR_DIFF8:                   howto manager.      (line 1670)
* BFD_RELOC_AVR_HH8_LDI:                 howto manager.      (line 1596)
* BFD_RELOC_AVR_HH8_LDI_NEG:             howto manager.      (line 1611)
* BFD_RELOC_AVR_HH8_LDI_PM:              howto manager.      (line 1634)
* BFD_RELOC_AVR_HH8_LDI_PM_NEG:          howto manager.      (line 1645)
* BFD_RELOC_AVR_HI8_LDI:                 howto manager.      (line 1593)
* BFD_RELOC_AVR_HI8_LDI_GS:              howto manager.      (line 1629)
* BFD_RELOC_AVR_HI8_LDI_NEG:             howto manager.      (line 1607)
* BFD_RELOC_AVR_HI8_LDI_PM:              howto manager.      (line 1626)
* BFD_RELOC_AVR_HI8_LDI_PM_NEG:          howto manager.      (line 1641)
* BFD_RELOC_AVR_LDI:                     howto manager.      (line 1652)
* BFD_RELOC_AVR_LDS_STS_16:              howto manager.      (line 1679)
* BFD_RELOC_AVR_LO8_LDI:                 howto manager.      (line 1590)
* BFD_RELOC_AVR_LO8_LDI_GS:              howto manager.      (line 1621)
* BFD_RELOC_AVR_LO8_LDI_NEG:             howto manager.      (line 1603)
* BFD_RELOC_AVR_LO8_LDI_PM:              howto manager.      (line 1618)
* BFD_RELOC_AVR_LO8_LDI_PM_NEG:          howto manager.      (line 1638)
* BFD_RELOC_AVR_MS8_LDI:                 howto manager.      (line 1600)
* BFD_RELOC_AVR_MS8_LDI_NEG:             howto manager.      (line 1615)
* BFD_RELOC_AVR_PORT5:                   howto manager.      (line 1685)
* BFD_RELOC_AVR_PORT6:                   howto manager.      (line 1682)
* BFD_RELOC_BFIN_10_PCREL:               howto manager.      (line  976)
* BFD_RELOC_BFIN_11_PCREL:               howto manager.      (line  978)
* BFD_RELOC_BFIN_12_PCREL_JUMP:          howto manager.      (line  980)
* BFD_RELOC_BFIN_12_PCREL_JUMP_S:        howto manager.      (line  982)
* BFD_RELOC_BFIN_16_HIGH:                howto manager.      (line  968)
* BFD_RELOC_BFIN_16_IMM:                 howto manager.      (line  966)
* BFD_RELOC_BFIN_16_LOW:                 howto manager.      (line  974)
* BFD_RELOC_BFIN_24_PCREL_CALL_X:        howto manager.      (line  984)
* BFD_RELOC_BFIN_24_PCREL_JUMP_L:        howto manager.      (line  986)
* BFD_RELOC_BFIN_4_PCREL:                howto manager.      (line  970)
* BFD_RELOC_BFIN_5_PCREL:                howto manager.      (line  972)
* BFD_RELOC_BFIN_FUNCDESC:               howto manager.      (line  991)
* BFD_RELOC_BFIN_FUNCDESC_GOT17M4:       howto manager.      (line  992)
* BFD_RELOC_BFIN_FUNCDESC_GOTHI:         howto manager.      (line  993)
* BFD_RELOC_BFIN_FUNCDESC_GOTLO:         howto manager.      (line  994)
* BFD_RELOC_BFIN_FUNCDESC_GOTOFF17M4:    howto manager.      (line  996)
* BFD_RELOC_BFIN_FUNCDESC_GOTOFFHI:      howto manager.      (line  997)
* BFD_RELOC_BFIN_FUNCDESC_GOTOFFLO:      howto manager.      (line  998)
* BFD_RELOC_BFIN_FUNCDESC_VALUE:         howto manager.      (line  995)
* BFD_RELOC_BFIN_GOT:                    howto manager.      (line 1003)
* BFD_RELOC_BFIN_GOT17M4:                howto manager.      (line  988)
* BFD_RELOC_BFIN_GOTHI:                  howto manager.      (line  989)
* BFD_RELOC_BFIN_GOTLO:                  howto manager.      (line  990)
* BFD_RELOC_BFIN_GOTOFF17M4:             howto manager.      (line  999)
* BFD_RELOC_BFIN_GOTOFFHI:               howto manager.      (line 1000)
* BFD_RELOC_BFIN_GOTOFFLO:               howto manager.      (line 1001)
* BFD_RELOC_BFIN_PLTPC:                  howto manager.      (line 1005)
* BFD_RELOC_C6000_ABS_H16:               howto manager.      (line 1426)
* BFD_RELOC_C6000_ABS_L16:               howto manager.      (line 1425)
* BFD_RELOC_C6000_ABS_S16:               howto manager.      (line 1424)
* BFD_RELOC_C6000_ALIGN:                 howto manager.      (line 1447)
* BFD_RELOC_C6000_COPY:                  howto manager.      (line 1442)
* BFD_RELOC_C6000_DSBT_INDEX:            howto manager.      (line 1440)
* BFD_RELOC_C6000_EHTYPE:                howto manager.      (line 1444)
* BFD_RELOC_C6000_FPHEAD:                howto manager.      (line 1448)
* BFD_RELOC_C6000_JUMP_SLOT:             howto manager.      (line 1443)
* BFD_RELOC_C6000_NOCMP:                 howto manager.      (line 1449)
* BFD_RELOC_C6000_PCR_H16:               howto manager.      (line 1445)
* BFD_RELOC_C6000_PCR_L16:               howto manager.      (line 1446)
* BFD_RELOC_C6000_PCR_S10:               howto manager.      (line 1422)
* BFD_RELOC_C6000_PCR_S12:               howto manager.      (line 1421)
* BFD_RELOC_C6000_PCR_S21:               howto manager.      (line 1420)
* BFD_RELOC_C6000_PCR_S7:                howto manager.      (line 1423)
* BFD_RELOC_C6000_PREL31:                howto manager.      (line 1441)
* BFD_RELOC_C6000_SBR_GOT_H16_W:         howto manager.      (line 1439)
* BFD_RELOC_C6000_SBR_GOT_L16_W:         howto manager.      (line 1438)
* BFD_RELOC_C6000_SBR_GOT_U15_W:         howto manager.      (line 1437)
* BFD_RELOC_C6000_SBR_H16_B:             howto manager.      (line 1434)
* BFD_RELOC_C6000_SBR_H16_H:             howto manager.      (line 1435)
* BFD_RELOC_C6000_SBR_H16_W:             howto manager.      (line 1436)
* BFD_RELOC_C6000_SBR_L16_B:             howto manager.      (line 1431)
* BFD_RELOC_C6000_SBR_L16_H:             howto manager.      (line 1432)
* BFD_RELOC_C6000_SBR_L16_W:             howto manager.      (line 1433)
* BFD_RELOC_C6000_SBR_S16:               howto manager.      (line 1430)
* BFD_RELOC_C6000_SBR_U15_B:             howto manager.      (line 1427)
* BFD_RELOC_C6000_SBR_U15_H:             howto manager.      (line 1428)
* BFD_RELOC_C6000_SBR_U15_W:             howto manager.      (line 1429)
* bfd_reloc_code_type:                   howto manager.      (line    9)
* BFD_RELOC_CR16_ABS20:                  howto manager.      (line 2113)
* BFD_RELOC_CR16_ABS24:                  howto manager.      (line 2114)
* BFD_RELOC_CR16_DISP16:                 howto manager.      (line 2124)
* BFD_RELOC_CR16_DISP20:                 howto manager.      (line 2125)
* BFD_RELOC_CR16_DISP24:                 howto manager.      (line 2126)
* BFD_RELOC_CR16_DISP24a:                howto manager.      (line 2127)
* BFD_RELOC_CR16_DISP4:                  howto manager.      (line 2122)
* BFD_RELOC_CR16_DISP8:                  howto manager.      (line 2123)
* BFD_RELOC_CR16_GLOB_DAT:               howto manager.      (line 2133)
* BFD_RELOC_CR16_GOTC_REGREL20:          howto manager.      (line 2132)
* BFD_RELOC_CR16_GOT_REGREL20:           howto manager.      (line 2131)
* BFD_RELOC_CR16_IMM16:                  howto manager.      (line 2117)
* BFD_RELOC_CR16_IMM20:                  howto manager.      (line 2118)
* BFD_RELOC_CR16_IMM24:                  howto manager.      (line 2119)
* BFD_RELOC_CR16_IMM32:                  howto manager.      (line 2120)
* BFD_RELOC_CR16_IMM32a:                 howto manager.      (line 2121)
* BFD_RELOC_CR16_IMM4:                   howto manager.      (line 2115)
* BFD_RELOC_CR16_IMM8:                   howto manager.      (line 2116)
* BFD_RELOC_CR16_NUM16:                  howto manager.      (line 2102)
* BFD_RELOC_CR16_NUM32:                  howto manager.      (line 2103)
* BFD_RELOC_CR16_NUM32a:                 howto manager.      (line 2104)
* BFD_RELOC_CR16_NUM8:                   howto manager.      (line 2101)
* BFD_RELOC_CR16_REGREL0:                howto manager.      (line 2105)
* BFD_RELOC_CR16_REGREL14:               howto manager.      (line 2108)
* BFD_RELOC_CR16_REGREL14a:              howto manager.      (line 2109)
* BFD_RELOC_CR16_REGREL16:               howto manager.      (line 2110)
* BFD_RELOC_CR16_REGREL20:               howto manager.      (line 2111)
* BFD_RELOC_CR16_REGREL20a:              howto manager.      (line 2112)
* BFD_RELOC_CR16_REGREL4:                howto manager.      (line 2106)
* BFD_RELOC_CR16_REGREL4a:               howto manager.      (line 2107)
* BFD_RELOC_CR16_SWITCH16:               howto manager.      (line 2129)
* BFD_RELOC_CR16_SWITCH32:               howto manager.      (line 2130)
* BFD_RELOC_CR16_SWITCH8:                howto manager.      (line 2128)
* BFD_RELOC_CRIS_16_DTPREL:              howto manager.      (line 2193)
* BFD_RELOC_CRIS_16_GOT:                 howto manager.      (line 2175)
* BFD_RELOC_CRIS_16_GOTPLT:              howto manager.      (line 2179)
* BFD_RELOC_CRIS_16_GOT_GD:              howto manager.      (line 2189)
* BFD_RELOC_CRIS_16_GOT_TPREL:           howto manager.      (line 2195)
* BFD_RELOC_CRIS_16_TPREL:               howto manager.      (line 2197)
* BFD_RELOC_CRIS_32_DTPREL:              howto manager.      (line 2192)
* BFD_RELOC_CRIS_32_GD:                  howto manager.      (line 2190)
* BFD_RELOC_CRIS_32_GOT:                 howto manager.      (line 2173)
* BFD_RELOC_CRIS_32_GOTPLT:              howto manager.      (line 2177)
* BFD_RELOC_CRIS_32_GOTREL:              howto manager.      (line 2181)
* BFD_RELOC_CRIS_32_GOT_GD:              howto manager.      (line 2188)
* BFD_RELOC_CRIS_32_GOT_TPREL:           howto manager.      (line 2194)
* BFD_RELOC_CRIS_32_IE:                  howto manager.      (line 2199)
* BFD_RELOC_CRIS_32_PLT_GOTREL:          howto manager.      (line 2183)
* BFD_RELOC_CRIS_32_PLT_PCREL:           howto manager.      (line 2185)
* BFD_RELOC_CRIS_32_TPREL:               howto manager.      (line 2196)
* BFD_RELOC_CRIS_BDISP8:                 howto manager.      (line 2156)
* BFD_RELOC_CRIS_COPY:                   howto manager.      (line 2168)
* BFD_RELOC_CRIS_DTP:                    howto manager.      (line 2191)
* BFD_RELOC_CRIS_DTPMOD:                 howto manager.      (line 2198)
* BFD_RELOC_CRIS_GLOB_DAT:               howto manager.      (line 2169)
* BFD_RELOC_CRIS_JUMP_SLOT:              howto manager.      (line 2170)
* BFD_RELOC_CRIS_LAPCQ_OFFSET:           howto manager.      (line 2164)
* BFD_RELOC_CRIS_RELATIVE:               howto manager.      (line 2171)
* BFD_RELOC_CRIS_SIGNED_16:              howto manager.      (line 2162)
* BFD_RELOC_CRIS_SIGNED_6:               howto manager.      (line 2158)
* BFD_RELOC_CRIS_SIGNED_8:               howto manager.      (line 2160)
* BFD_RELOC_CRIS_UNSIGNED_16:            howto manager.      (line 2163)
* BFD_RELOC_CRIS_UNSIGNED_4:             howto manager.      (line 2165)
* BFD_RELOC_CRIS_UNSIGNED_5:             howto manager.      (line 2157)
* BFD_RELOC_CRIS_UNSIGNED_6:             howto manager.      (line 2159)
* BFD_RELOC_CRIS_UNSIGNED_8:             howto manager.      (line 2161)
* BFD_RELOC_CRX_ABS16:                   howto manager.      (line 2145)
* BFD_RELOC_CRX_ABS32:                   howto manager.      (line 2146)
* BFD_RELOC_CRX_IMM16:                   howto manager.      (line 2150)
* BFD_RELOC_CRX_IMM32:                   howto manager.      (line 2151)
* BFD_RELOC_CRX_NUM16:                   howto manager.      (line 2148)
* BFD_RELOC_CRX_NUM32:                   howto manager.      (line 2149)
* BFD_RELOC_CRX_NUM8:                    howto manager.      (line 2147)
* BFD_RELOC_CRX_REGREL12:                howto manager.      (line 2141)
* BFD_RELOC_CRX_REGREL22:                howto manager.      (line 2142)
* BFD_RELOC_CRX_REGREL28:                howto manager.      (line 2143)
* BFD_RELOC_CRX_REGREL32:                howto manager.      (line 2144)
* BFD_RELOC_CRX_REL16:                   howto manager.      (line 2138)
* BFD_RELOC_CRX_REL24:                   howto manager.      (line 2139)
* BFD_RELOC_CRX_REL32:                   howto manager.      (line 2140)
* BFD_RELOC_CRX_REL4:                    howto manager.      (line 2135)
* BFD_RELOC_CRX_REL8:                    howto manager.      (line 2136)
* BFD_RELOC_CRX_REL8_CMP:                howto manager.      (line 2137)
* BFD_RELOC_CRX_SWITCH16:                howto manager.      (line 2153)
* BFD_RELOC_CRX_SWITCH32:                howto manager.      (line 2154)
* BFD_RELOC_CRX_SWITCH8:                 howto manager.      (line 2152)
* BFD_RELOC_CTOR:                        howto manager.      (line  714)
* BFD_RELOC_D10V_10_PCREL_L:             howto manager.      (line 1050)
* BFD_RELOC_D10V_10_PCREL_R:             howto manager.      (line 1047)
* BFD_RELOC_D10V_18:                     howto manager.      (line 1054)
* BFD_RELOC_D10V_18_PCREL:               howto manager.      (line 1056)
* BFD_RELOC_D30V_15:                     howto manager.      (line 1067)
* BFD_RELOC_D30V_15_PCREL:               howto manager.      (line 1070)
* BFD_RELOC_D30V_15_PCREL_R:             howto manager.      (line 1073)
* BFD_RELOC_D30V_21:                     howto manager.      (line 1077)
* BFD_RELOC_D30V_21_PCREL:               howto manager.      (line 1080)
* BFD_RELOC_D30V_21_PCREL_R:             howto manager.      (line 1083)
* BFD_RELOC_D30V_32:                     howto manager.      (line 1087)
* BFD_RELOC_D30V_32_PCREL:               howto manager.      (line 1089)
* BFD_RELOC_D30V_6:                      howto manager.      (line 1058)
* BFD_RELOC_D30V_9_PCREL:                howto manager.      (line 1060)
* BFD_RELOC_D30V_9_PCREL_R:              howto manager.      (line 1063)
* BFD_RELOC_DLX_HI16_S:                  howto manager.      (line 1091)
* BFD_RELOC_DLX_JMP26:                   howto manager.      (line 1095)
* BFD_RELOC_DLX_LO16:                    howto manager.      (line 1093)
* BFD_RELOC_EPIPHANY_HIGH:               howto manager.      (line 2962)
* BFD_RELOC_EPIPHANY_IMM11:              howto manager.      (line 2968)
* BFD_RELOC_EPIPHANY_IMM8:               howto manager.      (line 2971)
* BFD_RELOC_EPIPHANY_LOW:                howto manager.      (line 2964)
* BFD_RELOC_EPIPHANY_SIMM11:             howto manager.      (line 2966)
* BFD_RELOC_EPIPHANY_SIMM24:             howto manager.      (line 2960)
* BFD_RELOC_EPIPHANY_SIMM8:              howto manager.      (line 2958)
* BFD_RELOC_FR30_10_IN_8:                howto manager.      (line 1465)
* BFD_RELOC_FR30_12_PCREL:               howto manager.      (line 1471)
* BFD_RELOC_FR30_20:                     howto manager.      (line 1453)
* BFD_RELOC_FR30_48:                     howto manager.      (line 1451)
* BFD_RELOC_FR30_6_IN_4:                 howto manager.      (line 1456)
* BFD_RELOC_FR30_8_IN_8:                 howto manager.      (line 1459)
* BFD_RELOC_FR30_9_IN_8:                 howto manager.      (line 1462)
* BFD_RELOC_FR30_9_PCREL:                howto manager.      (line 1468)
* BFD_RELOC_FRV_FUNCDESC:                howto manager.      (line  443)
* BFD_RELOC_FRV_FUNCDESC_GOT12:          howto manager.      (line  444)
* BFD_RELOC_FRV_FUNCDESC_GOTHI:          howto manager.      (line  445)
* BFD_RELOC_FRV_FUNCDESC_GOTLO:          howto manager.      (line  446)
* BFD_RELOC_FRV_FUNCDESC_GOTOFF12:       howto manager.      (line  448)
* BFD_RELOC_FRV_FUNCDESC_GOTOFFHI:       howto manager.      (line  449)
* BFD_RELOC_FRV_FUNCDESC_GOTOFFLO:       howto manager.      (line  450)
* BFD_RELOC_FRV_FUNCDESC_VALUE:          howto manager.      (line  447)
* BFD_RELOC_FRV_GETTLSOFF:               howto manager.      (line  454)
* BFD_RELOC_FRV_GETTLSOFF_RELAX:         howto manager.      (line  467)
* BFD_RELOC_FRV_GOT12:                   howto manager.      (line  440)
* BFD_RELOC_FRV_GOTHI:                   howto manager.      (line  441)
* BFD_RELOC_FRV_GOTLO:                   howto manager.      (line  442)
* BFD_RELOC_FRV_GOTOFF12:                howto manager.      (line  451)
* BFD_RELOC_FRV_GOTOFFHI:                howto manager.      (line  452)
* BFD_RELOC_FRV_GOTOFFLO:                howto manager.      (line  453)
* BFD_RELOC_FRV_GOTTLSDESC12:            howto manager.      (line  456)
* BFD_RELOC_FRV_GOTTLSDESCHI:            howto manager.      (line  457)
* BFD_RELOC_FRV_GOTTLSDESCLO:            howto manager.      (line  458)
* BFD_RELOC_FRV_GOTTLSOFF12:             howto manager.      (line  462)
* BFD_RELOC_FRV_GOTTLSOFFHI:             howto manager.      (line  463)
* BFD_RELOC_FRV_GOTTLSOFFLO:             howto manager.      (line  464)
* BFD_RELOC_FRV_GPREL12:                 howto manager.      (line  435)
* BFD_RELOC_FRV_GPREL32:                 howto manager.      (line  437)
* BFD_RELOC_FRV_GPRELHI:                 howto manager.      (line  438)
* BFD_RELOC_FRV_GPRELLO:                 howto manager.      (line  439)
* BFD_RELOC_FRV_GPRELU12:                howto manager.      (line  436)
* BFD_RELOC_FRV_HI16:                    howto manager.      (line  434)
* BFD_RELOC_FRV_LABEL16:                 howto manager.      (line  431)
* BFD_RELOC_FRV_LABEL24:                 howto manager.      (line  432)
* BFD_RELOC_FRV_LO16:                    howto manager.      (line  433)
* BFD_RELOC_FRV_TLSDESC_RELAX:           howto manager.      (line  466)
* BFD_RELOC_FRV_TLSDESC_VALUE:           howto manager.      (line  455)
* BFD_RELOC_FRV_TLSMOFF:                 howto manager.      (line  469)
* BFD_RELOC_FRV_TLSMOFF12:               howto manager.      (line  459)
* BFD_RELOC_FRV_TLSMOFFHI:               howto manager.      (line  460)
* BFD_RELOC_FRV_TLSMOFFLO:               howto manager.      (line  461)
* BFD_RELOC_FRV_TLSOFF:                  howto manager.      (line  465)
* BFD_RELOC_FRV_TLSOFF_RELAX:            howto manager.      (line  468)
* BFD_RELOC_GPREL16:                     howto manager.      (line  114)
* BFD_RELOC_GPREL32:                     howto manager.      (line  115)
* BFD_RELOC_H8_DIR16A8:                  howto manager.      (line 2259)
* BFD_RELOC_H8_DIR16R8:                  howto manager.      (line 2260)
* BFD_RELOC_H8_DIR24A8:                  howto manager.      (line 2261)
* BFD_RELOC_H8_DIR24R8:                  howto manager.      (line 2262)
* BFD_RELOC_H8_DIR32A16:                 howto manager.      (line 2263)
* BFD_RELOC_H8_DISP32A16:                howto manager.      (line 2264)
* BFD_RELOC_HI16:                        howto manager.      (line  316)
* BFD_RELOC_HI16_BASEREL:                howto manager.      (line   94)
* BFD_RELOC_HI16_GOTOFF:                 howto manager.      (line   53)
* BFD_RELOC_HI16_PCREL:                  howto manager.      (line  325)
* BFD_RELOC_HI16_PLTOFF:                 howto manager.      (line   65)
* BFD_RELOC_HI16_S:                      howto manager.      (line  318)
* BFD_RELOC_HI16_S_BASEREL:              howto manager.      (line   95)
* BFD_RELOC_HI16_S_GOTOFF:               howto manager.      (line   54)
* BFD_RELOC_HI16_S_PCREL:                howto manager.      (line  327)
* BFD_RELOC_HI16_S_PLTOFF:               howto manager.      (line   66)
* BFD_RELOC_HI22:                        howto manager.      (line  110)
* BFD_RELOC_I370_D12:                    howto manager.      (line  712)
* BFD_RELOC_I960_CALLJ:                  howto manager.      (line  120)
* BFD_RELOC_IA64_COPY:                   howto manager.      (line 1962)
* BFD_RELOC_IA64_DIR32LSB:               howto manager.      (line 1907)
* BFD_RELOC_IA64_DIR32MSB:               howto manager.      (line 1906)
* BFD_RELOC_IA64_DIR64LSB:               howto manager.      (line 1909)
* BFD_RELOC_IA64_DIR64MSB:               howto manager.      (line 1908)
* BFD_RELOC_IA64_DTPMOD64LSB:            howto manager.      (line 1972)
* BFD_RELOC_IA64_DTPMOD64MSB:            howto manager.      (line 1971)
* BFD_RELOC_IA64_DTPREL14:               howto manager.      (line 1974)
* BFD_RELOC_IA64_DTPREL22:               howto manager.      (line 1975)
* BFD_RELOC_IA64_DTPREL32LSB:            howto manager.      (line 1978)
* BFD_RELOC_IA64_DTPREL32MSB:            howto manager.      (line 1977)
* BFD_RELOC_IA64_DTPREL64I:              howto manager.      (line 1976)
* BFD_RELOC_IA64_DTPREL64LSB:            howto manager.      (line 1980)
* BFD_RELOC_IA64_DTPREL64MSB:            howto manager.      (line 1979)
* BFD_RELOC_IA64_FPTR32LSB:              howto manager.      (line 1924)
* BFD_RELOC_IA64_FPTR32MSB:              howto manager.      (line 1923)
* BFD_RELOC_IA64_FPTR64I:                howto manager.      (line 1922)
* BFD_RELOC_IA64_FPTR64LSB:              howto manager.      (line 1926)
* BFD_RELOC_IA64_FPTR64MSB:              howto manager.      (line 1925)
* BFD_RELOC_IA64_GPREL22:                howto manager.      (line 1910)
* BFD_RELOC_IA64_GPREL32LSB:             howto manager.      (line 1913)
* BFD_RELOC_IA64_GPREL32MSB:             howto manager.      (line 1912)
* BFD_RELOC_IA64_GPREL64I:               howto manager.      (line 1911)
* BFD_RELOC_IA64_GPREL64LSB:             howto manager.      (line 1915)
* BFD_RELOC_IA64_GPREL64MSB:             howto manager.      (line 1914)
* BFD_RELOC_IA64_IMM14:                  howto manager.      (line 1903)
* BFD_RELOC_IA64_IMM22:                  howto manager.      (line 1904)
* BFD_RELOC_IA64_IMM64:                  howto manager.      (line 1905)
* BFD_RELOC_IA64_IPLTLSB:                howto manager.      (line 1961)
* BFD_RELOC_IA64_IPLTMSB:                howto manager.      (line 1960)
* BFD_RELOC_IA64_LDXMOV:                 howto manager.      (line 1964)
* BFD_RELOC_IA64_LTOFF22:                howto manager.      (line 1916)
* BFD_RELOC_IA64_LTOFF22X:               howto manager.      (line 1963)
* BFD_RELOC_IA64_LTOFF64I:               howto manager.      (line 1917)
* BFD_RELOC_IA64_LTOFF_DTPMOD22:         howto manager.      (line 1973)
* BFD_RELOC_IA64_LTOFF_DTPREL22:         howto manager.      (line 1981)
* BFD_RELOC_IA64_LTOFF_FPTR22:           howto manager.      (line 1938)
* BFD_RELOC_IA64_LTOFF_FPTR32LSB:        howto manager.      (line 1941)
* BFD_RELOC_IA64_LTOFF_FPTR32MSB:        howto manager.      (line 1940)
* BFD_RELOC_IA64_LTOFF_FPTR64I:          howto manager.      (line 1939)
* BFD_RELOC_IA64_LTOFF_FPTR64LSB:        howto manager.      (line 1943)
* BFD_RELOC_IA64_LTOFF_FPTR64MSB:        howto manager.      (line 1942)
* BFD_RELOC_IA64_LTOFF_TPREL22:          howto manager.      (line 1970)
* BFD_RELOC_IA64_LTV32LSB:               howto manager.      (line 1957)
* BFD_RELOC_IA64_LTV32MSB:               howto manager.      (line 1956)
* BFD_RELOC_IA64_LTV64LSB:               howto manager.      (line 1959)
* BFD_RELOC_IA64_LTV64MSB:               howto manager.      (line 1958)
* BFD_RELOC_IA64_PCREL21B:               howto manager.      (line 1927)
* BFD_RELOC_IA64_PCREL21BI:              howto manager.      (line 1928)
* BFD_RELOC_IA64_PCREL21F:               howto manager.      (line 1930)
* BFD_RELOC_IA64_PCREL21M:               howto manager.      (line 1929)
* BFD_RELOC_IA64_PCREL22:                howto manager.      (line 1931)
* BFD_RELOC_IA64_PCREL32LSB:             howto manager.      (line 1935)
* BFD_RELOC_IA64_PCREL32MSB:             howto manager.      (line 1934)
* BFD_RELOC_IA64_PCREL60B:               howto manager.      (line 1932)
* BFD_RELOC_IA64_PCREL64I:               howto manager.      (line 1933)
* BFD_RELOC_IA64_PCREL64LSB:             howto manager.      (line 1937)
* BFD_RELOC_IA64_PCREL64MSB:             howto manager.      (line 1936)
* BFD_RELOC_IA64_PLTOFF22:               howto manager.      (line 1918)
* BFD_RELOC_IA64_PLTOFF64I:              howto manager.      (line 1919)
* BFD_RELOC_IA64_PLTOFF64LSB:            howto manager.      (line 1921)
* BFD_RELOC_IA64_PLTOFF64MSB:            howto manager.      (line 1920)
* BFD_RELOC_IA64_REL32LSB:               howto manager.      (line 1953)
* BFD_RELOC_IA64_REL32MSB:               howto manager.      (line 1952)
* BFD_RELOC_IA64_REL64LSB:               howto manager.      (line 1955)
* BFD_RELOC_IA64_REL64MSB:               howto manager.      (line 1954)
* BFD_RELOC_IA64_SECREL32LSB:            howto manager.      (line 1949)
* BFD_RELOC_IA64_SECREL32MSB:            howto manager.      (line 1948)
* BFD_RELOC_IA64_SECREL64LSB:            howto manager.      (line 1951)
* BFD_RELOC_IA64_SECREL64MSB:            howto manager.      (line 1950)
* BFD_RELOC_IA64_SEGREL32LSB:            howto manager.      (line 1945)
* BFD_RELOC_IA64_SEGREL32MSB:            howto manager.      (line 1944)
* BFD_RELOC_IA64_SEGREL64LSB:            howto manager.      (line 1947)
* BFD_RELOC_IA64_SEGREL64MSB:            howto manager.      (line 1946)
* BFD_RELOC_IA64_TPREL14:                howto manager.      (line 1965)
* BFD_RELOC_IA64_TPREL22:                howto manager.      (line 1966)
* BFD_RELOC_IA64_TPREL64I:               howto manager.      (line 1967)
* BFD_RELOC_IA64_TPREL64LSB:             howto manager.      (line 1969)
* BFD_RELOC_IA64_TPREL64MSB:             howto manager.      (line 1968)
* BFD_RELOC_IP2K_ADDR16CJP:              howto manager.      (line 1864)
* BFD_RELOC_IP2K_BANK:                   howto manager.      (line 1862)
* BFD_RELOC_IP2K_EX8DATA:                howto manager.      (line 1870)
* BFD_RELOC_IP2K_FR9:                    howto manager.      (line 1860)
* BFD_RELOC_IP2K_FR_OFFSET:              howto manager.      (line 1879)
* BFD_RELOC_IP2K_HI8DATA:                howto manager.      (line 1869)
* BFD_RELOC_IP2K_HI8INSN:                howto manager.      (line 1873)
* BFD_RELOC_IP2K_LO8DATA:                howto manager.      (line 1868)
* BFD_RELOC_IP2K_LO8INSN:                howto manager.      (line 1872)
* BFD_RELOC_IP2K_PAGE3:                  howto manager.      (line 1866)
* BFD_RELOC_IP2K_PC_SKIP:                howto manager.      (line 1875)
* BFD_RELOC_IP2K_TEXT:                   howto manager.      (line 1877)
* BFD_RELOC_IQ2000_OFFSET_16:            howto manager.      (line 2357)
* BFD_RELOC_IQ2000_OFFSET_21:            howto manager.      (line 2358)
* BFD_RELOC_IQ2000_UHI16:                howto manager.      (line 2359)
* BFD_RELOC_LM32_16_GOT:                 howto manager.      (line 2449)
* BFD_RELOC_LM32_BRANCH:                 howto manager.      (line 2448)
* BFD_RELOC_LM32_CALL:                   howto manager.      (line 2447)
* BFD_RELOC_LM32_COPY:                   howto manager.      (line 2452)
* BFD_RELOC_LM32_GLOB_DAT:               howto manager.      (line 2453)
* BFD_RELOC_LM32_GOTOFF_HI16:            howto manager.      (line 2450)
* BFD_RELOC_LM32_GOTOFF_LO16:            howto manager.      (line 2451)
* BFD_RELOC_LM32_JMP_SLOT:               howto manager.      (line 2454)
* BFD_RELOC_LM32_RELATIVE:               howto manager.      (line 2455)
* BFD_RELOC_LO10:                        howto manager.      (line  111)
* BFD_RELOC_LO16:                        howto manager.      (line  323)
* BFD_RELOC_LO16_BASEREL:                howto manager.      (line   93)
* BFD_RELOC_LO16_GOTOFF:                 howto manager.      (line   52)
* BFD_RELOC_LO16_PCREL:                  howto manager.      (line  329)
* BFD_RELOC_LO16_PLTOFF:                 howto manager.      (line   64)
* BFD_RELOC_M32C_HI8:                    howto manager.      (line 1097)
* BFD_RELOC_M32C_RL_1ADDR:               howto manager.      (line 1099)
* BFD_RELOC_M32C_RL_2ADDR:               howto manager.      (line 1100)
* BFD_RELOC_M32C_RL_JUMP:                howto manager.      (line 1098)
* BFD_RELOC_M32R_10_PCREL:               howto manager.      (line 1105)
* BFD_RELOC_M32R_18_PCREL:               howto manager.      (line 1108)
* BFD_RELOC_M32R_24:                     howto manager.      (line 1102)
* BFD_RELOC_M32R_26_PCREL:               howto manager.      (line 1110)
* BFD_RELOC_M32R_26_PLTREL:              howto manager.      (line 1124)
* BFD_RELOC_M32R_COPY:                   howto manager.      (line 1125)
* BFD_RELOC_M32R_GLOB_DAT:               howto manager.      (line 1126)
* BFD_RELOC_M32R_GOT16_HI_SLO:           howto manager.      (line 1135)
* BFD_RELOC_M32R_GOT16_HI_ULO:           howto manager.      (line 1134)
* BFD_RELOC_M32R_GOT16_LO:               howto manager.      (line 1136)
* BFD_RELOC_M32R_GOT24:                  howto manager.      (line 1123)
* BFD_RELOC_M32R_GOTOFF:                 howto manager.      (line 1129)
* BFD_RELOC_M32R_GOTOFF_HI_SLO:          howto manager.      (line 1131)
* BFD_RELOC_M32R_GOTOFF_HI_ULO:          howto manager.      (line 1130)
* BFD_RELOC_M32R_GOTOFF_LO:              howto manager.      (line 1132)
* BFD_RELOC_M32R_GOTPC24:                howto manager.      (line 1133)
* BFD_RELOC_M32R_GOTPC_HI_SLO:           howto manager.      (line 1138)
* BFD_RELOC_M32R_GOTPC_HI_ULO:           howto manager.      (line 1137)
* BFD_RELOC_M32R_GOTPC_LO:               howto manager.      (line 1139)
* BFD_RELOC_M32R_HI16_SLO:               howto manager.      (line 1115)
* BFD_RELOC_M32R_HI16_ULO:               howto manager.      (line 1112)
* BFD_RELOC_M32R_JMP_SLOT:               howto manager.      (line 1127)
* BFD_RELOC_M32R_LO16:                   howto manager.      (line 1118)
* BFD_RELOC_M32R_RELATIVE:               howto manager.      (line 1128)
* BFD_RELOC_M32R_SDA16:                  howto manager.      (line 1120)
* BFD_RELOC_M68HC11_24:                  howto manager.      (line 2009)
* BFD_RELOC_M68HC11_3B:                  howto manager.      (line 1989)
* BFD_RELOC_M68HC11_HI8:                 howto manager.      (line 1983)
* BFD_RELOC_M68HC11_LO16:                howto manager.      (line 2000)
* BFD_RELOC_M68HC11_LO8:                 howto manager.      (line 1986)
* BFD_RELOC_M68HC11_PAGE:                howto manager.      (line 2005)
* BFD_RELOC_M68HC11_RL_GROUP:            howto manager.      (line 1996)
* BFD_RELOC_M68HC11_RL_JUMP:             howto manager.      (line 1991)
* BFD_RELOC_M68HC12_10_PCREL:            howto manager.      (line 2052)
* BFD_RELOC_M68HC12_16B:                 howto manager.      (line 2048)
* BFD_RELOC_M68HC12_5B:                  howto manager.      (line 2014)
* BFD_RELOC_M68HC12_9B:                  howto manager.      (line 2046)
* BFD_RELOC_M68HC12_9_PCREL:             howto manager.      (line 2050)
* BFD_RELOC_M68HC12_HI8XG:               howto manager.      (line 2057)
* BFD_RELOC_M68HC12_LO8XG:               howto manager.      (line 2054)
* BFD_RELOC_MACH_O_LOCAL_SECTDIFF:       howto manager.      (line 2460)
* BFD_RELOC_MACH_O_PAIR:                 howto manager.      (line 2462)
* BFD_RELOC_MACH_O_SECTDIFF:             howto manager.      (line 2457)
* BFD_RELOC_MACH_O_X86_64_BRANCH32:      howto manager.      (line 2464)
* BFD_RELOC_MACH_O_X86_64_BRANCH8:       howto manager.      (line 2465)
* BFD_RELOC_MACH_O_X86_64_GOT:           howto manager.      (line 2468)
* BFD_RELOC_MACH_O_X86_64_GOT_LOAD:      howto manager.      (line 2470)
* BFD_RELOC_MACH_O_X86_64_PCREL32_1:     howto manager.      (line 2477)
* BFD_RELOC_MACH_O_X86_64_PCREL32_2:     howto manager.      (line 2479)
* BFD_RELOC_MACH_O_X86_64_PCREL32_4:     howto manager.      (line 2481)
* BFD_RELOC_MACH_O_X86_64_SUBTRACTOR32:  howto manager.      (line 2473)
* BFD_RELOC_MACH_O_X86_64_SUBTRACTOR64:  howto manager.      (line 2475)
* BFD_RELOC_MCORE_PCREL_32:              howto manager.      (line 1477)
* BFD_RELOC_MCORE_PCREL_IMM11BY2:        howto manager.      (line 1475)
* BFD_RELOC_MCORE_PCREL_IMM4BY2:         howto manager.      (line 1476)
* BFD_RELOC_MCORE_PCREL_IMM8BY4:         howto manager.      (line 1474)
* BFD_RELOC_MCORE_PCREL_JSR_IMM11BY2:    howto manager.      (line 1478)
* BFD_RELOC_MCORE_RVA:                   howto manager.      (line 1479)
* BFD_RELOC_MEP_16:                      howto manager.      (line 1482)
* BFD_RELOC_MEP_32:                      howto manager.      (line 1483)
* BFD_RELOC_MEP_8:                       howto manager.      (line 1481)
* BFD_RELOC_MEP_ADDR24A4:                howto manager.      (line 1498)
* BFD_RELOC_MEP_GNU_VTENTRY:             howto manager.      (line 1500)
* BFD_RELOC_MEP_GNU_VTINHERIT:           howto manager.      (line 1499)
* BFD_RELOC_MEP_GPREL:                   howto manager.      (line 1492)
* BFD_RELOC_MEP_HI16S:                   howto manager.      (line 1491)
* BFD_RELOC_MEP_HI16U:                   howto manager.      (line 1490)
* BFD_RELOC_MEP_LOW16:                   howto manager.      (line 1489)
* BFD_RELOC_MEP_PCABS24A2:               howto manager.      (line 1488)
* BFD_RELOC_MEP_PCREL12A2:               howto manager.      (line 1485)
* BFD_RELOC_MEP_PCREL17A2:               howto manager.      (line 1486)
* BFD_RELOC_MEP_PCREL24A2:               howto manager.      (line 1487)
* BFD_RELOC_MEP_PCREL8A2:                howto manager.      (line 1484)
* BFD_RELOC_MEP_TPREL:                   howto manager.      (line 1493)
* BFD_RELOC_MEP_TPREL7:                  howto manager.      (line 1494)
* BFD_RELOC_MEP_TPREL7A2:                howto manager.      (line 1495)
* BFD_RELOC_MEP_TPREL7A4:                howto manager.      (line 1496)
* BFD_RELOC_MEP_UIMM24:                  howto manager.      (line 1497)
* BFD_RELOC_METAG_COPY:                  howto manager.      (line 1521)
* BFD_RELOC_METAG_GETSETOFF:             howto manager.      (line 1505)
* BFD_RELOC_METAG_GETSET_GOT:            howto manager.      (line 1513)
* BFD_RELOC_METAG_GETSET_GOTOFF:         howto manager.      (line 1512)
* BFD_RELOC_METAG_GLOB_DAT:              howto manager.      (line 1524)
* BFD_RELOC_METAG_GOTOFF:                howto manager.      (line 1519)
* BFD_RELOC_METAG_HI16_GOTOFF:           howto manager.      (line 1510)
* BFD_RELOC_METAG_HI16_GOTPC:            howto manager.      (line 1514)
* BFD_RELOC_METAG_HI16_PLT:              howto manager.      (line 1516)
* BFD_RELOC_METAG_HIADDR16:              howto manager.      (line 1502)
* BFD_RELOC_METAG_HIOG:                  howto manager.      (line 1506)
* BFD_RELOC_METAG_JMP_SLOT:              howto manager.      (line 1522)
* BFD_RELOC_METAG_LO16_GOTOFF:           howto manager.      (line 1511)
* BFD_RELOC_METAG_LO16_GOTPC:            howto manager.      (line 1515)
* BFD_RELOC_METAG_LO16_PLT:              howto manager.      (line 1517)
* BFD_RELOC_METAG_LOADDR16:              howto manager.      (line 1503)
* BFD_RELOC_METAG_LOOG:                  howto manager.      (line 1507)
* BFD_RELOC_METAG_PLT:                   howto manager.      (line 1520)
* BFD_RELOC_METAG_REL16:                 howto manager.      (line 1509)
* BFD_RELOC_METAG_REL8:                  howto manager.      (line 1508)
* BFD_RELOC_METAG_RELATIVE:              howto manager.      (line 1523)
* BFD_RELOC_METAG_RELBRANCH:             howto manager.      (line 1504)
* BFD_RELOC_METAG_RELBRANCH_PLT:         howto manager.      (line 1518)
* BFD_RELOC_METAG_TLS_DTPMOD:            howto manager.      (line 1535)
* BFD_RELOC_METAG_TLS_DTPOFF:            howto manager.      (line 1536)
* BFD_RELOC_METAG_TLS_GD:                howto manager.      (line 1525)
* BFD_RELOC_METAG_TLS_IE:                howto manager.      (line 1530)
* BFD_RELOC_METAG_TLS_IENONPIC:          howto manager.      (line 1531)
* BFD_RELOC_METAG_TLS_IENONPIC_HI16:     howto manager.      (line 1532)
* BFD_RELOC_METAG_TLS_IENONPIC_LO16:     howto manager.      (line 1533)
* BFD_RELOC_METAG_TLS_LDM:               howto manager.      (line 1526)
* BFD_RELOC_METAG_TLS_LDO:               howto manager.      (line 1529)
* BFD_RELOC_METAG_TLS_LDO_HI16:          howto manager.      (line 1527)
* BFD_RELOC_METAG_TLS_LDO_LO16:          howto manager.      (line 1528)
* BFD_RELOC_METAG_TLS_LE:                howto manager.      (line 1537)
* BFD_RELOC_METAG_TLS_LE_HI16:           howto manager.      (line 1538)
* BFD_RELOC_METAG_TLS_LE_LO16:           howto manager.      (line 1539)
* BFD_RELOC_METAG_TLS_TPOFF:             howto manager.      (line 1534)
* BFD_RELOC_MICROBLAZE_32_GOTOFF:        howto manager.      (line 2517)
* BFD_RELOC_MICROBLAZE_32_LO:            howto manager.      (line 2483)
* BFD_RELOC_MICROBLAZE_32_LO_PCREL:      howto manager.      (line 2486)
* BFD_RELOC_MICROBLAZE_32_ROSDA:         howto manager.      (line 2489)
* BFD_RELOC_MICROBLAZE_32_RWSDA:         howto manager.      (line 2492)
* BFD_RELOC_MICROBLAZE_32_SYM_OP_SYM:    howto manager.      (line 2495)
* BFD_RELOC_MICROBLAZE_32_TLSDTPMOD:     howto manager.      (line 2533)
* BFD_RELOC_MICROBLAZE_32_TLSDTPREL:     howto manager.      (line 2535)
* BFD_RELOC_MICROBLAZE_64_GOT:           howto manager.      (line 2506)
* BFD_RELOC_MICROBLAZE_64_GOTOFF:        howto manager.      (line 2513)
* BFD_RELOC_MICROBLAZE_64_GOTPC:         howto manager.      (line 2502)
* BFD_RELOC_MICROBLAZE_64_NONE:          howto manager.      (line 2498)
* BFD_RELOC_MICROBLAZE_64_PLT:           howto manager.      (line 2509)
* BFD_RELOC_MICROBLAZE_64_TLS:           howto manager.      (line 2523)
* BFD_RELOC_MICROBLAZE_64_TLSDTPREL:     howto manager.      (line 2537)
* BFD_RELOC_MICROBLAZE_64_TLSGD:         howto manager.      (line 2525)
* BFD_RELOC_MICROBLAZE_64_TLSGOTTPREL:   howto manager.      (line 2540)
* BFD_RELOC_MICROBLAZE_64_TLSLD:         howto manager.      (line 2529)
* BFD_RELOC_MICROBLAZE_64_TLSTPREL:      howto manager.      (line 2543)
* BFD_RELOC_MICROBLAZE_COPY:             howto manager.      (line 2520)
* BFD_RELOC_MICROMIPS_10_PCREL_S1:       howto manager.      (line  356)
* BFD_RELOC_MICROMIPS_16_PCREL_S1:       howto manager.      (line  357)
* BFD_RELOC_MICROMIPS_7_PCREL_S1:        howto manager.      (line  355)
* BFD_RELOC_MICROMIPS_CALL16:            howto manager.      (line  372)
* BFD_RELOC_MICROMIPS_CALL_HI16:         howto manager.      (line  378)
* BFD_RELOC_MICROMIPS_CALL_LO16:         howto manager.      (line  380)
* BFD_RELOC_MICROMIPS_GOT16:             howto manager.      (line  370)
* BFD_RELOC_MICROMIPS_GOT_DISP:          howto manager.      (line  388)
* BFD_RELOC_MICROMIPS_GOT_HI16:          howto manager.      (line  374)
* BFD_RELOC_MICROMIPS_GOT_LO16:          howto manager.      (line  376)
* BFD_RELOC_MICROMIPS_GOT_OFST:          howto manager.      (line  386)
* BFD_RELOC_MICROMIPS_GOT_PAGE:          howto manager.      (line  384)
* BFD_RELOC_MICROMIPS_GPREL16:           howto manager.      (line  364)
* BFD_RELOC_MICROMIPS_HI16:              howto manager.      (line  365)
* BFD_RELOC_MICROMIPS_HI16_S:            howto manager.      (line  366)
* BFD_RELOC_MICROMIPS_HIGHER:            howto manager.      (line  397)
* BFD_RELOC_MICROMIPS_HIGHEST:           howto manager.      (line  395)
* BFD_RELOC_MICROMIPS_JALR:              howto manager.      (line  403)
* BFD_RELOC_MICROMIPS_JMP:               howto manager.      (line  310)
* BFD_RELOC_MICROMIPS_LITERAL:           howto manager.      (line  353)
* BFD_RELOC_MICROMIPS_LO16:              howto manager.      (line  367)
* BFD_RELOC_MICROMIPS_SCN_DISP:          howto manager.      (line  399)
* BFD_RELOC_MICROMIPS_SUB:               howto manager.      (line  382)
* BFD_RELOC_MICROMIPS_TLS_DTPREL_HI16:   howto manager.      (line  413)
* BFD_RELOC_MICROMIPS_TLS_DTPREL_LO16:   howto manager.      (line  415)
* BFD_RELOC_MICROMIPS_TLS_GD:            howto manager.      (line  409)
* BFD_RELOC_MICROMIPS_TLS_GOTTPREL:      howto manager.      (line  417)
* BFD_RELOC_MICROMIPS_TLS_LDM:           howto manager.      (line  411)
* BFD_RELOC_MICROMIPS_TLS_TPREL_HI16:    howto manager.      (line  421)
* BFD_RELOC_MICROMIPS_TLS_TPREL_LO16:    howto manager.      (line  423)
* BFD_RELOC_MIPS16_CALL16:               howto manager.      (line  332)
* BFD_RELOC_MIPS16_GOT16:                howto manager.      (line  331)
* BFD_RELOC_MIPS16_GPREL:                howto manager.      (line  314)
* BFD_RELOC_MIPS16_HI16:                 howto manager.      (line  335)
* BFD_RELOC_MIPS16_HI16_S:               howto manager.      (line  337)
* BFD_RELOC_MIPS16_JMP:                  howto manager.      (line  312)
* BFD_RELOC_MIPS16_LO16:                 howto manager.      (line  342)
* BFD_RELOC_MIPS16_TLS_DTPREL_HI16:      howto manager.      (line  346)
* BFD_RELOC_MIPS16_TLS_DTPREL_LO16:      howto manager.      (line  347)
* BFD_RELOC_MIPS16_TLS_GD:               howto manager.      (line  344)
* BFD_RELOC_MIPS16_TLS_GOTTPREL:         howto manager.      (line  348)
* BFD_RELOC_MIPS16_TLS_LDM:              howto manager.      (line  345)
* BFD_RELOC_MIPS16_TLS_TPREL_HI16:       howto manager.      (line  349)
* BFD_RELOC_MIPS16_TLS_TPREL_LO16:       howto manager.      (line  350)
* BFD_RELOC_MIPS_18_PCREL_S3:            howto manager.      (line  361)
* BFD_RELOC_MIPS_19_PCREL_S2:            howto manager.      (line  362)
* BFD_RELOC_MIPS_21_PCREL_S2:            howto manager.      (line  359)
* BFD_RELOC_MIPS_26_PCREL_S2:            howto manager.      (line  360)
* BFD_RELOC_MIPS_CALL16:                 howto manager.      (line  371)
* BFD_RELOC_MIPS_CALL_HI16:              howto manager.      (line  377)
* BFD_RELOC_MIPS_CALL_LO16:              howto manager.      (line  379)
* BFD_RELOC_MIPS_COPY:                   howto manager.      (line  426)
* BFD_RELOC_MIPS_DELETE:                 howto manager.      (line  393)
* BFD_RELOC_MIPS_EH:                     howto manager.      (line  424)
* BFD_RELOC_MIPS_GOT16:                  howto manager.      (line  369)
* BFD_RELOC_MIPS_GOT_DISP:               howto manager.      (line  387)
* BFD_RELOC_MIPS_GOT_HI16:               howto manager.      (line  373)
* BFD_RELOC_MIPS_GOT_LO16:               howto manager.      (line  375)
* BFD_RELOC_MIPS_GOT_OFST:               howto manager.      (line  385)
* BFD_RELOC_MIPS_GOT_PAGE:               howto manager.      (line  383)
* BFD_RELOC_MIPS_HIGHER:                 howto manager.      (line  396)
* BFD_RELOC_MIPS_HIGHEST:                howto manager.      (line  394)
* BFD_RELOC_MIPS_INSERT_A:               howto manager.      (line  391)
* BFD_RELOC_MIPS_INSERT_B:               howto manager.      (line  392)
* BFD_RELOC_MIPS_JALR:                   howto manager.      (line  402)
* BFD_RELOC_MIPS_JMP:                    howto manager.      (line  309)
* BFD_RELOC_MIPS_JUMP_SLOT:              howto manager.      (line  427)
* BFD_RELOC_MIPS_LITERAL:                howto manager.      (line  352)
* BFD_RELOC_MIPS_REL16:                  howto manager.      (line  400)
* BFD_RELOC_MIPS_RELGOT:                 howto manager.      (line  401)
* BFD_RELOC_MIPS_SCN_DISP:               howto manager.      (line  398)
* BFD_RELOC_MIPS_SHIFT5:                 howto manager.      (line  389)
* BFD_RELOC_MIPS_SHIFT6:                 howto manager.      (line  390)
* BFD_RELOC_MIPS_SUB:                    howto manager.      (line  381)
* BFD_RELOC_MIPS_TLS_DTPMOD32:           howto manager.      (line  404)
* BFD_RELOC_MIPS_TLS_DTPMOD64:           howto manager.      (line  406)
* BFD_RELOC_MIPS_TLS_DTPREL32:           howto manager.      (line  405)
* BFD_RELOC_MIPS_TLS_DTPREL64:           howto manager.      (line  407)
* BFD_RELOC_MIPS_TLS_DTPREL_HI16:        howto manager.      (line  412)
* BFD_RELOC_MIPS_TLS_DTPREL_LO16:        howto manager.      (line  414)
* BFD_RELOC_MIPS_TLS_GD:                 howto manager.      (line  408)
* BFD_RELOC_MIPS_TLS_GOTTPREL:           howto manager.      (line  416)
* BFD_RELOC_MIPS_TLS_LDM:                howto manager.      (line  410)
* BFD_RELOC_MIPS_TLS_TPREL32:            howto manager.      (line  418)
* BFD_RELOC_MIPS_TLS_TPREL64:            howto manager.      (line  419)
* BFD_RELOC_MIPS_TLS_TPREL_HI16:         howto manager.      (line  420)
* BFD_RELOC_MIPS_TLS_TPREL_LO16:         howto manager.      (line  422)
* BFD_RELOC_MMIX_ADDR19:                 howto manager.      (line 1563)
* BFD_RELOC_MMIX_ADDR27:                 howto manager.      (line 1566)
* BFD_RELOC_MMIX_BASE_PLUS_OFFSET:       howto manager.      (line 1575)
* BFD_RELOC_MMIX_CBRANCH:                howto manager.      (line 1546)
* BFD_RELOC_MMIX_CBRANCH_1:              howto manager.      (line 1548)
* BFD_RELOC_MMIX_CBRANCH_2:              howto manager.      (line 1549)
* BFD_RELOC_MMIX_CBRANCH_3:              howto manager.      (line 1550)
* BFD_RELOC_MMIX_CBRANCH_J:              howto manager.      (line 1547)
* BFD_RELOC_MMIX_GETA:                   howto manager.      (line 1541)
* BFD_RELOC_MMIX_GETA_1:                 howto manager.      (line 1542)
* BFD_RELOC_MMIX_GETA_2:                 howto manager.      (line 1543)
* BFD_RELOC_MMIX_GETA_3:                 howto manager.      (line 1544)
* BFD_RELOC_MMIX_JMP:                    howto manager.      (line 1558)
* BFD_RELOC_MMIX_JMP_1:                  howto manager.      (line 1559)
* BFD_RELOC_MMIX_JMP_2:                  howto manager.      (line 1560)
* BFD_RELOC_MMIX_JMP_3:                  howto manager.      (line 1561)
* BFD_RELOC_MMIX_LOCAL:                  howto manager.      (line 1578)
* BFD_RELOC_MMIX_PUSHJ:                  howto manager.      (line 1552)
* BFD_RELOC_MMIX_PUSHJ_1:                howto manager.      (line 1553)
* BFD_RELOC_MMIX_PUSHJ_2:                howto manager.      (line 1554)
* BFD_RELOC_MMIX_PUSHJ_3:                howto manager.      (line 1555)
* BFD_RELOC_MMIX_PUSHJ_STUBBABLE:        howto manager.      (line 1556)
* BFD_RELOC_MMIX_REG:                    howto manager.      (line 1572)
* BFD_RELOC_MMIX_REG_OR_BYTE:            howto manager.      (line 1569)
* BFD_RELOC_MN10300_16_PCREL:            howto manager.      (line  510)
* BFD_RELOC_MN10300_32_PCREL:            howto manager.      (line  507)
* BFD_RELOC_MN10300_ALIGN:               howto manager.      (line  494)
* BFD_RELOC_MN10300_COPY:                howto manager.      (line  482)
* BFD_RELOC_MN10300_GLOB_DAT:            howto manager.      (line  484)
* BFD_RELOC_MN10300_GOT16:               howto manager.      (line  479)
* BFD_RELOC_MN10300_GOT24:               howto manager.      (line  476)
* BFD_RELOC_MN10300_GOT32:               howto manager.      (line  473)
* BFD_RELOC_MN10300_GOTOFF24:            howto manager.      (line  471)
* BFD_RELOC_MN10300_JMP_SLOT:            howto manager.      (line  486)
* BFD_RELOC_MN10300_RELATIVE:            howto manager.      (line  488)
* BFD_RELOC_MN10300_SYM_DIFF:            howto manager.      (line  490)
* BFD_RELOC_MN10300_TLS_DTPMOD:          howto manager.      (line  503)
* BFD_RELOC_MN10300_TLS_DTPOFF:          howto manager.      (line  504)
* BFD_RELOC_MN10300_TLS_GD:              howto manager.      (line  497)
* BFD_RELOC_MN10300_TLS_GOTIE:           howto manager.      (line  500)
* BFD_RELOC_MN10300_TLS_IE:              howto manager.      (line  501)
* BFD_RELOC_MN10300_TLS_LD:              howto manager.      (line  498)
* BFD_RELOC_MN10300_TLS_LDO:             howto manager.      (line  499)
* BFD_RELOC_MN10300_TLS_LE:              howto manager.      (line  502)
* BFD_RELOC_MN10300_TLS_TPOFF:           howto manager.      (line  505)
* BFD_RELOC_MOXIE_10_PCREL:              howto manager.      (line  429)
* BFD_RELOC_MSP430X_ABS16:               howto manager.      (line 2312)
* BFD_RELOC_MSP430X_ABS20_ADR_DST:       howto manager.      (line 2309)
* BFD_RELOC_MSP430X_ABS20_ADR_SRC:       howto manager.      (line 2308)
* BFD_RELOC_MSP430X_ABS20_EXT_DST:       howto manager.      (line 2306)
* BFD_RELOC_MSP430X_ABS20_EXT_ODST:      howto manager.      (line 2307)
* BFD_RELOC_MSP430X_ABS20_EXT_SRC:       howto manager.      (line 2305)
* BFD_RELOC_MSP430X_PCR16:               howto manager.      (line 2310)
* BFD_RELOC_MSP430X_PCR20_CALL:          howto manager.      (line 2311)
* BFD_RELOC_MSP430X_PCR20_EXT_DST:       howto manager.      (line 2303)
* BFD_RELOC_MSP430X_PCR20_EXT_ODST:      howto manager.      (line 2304)
* BFD_RELOC_MSP430X_PCR20_EXT_SRC:       howto manager.      (line 2302)
* BFD_RELOC_MSP430_10_PCREL:             howto manager.      (line 2294)
* BFD_RELOC_MSP430_16:                   howto manager.      (line 2296)
* BFD_RELOC_MSP430_16_BYTE:              howto manager.      (line 2298)
* BFD_RELOC_MSP430_16_PCREL:             howto manager.      (line 2295)
* BFD_RELOC_MSP430_16_PCREL_BYTE:        howto manager.      (line 2297)
* BFD_RELOC_MSP430_2X_PCREL:             howto manager.      (line 2299)
* BFD_RELOC_MSP430_ABS8:                 howto manager.      (line 2301)
* BFD_RELOC_MSP430_ABS_HI16:             howto manager.      (line 2313)
* BFD_RELOC_MSP430_PREL31:               howto manager.      (line 2314)
* BFD_RELOC_MSP430_RL_PCREL:             howto manager.      (line 2300)
* BFD_RELOC_MSP430_SYM_DIFF:             howto manager.      (line 2315)
* BFD_RELOC_MT_GNU_VTENTRY:              howto manager.      (line 2290)
* BFD_RELOC_MT_GNU_VTINHERIT:            howto manager.      (line 2288)
* BFD_RELOC_MT_HI16:                     howto manager.      (line 2284)
* BFD_RELOC_MT_LO16:                     howto manager.      (line 2286)
* BFD_RELOC_MT_PC16:                     howto manager.      (line 2282)
* BFD_RELOC_MT_PCINSN8:                  howto manager.      (line 2292)
* BFD_RELOC_NDS32_10IFCU_PCREL:          howto manager.      (line 1291)
* BFD_RELOC_NDS32_10_UPCREL:             howto manager.      (line 1262)
* BFD_RELOC_NDS32_15_FIXED:              howto manager.      (line 1223)
* BFD_RELOC_NDS32_15_PCREL:              howto manager.      (line 1149)
* BFD_RELOC_NDS32_17IFC_PCREL:           howto manager.      (line 1290)
* BFD_RELOC_NDS32_17_FIXED:              howto manager.      (line 1224)
* BFD_RELOC_NDS32_17_PCREL:              howto manager.      (line 1151)
* BFD_RELOC_NDS32_20:                    howto manager.      (line 1141)
* BFD_RELOC_NDS32_25_ABS:                howto manager.      (line 1286)
* BFD_RELOC_NDS32_25_FIXED:              howto manager.      (line 1225)
* BFD_RELOC_NDS32_25_PCREL:              howto manager.      (line 1153)
* BFD_RELOC_NDS32_25_PLTREL:             howto manager.      (line 1199)
* BFD_RELOC_NDS32_5:                     howto manager.      (line 1260)
* BFD_RELOC_NDS32_9_FIXED:               howto manager.      (line 1222)
* BFD_RELOC_NDS32_9_PCREL:               howto manager.      (line 1143)
* BFD_RELOC_NDS32_9_PLTREL:              howto manager.      (line 1198)
* BFD_RELOC_NDS32_COPY:                  howto manager.      (line 1200)
* BFD_RELOC_NDS32_DATA:                  howto manager.      (line 1288)
* BFD_RELOC_NDS32_DIFF16:                howto manager.      (line 1281)
* BFD_RELOC_NDS32_DIFF32:                howto manager.      (line 1282)
* BFD_RELOC_NDS32_DIFF8:                 howto manager.      (line 1280)
* BFD_RELOC_NDS32_DIFF_ULEB128:          howto manager.      (line 1283)
* BFD_RELOC_NDS32_DWARF2_LEB:            howto manager.      (line 1246)
* BFD_RELOC_NDS32_DWARF2_OP1:            howto manager.      (line 1244)
* BFD_RELOC_NDS32_DWARF2_OP2:            howto manager.      (line 1245)
* BFD_RELOC_NDS32_EMPTY:                 howto manager.      (line 1284)
* BFD_RELOC_NDS32_GLOB_DAT:              howto manager.      (line 1201)
* BFD_RELOC_NDS32_GOT15S2:               howto manager.      (line 1257)
* BFD_RELOC_NDS32_GOT17S2:               howto manager.      (line 1258)
* BFD_RELOC_NDS32_GOT20:                 howto manager.      (line 1197)
* BFD_RELOC_NDS32_GOTOFF:                howto manager.      (line 1204)
* BFD_RELOC_NDS32_GOTOFF_HI20:           howto manager.      (line 1205)
* BFD_RELOC_NDS32_GOTOFF_LO12:           howto manager.      (line 1206)
* BFD_RELOC_NDS32_GOTOFF_LO15:           howto manager.      (line 1255)
* BFD_RELOC_NDS32_GOTOFF_LO19:           howto manager.      (line 1256)
* BFD_RELOC_NDS32_GOTOFF_SUFF:           howto manager.      (line 1269)
* BFD_RELOC_NDS32_GOTPC20:               howto manager.      (line 1207)
* BFD_RELOC_NDS32_GOTPC_HI20:            howto manager.      (line 1210)
* BFD_RELOC_NDS32_GOTPC_LO12:            howto manager.      (line 1211)
* BFD_RELOC_NDS32_GOTTPOFF:              howto manager.      (line 1298)
* BFD_RELOC_NDS32_GOT_HI20:              howto manager.      (line 1208)
* BFD_RELOC_NDS32_GOT_LO12:              howto manager.      (line 1209)
* BFD_RELOC_NDS32_GOT_LO15:              howto manager.      (line 1253)
* BFD_RELOC_NDS32_GOT_LO19:              howto manager.      (line 1254)
* BFD_RELOC_NDS32_GOT_SUFF:              howto manager.      (line 1268)
* BFD_RELOC_NDS32_HI20:                  howto manager.      (line 1155)
* BFD_RELOC_NDS32_INSN16:                howto manager.      (line 1213)
* BFD_RELOC_NDS32_JMP_SLOT:              howto manager.      (line 1202)
* BFD_RELOC_NDS32_LABEL:                 howto manager.      (line 1214)
* BFD_RELOC_NDS32_LO12S0:                howto manager.      (line 1167)
* BFD_RELOC_NDS32_LO12S0_ORI:            howto manager.      (line 1170)
* BFD_RELOC_NDS32_LO12S1:                howto manager.      (line 1164)
* BFD_RELOC_NDS32_LO12S2:                howto manager.      (line 1161)
* BFD_RELOC_NDS32_LO12S2_DP:             howto manager.      (line 1241)
* BFD_RELOC_NDS32_LO12S2_SP:             howto manager.      (line 1242)
* BFD_RELOC_NDS32_LO12S3:                howto manager.      (line 1158)
* BFD_RELOC_NDS32_LOADSTORE:             howto manager.      (line 1221)
* BFD_RELOC_NDS32_LONGCALL1:             howto manager.      (line 1215)
* BFD_RELOC_NDS32_LONGCALL2:             howto manager.      (line 1216)
* BFD_RELOC_NDS32_LONGCALL3:             howto manager.      (line 1217)
* BFD_RELOC_NDS32_LONGCALL4:             howto manager.      (line 1226)
* BFD_RELOC_NDS32_LONGCALL5:             howto manager.      (line 1227)
* BFD_RELOC_NDS32_LONGCALL6:             howto manager.      (line 1228)
* BFD_RELOC_NDS32_LONGJUMP1:             howto manager.      (line 1218)
* BFD_RELOC_NDS32_LONGJUMP2:             howto manager.      (line 1219)
* BFD_RELOC_NDS32_LONGJUMP3:             howto manager.      (line 1220)
* BFD_RELOC_NDS32_LONGJUMP4:             howto manager.      (line 1229)
* BFD_RELOC_NDS32_LONGJUMP5:             howto manager.      (line 1230)
* BFD_RELOC_NDS32_LONGJUMP6:             howto manager.      (line 1231)
* BFD_RELOC_NDS32_LONGJUMP7:             howto manager.      (line 1232)
* BFD_RELOC_NDS32_MINUEND:               howto manager.      (line 1278)
* BFD_RELOC_NDS32_MULCALL_SUFF:          howto manager.      (line 1271)
* BFD_RELOC_NDS32_PLTBLOCK:              howto manager.      (line 1275)
* BFD_RELOC_NDS32_PLTREL_HI20:           howto manager.      (line 1234)
* BFD_RELOC_NDS32_PLTREL_LO12:           howto manager.      (line 1235)
* BFD_RELOC_NDS32_PLT_GOTREL_HI20:       howto manager.      (line 1236)
* BFD_RELOC_NDS32_PLT_GOTREL_LO12:       howto manager.      (line 1237)
* BFD_RELOC_NDS32_PLT_GOTREL_LO15:       howto manager.      (line 1251)
* BFD_RELOC_NDS32_PLT_GOTREL_LO19:       howto manager.      (line 1252)
* BFD_RELOC_NDS32_PLT_GOTREL_LO20:       howto manager.      (line 1250)
* BFD_RELOC_NDS32_PLT_GOT_SUFF:          howto manager.      (line 1270)
* BFD_RELOC_NDS32_PTR:                   howto manager.      (line 1272)
* BFD_RELOC_NDS32_PTR_COUNT:             howto manager.      (line 1273)
* BFD_RELOC_NDS32_PTR_RESOLVED:          howto manager.      (line 1274)
* BFD_RELOC_NDS32_RELATIVE:              howto manager.      (line 1203)
* BFD_RELOC_NDS32_RELAX_ENTRY:           howto manager.      (line 1267)
* BFD_RELOC_NDS32_RELAX_REGION_BEGIN:    howto manager.      (line 1276)
* BFD_RELOC_NDS32_RELAX_REGION_END:      howto manager.      (line 1277)
* BFD_RELOC_NDS32_SDA12S2_DP:            howto manager.      (line 1239)
* BFD_RELOC_NDS32_SDA12S2_SP:            howto manager.      (line 1240)
* BFD_RELOC_NDS32_SDA15S0:               howto manager.      (line 1182)
* BFD_RELOC_NDS32_SDA15S1:               howto manager.      (line 1179)
* BFD_RELOC_NDS32_SDA15S2:               howto manager.      (line 1176)
* BFD_RELOC_NDS32_SDA15S3:               howto manager.      (line 1173)
* BFD_RELOC_NDS32_SDA16S3:               howto manager.      (line 1185)
* BFD_RELOC_NDS32_SDA17S2:               howto manager.      (line 1188)
* BFD_RELOC_NDS32_SDA18S1:               howto manager.      (line 1191)
* BFD_RELOC_NDS32_SDA19S0:               howto manager.      (line 1194)
* BFD_RELOC_NDS32_SDA_FP7U2_RELA:        howto manager.      (line 1265)
* BFD_RELOC_NDS32_SUBTRAHEND:            howto manager.      (line 1279)
* BFD_RELOC_NDS32_TLS_IE_HI20:           howto manager.      (line 1299)
* BFD_RELOC_NDS32_TLS_IE_LO12S2:         howto manager.      (line 1300)
* BFD_RELOC_NDS32_TLS_LE_15S0:           howto manager.      (line 1303)
* BFD_RELOC_NDS32_TLS_LE_15S1:           howto manager.      (line 1304)
* BFD_RELOC_NDS32_TLS_LE_15S2:           howto manager.      (line 1305)
* BFD_RELOC_NDS32_TLS_LE_20:             howto manager.      (line 1302)
* BFD_RELOC_NDS32_TLS_LE_ADD:            howto manager.      (line 1296)
* BFD_RELOC_NDS32_TLS_LE_HI20:           howto manager.      (line 1294)
* BFD_RELOC_NDS32_TLS_LE_LO12:           howto manager.      (line 1295)
* BFD_RELOC_NDS32_TLS_LE_LS:             howto manager.      (line 1297)
* BFD_RELOC_NDS32_TLS_TPOFF:             howto manager.      (line 1301)
* BFD_RELOC_NDS32_TPOFF:                 howto manager.      (line 1293)
* BFD_RELOC_NDS32_TRAN:                  howto manager.      (line 1289)
* BFD_RELOC_NDS32_UPDATE_TA:             howto manager.      (line 1248)
* BFD_RELOC_NDS32_WORD_9_PCREL:          howto manager.      (line 1146)
* BFD_RELOC_NIOS2_ALIGN:                 howto manager.      (line 2331)
* BFD_RELOC_NIOS2_CACHE_OPX:             howto manager.      (line 2321)
* BFD_RELOC_NIOS2_CALL16:                howto manager.      (line 2333)
* BFD_RELOC_NIOS2_CALL26:                howto manager.      (line 2319)
* BFD_RELOC_NIOS2_CALL26_NOAT:           howto manager.      (line 2351)
* BFD_RELOC_NIOS2_CALLR:                 howto manager.      (line 2330)
* BFD_RELOC_NIOS2_CALL_HA:               howto manager.      (line 2355)
* BFD_RELOC_NIOS2_CALL_LO:               howto manager.      (line 2354)
* BFD_RELOC_NIOS2_CJMP:                  howto manager.      (line 2329)
* BFD_RELOC_NIOS2_COPY:                  howto manager.      (line 2346)
* BFD_RELOC_NIOS2_GLOB_DAT:              howto manager.      (line 2347)
* BFD_RELOC_NIOS2_GOT16:                 howto manager.      (line 2332)
* BFD_RELOC_NIOS2_GOTOFF:                howto manager.      (line 2350)
* BFD_RELOC_NIOS2_GOTOFF_HA:             howto manager.      (line 2335)
* BFD_RELOC_NIOS2_GOTOFF_LO:             howto manager.      (line 2334)
* BFD_RELOC_NIOS2_GOT_HA:                howto manager.      (line 2353)
* BFD_RELOC_NIOS2_GOT_LO:                howto manager.      (line 2352)
* BFD_RELOC_NIOS2_GPREL:                 howto manager.      (line 2327)
* BFD_RELOC_NIOS2_HI16:                  howto manager.      (line 2324)
* BFD_RELOC_NIOS2_HIADJ16:               howto manager.      (line 2326)
* BFD_RELOC_NIOS2_IMM5:                  howto manager.      (line 2320)
* BFD_RELOC_NIOS2_IMM6:                  howto manager.      (line 2322)
* BFD_RELOC_NIOS2_IMM8:                  howto manager.      (line 2323)
* BFD_RELOC_NIOS2_JUMP_SLOT:             howto manager.      (line 2348)
* BFD_RELOC_NIOS2_LO16:                  howto manager.      (line 2325)
* BFD_RELOC_NIOS2_PCREL_HA:              howto manager.      (line 2337)
* BFD_RELOC_NIOS2_PCREL_LO:              howto manager.      (line 2336)
* BFD_RELOC_NIOS2_RELATIVE:              howto manager.      (line 2349)
* BFD_RELOC_NIOS2_S16:                   howto manager.      (line 2317)
* BFD_RELOC_NIOS2_TLS_DTPMOD:            howto manager.      (line 2343)
* BFD_RELOC_NIOS2_TLS_DTPREL:            howto manager.      (line 2344)
* BFD_RELOC_NIOS2_TLS_GD16:              howto manager.      (line 2338)
* BFD_RELOC_NIOS2_TLS_IE16:              howto manager.      (line 2341)
* BFD_RELOC_NIOS2_TLS_LDM16:             howto manager.      (line 2339)
* BFD_RELOC_NIOS2_TLS_LDO16:             howto manager.      (line 2340)
* BFD_RELOC_NIOS2_TLS_LE16:              howto manager.      (line 2342)
* BFD_RELOC_NIOS2_TLS_TPREL:             howto manager.      (line 2345)
* BFD_RELOC_NIOS2_U16:                   howto manager.      (line 2318)
* BFD_RELOC_NIOS2_UJMP:                  howto manager.      (line 2328)
* BFD_RELOC_NONE:                        howto manager.      (line  122)
* BFD_RELOC_NS32K_DISP_16:               howto manager.      (line  575)
* BFD_RELOC_NS32K_DISP_16_PCREL:         howto manager.      (line  578)
* BFD_RELOC_NS32K_DISP_32:               howto manager.      (line  576)
* BFD_RELOC_NS32K_DISP_32_PCREL:         howto manager.      (line  579)
* BFD_RELOC_NS32K_DISP_8:                howto manager.      (line  574)
* BFD_RELOC_NS32K_DISP_8_PCREL:          howto manager.      (line  577)
* BFD_RELOC_NS32K_IMM_16:                howto manager.      (line  569)
* BFD_RELOC_NS32K_IMM_16_PCREL:          howto manager.      (line  572)
* BFD_RELOC_NS32K_IMM_32:                howto manager.      (line  570)
* BFD_RELOC_NS32K_IMM_32_PCREL:          howto manager.      (line  573)
* BFD_RELOC_NS32K_IMM_8:                 howto manager.      (line  568)
* BFD_RELOC_NS32K_IMM_8_PCREL:           howto manager.      (line  571)
* BFD_RELOC_OR1K_COPY:                   howto manager.      (line 2241)
* BFD_RELOC_OR1K_GLOB_DAT:               howto manager.      (line 2242)
* BFD_RELOC_OR1K_GOT16:                  howto manager.      (line 2237)
* BFD_RELOC_OR1K_GOTOFF_HI16:            howto manager.      (line 2239)
* BFD_RELOC_OR1K_GOTOFF_LO16:            howto manager.      (line 2240)
* BFD_RELOC_OR1K_GOTPC_HI16:             howto manager.      (line 2235)
* BFD_RELOC_OR1K_GOTPC_LO16:             howto manager.      (line 2236)
* BFD_RELOC_OR1K_JMP_SLOT:               howto manager.      (line 2243)
* BFD_RELOC_OR1K_PLT26:                  howto manager.      (line 2238)
* BFD_RELOC_OR1K_RELATIVE:               howto manager.      (line 2244)
* BFD_RELOC_OR1K_REL_26:                 howto manager.      (line 2234)
* BFD_RELOC_OR1K_TLS_DTPMOD:             howto manager.      (line 2257)
* BFD_RELOC_OR1K_TLS_DTPOFF:             howto manager.      (line 2256)
* BFD_RELOC_OR1K_TLS_GD_HI16:            howto manager.      (line 2245)
* BFD_RELOC_OR1K_TLS_GD_LO16:            howto manager.      (line 2246)
* BFD_RELOC_OR1K_TLS_IE_HI16:            howto manager.      (line 2251)
* BFD_RELOC_OR1K_TLS_IE_LO16:            howto manager.      (line 2252)
* BFD_RELOC_OR1K_TLS_LDM_HI16:           howto manager.      (line 2247)
* BFD_RELOC_OR1K_TLS_LDM_LO16:           howto manager.      (line 2248)
* BFD_RELOC_OR1K_TLS_LDO_HI16:           howto manager.      (line 2249)
* BFD_RELOC_OR1K_TLS_LDO_LO16:           howto manager.      (line 2250)
* BFD_RELOC_OR1K_TLS_LE_HI16:            howto manager.      (line 2253)
* BFD_RELOC_OR1K_TLS_LE_LO16:            howto manager.      (line 2254)
* BFD_RELOC_OR1K_TLS_TPOFF:              howto manager.      (line 2255)
* BFD_RELOC_PDP11_DISP_6_PCREL:          howto manager.      (line  582)
* BFD_RELOC_PDP11_DISP_8_PCREL:          howto manager.      (line  581)
* BFD_RELOC_PJ_CODE_DIR16:               howto manager.      (line  586)
* BFD_RELOC_PJ_CODE_DIR32:               howto manager.      (line  587)
* BFD_RELOC_PJ_CODE_HI16:                howto manager.      (line  584)
* BFD_RELOC_PJ_CODE_LO16:                howto manager.      (line  585)
* BFD_RELOC_PJ_CODE_REL16:               howto manager.      (line  588)
* BFD_RELOC_PJ_CODE_REL32:               howto manager.      (line  589)
* BFD_RELOC_PPC64_ADDR16_DS:             howto manager.      (line  650)
* BFD_RELOC_PPC64_ADDR16_HIGH:           howto manager.      (line  661)
* BFD_RELOC_PPC64_ADDR16_HIGHA:          howto manager.      (line  662)
* BFD_RELOC_PPC64_ADDR16_LO_DS:          howto manager.      (line  651)
* BFD_RELOC_PPC64_ADDR64_LOCAL:          howto manager.      (line  663)
* BFD_RELOC_PPC64_DTPREL16_DS:           howto manager.      (line  701)
* BFD_RELOC_PPC64_DTPREL16_HIGH:         howto manager.      (line  709)
* BFD_RELOC_PPC64_DTPREL16_HIGHA:        howto manager.      (line  710)
* BFD_RELOC_PPC64_DTPREL16_HIGHER:       howto manager.      (line  703)
* BFD_RELOC_PPC64_DTPREL16_HIGHERA:      howto manager.      (line  704)
* BFD_RELOC_PPC64_DTPREL16_HIGHEST:      howto manager.      (line  705)
* BFD_RELOC_PPC64_DTPREL16_HIGHESTA:     howto manager.      (line  706)
* BFD_RELOC_PPC64_DTPREL16_LO_DS:        howto manager.      (line  702)
* BFD_RELOC_PPC64_GOT16_DS:              howto manager.      (line  652)
* BFD_RELOC_PPC64_GOT16_LO_DS:           howto manager.      (line  653)
* BFD_RELOC_PPC64_HIGHER:                howto manager.      (line  638)
* BFD_RELOC_PPC64_HIGHER_S:              howto manager.      (line  639)
* BFD_RELOC_PPC64_HIGHEST:               howto manager.      (line  640)
* BFD_RELOC_PPC64_HIGHEST_S:             howto manager.      (line  641)
* BFD_RELOC_PPC64_PLT16_LO_DS:           howto manager.      (line  654)
* BFD_RELOC_PPC64_PLTGOT16:              howto manager.      (line  646)
* BFD_RELOC_PPC64_PLTGOT16_DS:           howto manager.      (line  659)
* BFD_RELOC_PPC64_PLTGOT16_HA:           howto manager.      (line  649)
* BFD_RELOC_PPC64_PLTGOT16_HI:           howto manager.      (line  648)
* BFD_RELOC_PPC64_PLTGOT16_LO:           howto manager.      (line  647)
* BFD_RELOC_PPC64_PLTGOT16_LO_DS:        howto manager.      (line  660)
* BFD_RELOC_PPC64_SECTOFF_DS:            howto manager.      (line  655)
* BFD_RELOC_PPC64_SECTOFF_LO_DS:         howto manager.      (line  656)
* BFD_RELOC_PPC64_TOC:                   howto manager.      (line  645)
* BFD_RELOC_PPC64_TOC16_DS:              howto manager.      (line  657)
* BFD_RELOC_PPC64_TOC16_HA:              howto manager.      (line  644)
* BFD_RELOC_PPC64_TOC16_HI:              howto manager.      (line  643)
* BFD_RELOC_PPC64_TOC16_LO:              howto manager.      (line  642)
* BFD_RELOC_PPC64_TOC16_LO_DS:           howto manager.      (line  658)
* BFD_RELOC_PPC64_TPREL16_DS:            howto manager.      (line  695)
* BFD_RELOC_PPC64_TPREL16_HIGH:          howto manager.      (line  707)
* BFD_RELOC_PPC64_TPREL16_HIGHA:         howto manager.      (line  708)
* BFD_RELOC_PPC64_TPREL16_HIGHER:        howto manager.      (line  697)
* BFD_RELOC_PPC64_TPREL16_HIGHERA:       howto manager.      (line  698)
* BFD_RELOC_PPC64_TPREL16_HIGHEST:       howto manager.      (line  699)
* BFD_RELOC_PPC64_TPREL16_HIGHESTA:      howto manager.      (line  700)
* BFD_RELOC_PPC64_TPREL16_LO_DS:         howto manager.      (line  696)
* BFD_RELOC_PPC_B16:                     howto manager.      (line  594)
* BFD_RELOC_PPC_B16_BRNTAKEN:            howto manager.      (line  596)
* BFD_RELOC_PPC_B16_BRTAKEN:             howto manager.      (line  595)
* BFD_RELOC_PPC_B26:                     howto manager.      (line  591)
* BFD_RELOC_PPC_BA16:                    howto manager.      (line  597)
* BFD_RELOC_PPC_BA16_BRNTAKEN:           howto manager.      (line  599)
* BFD_RELOC_PPC_BA16_BRTAKEN:            howto manager.      (line  598)
* BFD_RELOC_PPC_BA26:                    howto manager.      (line  592)
* BFD_RELOC_PPC_COPY:                    howto manager.      (line  600)
* BFD_RELOC_PPC_DTPMOD:                  howto manager.      (line  668)
* BFD_RELOC_PPC_DTPREL:                  howto manager.      (line  678)
* BFD_RELOC_PPC_DTPREL16:                howto manager.      (line  674)
* BFD_RELOC_PPC_DTPREL16_HA:             howto manager.      (line  677)
* BFD_RELOC_PPC_DTPREL16_HI:             howto manager.      (line  676)
* BFD_RELOC_PPC_DTPREL16_LO:             howto manager.      (line  675)
* BFD_RELOC_PPC_EMB_BIT_FLD:             howto manager.      (line  619)
* BFD_RELOC_PPC_EMB_MRKREF:              howto manager.      (line  614)
* BFD_RELOC_PPC_EMB_NADDR16:             howto manager.      (line  606)
* BFD_RELOC_PPC_EMB_NADDR16_HA:          howto manager.      (line  609)
* BFD_RELOC_PPC_EMB_NADDR16_HI:          howto manager.      (line  608)
* BFD_RELOC_PPC_EMB_NADDR16_LO:          howto manager.      (line  607)
* BFD_RELOC_PPC_EMB_NADDR32:             howto manager.      (line  605)
* BFD_RELOC_PPC_EMB_RELSDA:              howto manager.      (line  620)
* BFD_RELOC_PPC_EMB_RELSEC16:            howto manager.      (line  615)
* BFD_RELOC_PPC_EMB_RELST_HA:            howto manager.      (line  618)
* BFD_RELOC_PPC_EMB_RELST_HI:            howto manager.      (line  617)
* BFD_RELOC_PPC_EMB_RELST_LO:            howto manager.      (line  616)
* BFD_RELOC_PPC_EMB_SDA21:               howto manager.      (line  613)
* BFD_RELOC_PPC_EMB_SDA2I16:             howto manager.      (line  611)
* BFD_RELOC_PPC_EMB_SDA2REL:             howto manager.      (line  612)
* BFD_RELOC_PPC_EMB_SDAI16:              howto manager.      (line  610)
* BFD_RELOC_PPC_GLOB_DAT:                howto manager.      (line  601)
* BFD_RELOC_PPC_GOT_DTPREL16:            howto manager.      (line  691)
* BFD_RELOC_PPC_GOT_DTPREL16_HA:         howto manager.      (line  694)
* BFD_RELOC_PPC_GOT_DTPREL16_HI:         howto manager.      (line  693)
* BFD_RELOC_PPC_GOT_DTPREL16_LO:         howto manager.      (line  692)
* BFD_RELOC_PPC_GOT_TLSGD16:             howto manager.      (line  679)
* BFD_RELOC_PPC_GOT_TLSGD16_HA:          howto manager.      (line  682)
* BFD_RELOC_PPC_GOT_TLSGD16_HI:          howto manager.      (line  681)
* BFD_RELOC_PPC_GOT_TLSGD16_LO:          howto manager.      (line  680)
* BFD_RELOC_PPC_GOT_TLSLD16:             howto manager.      (line  683)
* BFD_RELOC_PPC_GOT_TLSLD16_HA:          howto manager.      (line  686)
* BFD_RELOC_PPC_GOT_TLSLD16_HI:          howto manager.      (line  685)
* BFD_RELOC_PPC_GOT_TLSLD16_LO:          howto manager.      (line  684)
* BFD_RELOC_PPC_GOT_TPREL16:             howto manager.      (line  687)
* BFD_RELOC_PPC_GOT_TPREL16_HA:          howto manager.      (line  690)
* BFD_RELOC_PPC_GOT_TPREL16_HI:          howto manager.      (line  689)
* BFD_RELOC_PPC_GOT_TPREL16_LO:          howto manager.      (line  688)
* BFD_RELOC_PPC_JMP_SLOT:                howto manager.      (line  602)
* BFD_RELOC_PPC_LOCAL24PC:               howto manager.      (line  604)
* BFD_RELOC_PPC_RELATIVE:                howto manager.      (line  603)
* BFD_RELOC_PPC_TLS:                     howto manager.      (line  665)
* BFD_RELOC_PPC_TLSGD:                   howto manager.      (line  666)
* BFD_RELOC_PPC_TLSLD:                   howto manager.      (line  667)
* BFD_RELOC_PPC_TOC16:                   howto manager.      (line  593)
* BFD_RELOC_PPC_TPREL:                   howto manager.      (line  673)
* BFD_RELOC_PPC_TPREL16:                 howto manager.      (line  669)
* BFD_RELOC_PPC_TPREL16_HA:              howto manager.      (line  672)
* BFD_RELOC_PPC_TPREL16_HI:              howto manager.      (line  671)
* BFD_RELOC_PPC_TPREL16_LO:              howto manager.      (line  670)
* BFD_RELOC_PPC_VLE_HA16A:               howto manager.      (line  628)
* BFD_RELOC_PPC_VLE_HA16D:               howto manager.      (line  629)
* BFD_RELOC_PPC_VLE_HI16A:               howto manager.      (line  626)
* BFD_RELOC_PPC_VLE_HI16D:               howto manager.      (line  627)
* BFD_RELOC_PPC_VLE_LO16A:               howto manager.      (line  624)
* BFD_RELOC_PPC_VLE_LO16D:               howto manager.      (line  625)
* BFD_RELOC_PPC_VLE_REL15:               howto manager.      (line  622)
* BFD_RELOC_PPC_VLE_REL24:               howto manager.      (line  623)
* BFD_RELOC_PPC_VLE_REL8:                howto manager.      (line  621)
* BFD_RELOC_PPC_VLE_SDA21:               howto manager.      (line  630)
* BFD_RELOC_PPC_VLE_SDA21_LO:            howto manager.      (line  631)
* BFD_RELOC_PPC_VLE_SDAREL_HA16A:        howto manager.      (line  636)
* BFD_RELOC_PPC_VLE_SDAREL_HA16D:        howto manager.      (line  637)
* BFD_RELOC_PPC_VLE_SDAREL_HI16A:        howto manager.      (line  634)
* BFD_RELOC_PPC_VLE_SDAREL_HI16D:        howto manager.      (line  635)
* BFD_RELOC_PPC_VLE_SDAREL_LO16A:        howto manager.      (line  632)
* BFD_RELOC_PPC_VLE_SDAREL_LO16D:        howto manager.      (line  633)
* BFD_RELOC_RELC:                        howto manager.      (line 2271)
* BFD_RELOC_RL78_16U:                    howto manager.      (line 1696)
* BFD_RELOC_RL78_16_OP:                  howto manager.      (line 1692)
* BFD_RELOC_RL78_24U:                    howto manager.      (line 1697)
* BFD_RELOC_RL78_24_OP:                  howto manager.      (line 1693)
* BFD_RELOC_RL78_32_OP:                  howto manager.      (line 1694)
* BFD_RELOC_RL78_8U:                     howto manager.      (line 1695)
* BFD_RELOC_RL78_ABS16:                  howto manager.      (line 1709)
* BFD_RELOC_RL78_ABS16U:                 howto manager.      (line 1713)
* BFD_RELOC_RL78_ABS16UL:                howto manager.      (line 1715)
* BFD_RELOC_RL78_ABS16UW:                howto manager.      (line 1714)
* BFD_RELOC_RL78_ABS16_REV:              howto manager.      (line 1710)
* BFD_RELOC_RL78_ABS32:                  howto manager.      (line 1711)
* BFD_RELOC_RL78_ABS32_REV:              howto manager.      (line 1712)
* BFD_RELOC_RL78_ABS8:                   howto manager.      (line 1708)
* BFD_RELOC_RL78_CODE:                   howto manager.      (line 1720)
* BFD_RELOC_RL78_DIFF:                   howto manager.      (line 1699)
* BFD_RELOC_RL78_DIR3U_PCREL:            howto manager.      (line 1698)
* BFD_RELOC_RL78_GPRELB:                 howto manager.      (line 1700)
* BFD_RELOC_RL78_GPRELL:                 howto manager.      (line 1702)
* BFD_RELOC_RL78_GPRELW:                 howto manager.      (line 1701)
* BFD_RELOC_RL78_HI16:                   howto manager.      (line 1717)
* BFD_RELOC_RL78_HI8:                    howto manager.      (line 1718)
* BFD_RELOC_RL78_LO16:                   howto manager.      (line 1719)
* BFD_RELOC_RL78_NEG16:                  howto manager.      (line 1689)
* BFD_RELOC_RL78_NEG24:                  howto manager.      (line 1690)
* BFD_RELOC_RL78_NEG32:                  howto manager.      (line 1691)
* BFD_RELOC_RL78_NEG8:                   howto manager.      (line 1688)
* BFD_RELOC_RL78_OP_AND:                 howto manager.      (line 1706)
* BFD_RELOC_RL78_OP_NEG:                 howto manager.      (line 1705)
* BFD_RELOC_RL78_OP_SHRA:                howto manager.      (line 1707)
* BFD_RELOC_RL78_OP_SUBTRACT:            howto manager.      (line 1704)
* BFD_RELOC_RL78_RELAX:                  howto manager.      (line 1716)
* BFD_RELOC_RL78_SYM:                    howto manager.      (line 1703)
* BFD_RELOC_RVA:                         howto manager.      (line   97)
* BFD_RELOC_RX_16U:                      howto manager.      (line 1730)
* BFD_RELOC_RX_16_OP:                    howto manager.      (line 1726)
* BFD_RELOC_RX_24U:                      howto manager.      (line 1731)
* BFD_RELOC_RX_24_OP:                    howto manager.      (line 1727)
* BFD_RELOC_RX_32_OP:                    howto manager.      (line 1728)
* BFD_RELOC_RX_8U:                       howto manager.      (line 1729)
* BFD_RELOC_RX_ABS16:                    howto manager.      (line 1741)
* BFD_RELOC_RX_ABS16U:                   howto manager.      (line 1745)
* BFD_RELOC_RX_ABS16UL:                  howto manager.      (line 1747)
* BFD_RELOC_RX_ABS16UW:                  howto manager.      (line 1746)
* BFD_RELOC_RX_ABS16_REV:                howto manager.      (line 1742)
* BFD_RELOC_RX_ABS32:                    howto manager.      (line 1743)
* BFD_RELOC_RX_ABS32_REV:                howto manager.      (line 1744)
* BFD_RELOC_RX_ABS8:                     howto manager.      (line 1740)
* BFD_RELOC_RX_DIFF:                     howto manager.      (line 1733)
* BFD_RELOC_RX_DIR3U_PCREL:              howto manager.      (line 1732)
* BFD_RELOC_RX_GPRELB:                   howto manager.      (line 1734)
* BFD_RELOC_RX_GPRELL:                   howto manager.      (line 1736)
* BFD_RELOC_RX_GPRELW:                   howto manager.      (line 1735)
* BFD_RELOC_RX_NEG16:                    howto manager.      (line 1723)
* BFD_RELOC_RX_NEG24:                    howto manager.      (line 1724)
* BFD_RELOC_RX_NEG32:                    howto manager.      (line 1725)
* BFD_RELOC_RX_NEG8:                     howto manager.      (line 1722)
* BFD_RELOC_RX_OP_NEG:                   howto manager.      (line 1739)
* BFD_RELOC_RX_OP_SUBTRACT:              howto manager.      (line 1738)
* BFD_RELOC_RX_RELAX:                    howto manager.      (line 1748)
* BFD_RELOC_RX_SYM:                      howto manager.      (line 1737)
* BFD_RELOC_SCORE16_BRANCH:              howto manager.      (line 1851)
* BFD_RELOC_SCORE16_JMP:                 howto manager.      (line 1849)
* BFD_RELOC_SCORE_BCMP:                  howto manager.      (line 1853)
* BFD_RELOC_SCORE_BRANCH:                howto manager.      (line 1843)
* BFD_RELOC_SCORE_CALL15:                howto manager.      (line 1857)
* BFD_RELOC_SCORE_DUMMY2:                howto manager.      (line 1840)
* BFD_RELOC_SCORE_DUMMY_HI16:            howto manager.      (line 1858)
* BFD_RELOC_SCORE_GOT15:                 howto manager.      (line 1855)
* BFD_RELOC_SCORE_GOT_LO16:              howto manager.      (line 1856)
* BFD_RELOC_SCORE_GPREL15:               howto manager.      (line 1838)
* BFD_RELOC_SCORE_IMM30:                 howto manager.      (line 1845)
* BFD_RELOC_SCORE_IMM32:                 howto manager.      (line 1847)
* BFD_RELOC_SCORE_JMP:                   howto manager.      (line 1841)
* BFD_RELOC_SH_ALIGN:                    howto manager.      (line  881)
* BFD_RELOC_SH_CODE:                     howto manager.      (line  882)
* BFD_RELOC_SH_COPY:                     howto manager.      (line  887)
* BFD_RELOC_SH_COPY64:                   howto manager.      (line  912)
* BFD_RELOC_SH_COUNT:                    howto manager.      (line  880)
* BFD_RELOC_SH_DATA:                     howto manager.      (line  883)
* BFD_RELOC_SH_DISP12:                   howto manager.      (line  863)
* BFD_RELOC_SH_DISP12BY2:                howto manager.      (line  864)
* BFD_RELOC_SH_DISP12BY4:                howto manager.      (line  865)
* BFD_RELOC_SH_DISP12BY8:                howto manager.      (line  866)
* BFD_RELOC_SH_DISP20:                   howto manager.      (line  867)
* BFD_RELOC_SH_DISP20BY8:                howto manager.      (line  868)
* BFD_RELOC_SH_FUNCDESC:                 howto manager.      (line  955)
* BFD_RELOC_SH_GLOB_DAT:                 howto manager.      (line  888)
* BFD_RELOC_SH_GLOB_DAT64:               howto manager.      (line  913)
* BFD_RELOC_SH_GOT10BY4:                 howto manager.      (line  916)
* BFD_RELOC_SH_GOT10BY8:                 howto manager.      (line  917)
* BFD_RELOC_SH_GOT20:                    howto manager.      (line  949)
* BFD_RELOC_SH_GOTFUNCDESC:              howto manager.      (line  951)
* BFD_RELOC_SH_GOTFUNCDESC20:            howto manager.      (line  952)
* BFD_RELOC_SH_GOTOFF20:                 howto manager.      (line  950)
* BFD_RELOC_SH_GOTOFFFUNCDESC:           howto manager.      (line  953)
* BFD_RELOC_SH_GOTOFFFUNCDESC20:         howto manager.      (line  954)
* BFD_RELOC_SH_GOTOFF_HI16:              howto manager.      (line  907)
* BFD_RELOC_SH_GOTOFF_LOW16:             howto manager.      (line  904)
* BFD_RELOC_SH_GOTOFF_MEDHI16:           howto manager.      (line  906)
* BFD_RELOC_SH_GOTOFF_MEDLOW16:          howto manager.      (line  905)
* BFD_RELOC_SH_GOTPC:                    howto manager.      (line  891)
* BFD_RELOC_SH_GOTPC_HI16:               howto manager.      (line  911)
* BFD_RELOC_SH_GOTPC_LOW16:              howto manager.      (line  908)
* BFD_RELOC_SH_GOTPC_MEDHI16:            howto manager.      (line  910)
* BFD_RELOC_SH_GOTPC_MEDLOW16:           howto manager.      (line  909)
* BFD_RELOC_SH_GOTPLT10BY4:              howto manager.      (line  918)
* BFD_RELOC_SH_GOTPLT10BY8:              howto manager.      (line  919)
* BFD_RELOC_SH_GOTPLT32:                 howto manager.      (line  920)
* BFD_RELOC_SH_GOTPLT_HI16:              howto manager.      (line  899)
* BFD_RELOC_SH_GOTPLT_LOW16:             howto manager.      (line  896)
* BFD_RELOC_SH_GOTPLT_MEDHI16:           howto manager.      (line  898)
* BFD_RELOC_SH_GOTPLT_MEDLOW16:          howto manager.      (line  897)
* BFD_RELOC_SH_GOT_HI16:                 howto manager.      (line  895)
* BFD_RELOC_SH_GOT_LOW16:                howto manager.      (line  892)
* BFD_RELOC_SH_GOT_MEDHI16:              howto manager.      (line  894)
* BFD_RELOC_SH_GOT_MEDLOW16:             howto manager.      (line  893)
* BFD_RELOC_SH_IMM3:                     howto manager.      (line  861)
* BFD_RELOC_SH_IMM3U:                    howto manager.      (line  862)
* BFD_RELOC_SH_IMM4:                     howto manager.      (line  869)
* BFD_RELOC_SH_IMM4BY2:                  howto manager.      (line  870)
* BFD_RELOC_SH_IMM4BY4:                  howto manager.      (line  871)
* BFD_RELOC_SH_IMM8:                     howto manager.      (line  872)
* BFD_RELOC_SH_IMM8BY2:                  howto manager.      (line  873)
* BFD_RELOC_SH_IMM8BY4:                  howto manager.      (line  874)
* BFD_RELOC_SH_IMMS10:                   howto manager.      (line  926)
* BFD_RELOC_SH_IMMS10BY2:                howto manager.      (line  927)
* BFD_RELOC_SH_IMMS10BY4:                howto manager.      (line  928)
* BFD_RELOC_SH_IMMS10BY8:                howto manager.      (line  929)
* BFD_RELOC_SH_IMMS16:                   howto manager.      (line  930)
* BFD_RELOC_SH_IMMS6:                    howto manager.      (line  923)
* BFD_RELOC_SH_IMMS6BY32:                howto manager.      (line  924)
* BFD_RELOC_SH_IMMU16:                   howto manager.      (line  931)
* BFD_RELOC_SH_IMMU5:                    howto manager.      (line  922)
* BFD_RELOC_SH_IMMU6:                    howto manager.      (line  925)
* BFD_RELOC_SH_IMM_HI16:                 howto manager.      (line  938)
* BFD_RELOC_SH_IMM_HI16_PCREL:           howto manager.      (line  939)
* BFD_RELOC_SH_IMM_LOW16:                howto manager.      (line  932)
* BFD_RELOC_SH_IMM_LOW16_PCREL:          howto manager.      (line  933)
* BFD_RELOC_SH_IMM_MEDHI16:              howto manager.      (line  936)
* BFD_RELOC_SH_IMM_MEDHI16_PCREL:        howto manager.      (line  937)
* BFD_RELOC_SH_IMM_MEDLOW16:             howto manager.      (line  934)
* BFD_RELOC_SH_IMM_MEDLOW16_PCREL:       howto manager.      (line  935)
* BFD_RELOC_SH_JMP_SLOT:                 howto manager.      (line  889)
* BFD_RELOC_SH_JMP_SLOT64:               howto manager.      (line  914)
* BFD_RELOC_SH_LABEL:                    howto manager.      (line  884)
* BFD_RELOC_SH_LOOP_END:                 howto manager.      (line  886)
* BFD_RELOC_SH_LOOP_START:               howto manager.      (line  885)
* BFD_RELOC_SH_PCDISP12BY2:              howto manager.      (line  860)
* BFD_RELOC_SH_PCDISP8BY2:               howto manager.      (line  859)
* BFD_RELOC_SH_PCRELIMM8BY2:             howto manager.      (line  875)
* BFD_RELOC_SH_PCRELIMM8BY4:             howto manager.      (line  876)
* BFD_RELOC_SH_PLT_HI16:                 howto manager.      (line  903)
* BFD_RELOC_SH_PLT_LOW16:                howto manager.      (line  900)
* BFD_RELOC_SH_PLT_MEDHI16:              howto manager.      (line  902)
* BFD_RELOC_SH_PLT_MEDLOW16:             howto manager.      (line  901)
* BFD_RELOC_SH_PT_16:                    howto manager.      (line  940)
* BFD_RELOC_SH_RELATIVE:                 howto manager.      (line  890)
* BFD_RELOC_SH_RELATIVE64:               howto manager.      (line  915)
* BFD_RELOC_SH_SHMEDIA_CODE:             howto manager.      (line  921)
* BFD_RELOC_SH_SWITCH16:                 howto manager.      (line  877)
* BFD_RELOC_SH_SWITCH32:                 howto manager.      (line  878)
* BFD_RELOC_SH_TLS_DTPMOD32:             howto manager.      (line  946)
* BFD_RELOC_SH_TLS_DTPOFF32:             howto manager.      (line  947)
* BFD_RELOC_SH_TLS_GD_32:                howto manager.      (line  941)
* BFD_RELOC_SH_TLS_IE_32:                howto manager.      (line  944)
* BFD_RELOC_SH_TLS_LDO_32:               howto manager.      (line  943)
* BFD_RELOC_SH_TLS_LD_32:                howto manager.      (line  942)
* BFD_RELOC_SH_TLS_LE_32:                howto manager.      (line  945)
* BFD_RELOC_SH_TLS_TPOFF32:              howto manager.      (line  948)
* BFD_RELOC_SH_USES:                     howto manager.      (line  879)
* BFD_RELOC_SIZE32:                      howto manager.      (line   69)
* BFD_RELOC_SIZE64:                      howto manager.      (line   70)
* BFD_RELOC_SPARC13:                     howto manager.      (line  125)
* BFD_RELOC_SPARC22:                     howto manager.      (line  124)
* BFD_RELOC_SPARC_10:                    howto manager.      (line  152)
* BFD_RELOC_SPARC_11:                    howto manager.      (line  153)
* BFD_RELOC_SPARC_5:                     howto manager.      (line  165)
* BFD_RELOC_SPARC_6:                     howto manager.      (line  164)
* BFD_RELOC_SPARC_64:                    howto manager.      (line  151)
* BFD_RELOC_SPARC_7:                     howto manager.      (line  163)
* BFD_RELOC_SPARC_BASE13:                howto manager.      (line  148)
* BFD_RELOC_SPARC_BASE22:                howto manager.      (line  149)
* BFD_RELOC_SPARC_COPY:                  howto manager.      (line  132)
* BFD_RELOC_SPARC_DISP64:                howto manager.      (line  166)
* BFD_RELOC_SPARC_GLOB_DAT:              howto manager.      (line  133)
* BFD_RELOC_SPARC_GOT10:                 howto manager.      (line  126)
* BFD_RELOC_SPARC_GOT13:                 howto manager.      (line  127)
* BFD_RELOC_SPARC_GOT22:                 howto manager.      (line  128)
* BFD_RELOC_SPARC_GOTDATA_HIX22:         howto manager.      (line  139)
* BFD_RELOC_SPARC_GOTDATA_LOX10:         howto manager.      (line  140)
* BFD_RELOC_SPARC_GOTDATA_OP:            howto manager.      (line  143)
* BFD_RELOC_SPARC_GOTDATA_OP_HIX22:      howto manager.      (line  141)
* BFD_RELOC_SPARC_GOTDATA_OP_LOX10:      howto manager.      (line  142)
* BFD_RELOC_SPARC_H34:                   howto manager.      (line  175)
* BFD_RELOC_SPARC_H44:                   howto manager.      (line  171)
* BFD_RELOC_SPARC_HH22:                  howto manager.      (line  155)
* BFD_RELOC_SPARC_HIX22:                 howto manager.      (line  169)
* BFD_RELOC_SPARC_HM10:                  howto manager.      (line  156)
* BFD_RELOC_SPARC_IRELATIVE:             howto manager.      (line  145)
* BFD_RELOC_SPARC_JMP_IREL:              howto manager.      (line  144)
* BFD_RELOC_SPARC_JMP_SLOT:              howto manager.      (line  134)
* BFD_RELOC_SPARC_L44:                   howto manager.      (line  173)
* BFD_RELOC_SPARC_LM22:                  howto manager.      (line  157)
* BFD_RELOC_SPARC_LOX10:                 howto manager.      (line  170)
* BFD_RELOC_SPARC_M44:                   howto manager.      (line  172)
* BFD_RELOC_SPARC_OLO10:                 howto manager.      (line  154)
* BFD_RELOC_SPARC_PC10:                  howto manager.      (line  129)
* BFD_RELOC_SPARC_PC22:                  howto manager.      (line  130)
* BFD_RELOC_SPARC_PC_HH22:               howto manager.      (line  158)
* BFD_RELOC_SPARC_PC_HM10:               howto manager.      (line  159)
* BFD_RELOC_SPARC_PC_LM22:               howto manager.      (line  160)
* BFD_RELOC_SPARC_PLT32:                 howto manager.      (line  167)
* BFD_RELOC_SPARC_PLT64:                 howto manager.      (line  168)
* BFD_RELOC_SPARC_REGISTER:              howto manager.      (line  174)
* BFD_RELOC_SPARC_RELATIVE:              howto manager.      (line  135)
* BFD_RELOC_SPARC_REV32:                 howto manager.      (line  180)
* BFD_RELOC_SPARC_SIZE32:                howto manager.      (line  176)
* BFD_RELOC_SPARC_SIZE64:                howto manager.      (line  177)
* BFD_RELOC_SPARC_TLS_DTPMOD32:          howto manager.      (line  200)
* BFD_RELOC_SPARC_TLS_DTPMOD64:          howto manager.      (line  201)
* BFD_RELOC_SPARC_TLS_DTPOFF32:          howto manager.      (line  202)
* BFD_RELOC_SPARC_TLS_DTPOFF64:          howto manager.      (line  203)
* BFD_RELOC_SPARC_TLS_GD_ADD:            howto manager.      (line  184)
* BFD_RELOC_SPARC_TLS_GD_CALL:           howto manager.      (line  185)
* BFD_RELOC_SPARC_TLS_GD_HI22:           howto manager.      (line  182)
* BFD_RELOC_SPARC_TLS_GD_LO10:           howto manager.      (line  183)
* BFD_RELOC_SPARC_TLS_IE_ADD:            howto manager.      (line  197)
* BFD_RELOC_SPARC_TLS_IE_HI22:           howto manager.      (line  193)
* BFD_RELOC_SPARC_TLS_IE_LD:             howto manager.      (line  195)
* BFD_RELOC_SPARC_TLS_IE_LDX:            howto manager.      (line  196)
* BFD_RELOC_SPARC_TLS_IE_LO10:           howto manager.      (line  194)
* BFD_RELOC_SPARC_TLS_LDM_ADD:           howto manager.      (line  188)
* BFD_RELOC_SPARC_TLS_LDM_CALL:          howto manager.      (line  189)
* BFD_RELOC_SPARC_TLS_LDM_HI22:          howto manager.      (line  186)
* BFD_RELOC_SPARC_TLS_LDM_LO10:          howto manager.      (line  187)
* BFD_RELOC_SPARC_TLS_LDO_ADD:           howto manager.      (line  192)
* BFD_RELOC_SPARC_TLS_LDO_HIX22:         howto manager.      (line  190)
* BFD_RELOC_SPARC_TLS_LDO_LOX10:         howto manager.      (line  191)
* BFD_RELOC_SPARC_TLS_LE_HIX22:          howto manager.      (line  198)
* BFD_RELOC_SPARC_TLS_LE_LOX10:          howto manager.      (line  199)
* BFD_RELOC_SPARC_TLS_TPOFF32:           howto manager.      (line  204)
* BFD_RELOC_SPARC_TLS_TPOFF64:           howto manager.      (line  205)
* BFD_RELOC_SPARC_UA16:                  howto manager.      (line  136)
* BFD_RELOC_SPARC_UA32:                  howto manager.      (line  137)
* BFD_RELOC_SPARC_UA64:                  howto manager.      (line  138)
* BFD_RELOC_SPARC_WDISP10:               howto manager.      (line  178)
* BFD_RELOC_SPARC_WDISP16:               howto manager.      (line  161)
* BFD_RELOC_SPARC_WDISP19:               howto manager.      (line  162)
* BFD_RELOC_SPARC_WDISP22:               howto manager.      (line  123)
* BFD_RELOC_SPARC_WPLT30:                howto manager.      (line  131)
* BFD_RELOC_SPU_ADD_PIC:                 howto manager.      (line  221)
* BFD_RELOC_SPU_HI16:                    howto manager.      (line  218)
* BFD_RELOC_SPU_IMM10:                   howto manager.      (line  209)
* BFD_RELOC_SPU_IMM10W:                  howto manager.      (line  210)
* BFD_RELOC_SPU_IMM16:                   howto manager.      (line  211)
* BFD_RELOC_SPU_IMM16W:                  howto manager.      (line  212)
* BFD_RELOC_SPU_IMM18:                   howto manager.      (line  213)
* BFD_RELOC_SPU_IMM7:                    howto manager.      (line  207)
* BFD_RELOC_SPU_IMM8:                    howto manager.      (line  208)
* BFD_RELOC_SPU_LO16:                    howto manager.      (line  217)
* BFD_RELOC_SPU_PCREL16:                 howto manager.      (line  216)
* BFD_RELOC_SPU_PCREL9a:                 howto manager.      (line  214)
* BFD_RELOC_SPU_PCREL9b:                 howto manager.      (line  215)
* BFD_RELOC_SPU_PPU32:                   howto manager.      (line  219)
* BFD_RELOC_SPU_PPU64:                   howto manager.      (line  220)
* BFD_RELOC_THUMB_PCREL_BLX:             howto manager.      (line  726)
* BFD_RELOC_THUMB_PCREL_BRANCH12:        howto manager.      (line  737)
* BFD_RELOC_THUMB_PCREL_BRANCH20:        howto manager.      (line  738)
* BFD_RELOC_THUMB_PCREL_BRANCH23:        howto manager.      (line  739)
* BFD_RELOC_THUMB_PCREL_BRANCH25:        howto manager.      (line  740)
* BFD_RELOC_THUMB_PCREL_BRANCH7:         howto manager.      (line  735)
* BFD_RELOC_THUMB_PCREL_BRANCH9:         howto manager.      (line  736)
* BFD_RELOC_TIC30_LDP:                   howto manager.      (line 1399)
* BFD_RELOC_TIC54X_16_OF_23:             howto manager.      (line 1413)
* BFD_RELOC_TIC54X_23:                   howto manager.      (line 1411)
* BFD_RELOC_TIC54X_MS7_OF_23:            howto manager.      (line 1417)
* BFD_RELOC_TIC54X_PARTLS7:              howto manager.      (line 1403)
* BFD_RELOC_TIC54X_PARTMS9:              howto manager.      (line 1407)
* BFD_RELOC_TILEGX_BROFF_X1:             howto manager.      (line 2859)
* BFD_RELOC_TILEGX_COPY:                 howto manager.      (line 2855)
* BFD_RELOC_TILEGX_DEST_IMM8_X1:         howto manager.      (line 2866)
* BFD_RELOC_TILEGX_GLOB_DAT:             howto manager.      (line 2856)
* BFD_RELOC_TILEGX_HW0:                  howto manager.      (line 2848)
* BFD_RELOC_TILEGX_HW0_LAST:             howto manager.      (line 2852)
* BFD_RELOC_TILEGX_HW1:                  howto manager.      (line 2849)
* BFD_RELOC_TILEGX_HW1_LAST:             howto manager.      (line 2853)
* BFD_RELOC_TILEGX_HW2:                  howto manager.      (line 2850)
* BFD_RELOC_TILEGX_HW2_LAST:             howto manager.      (line 2854)
* BFD_RELOC_TILEGX_HW3:                  howto manager.      (line 2851)
* BFD_RELOC_TILEGX_IMM16_X0_HW0:         howto manager.      (line 2875)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_GOT:     howto manager.      (line 2903)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST:    howto manager.      (line 2883)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_GOT: howto manager.     (line 2911)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_PCREL: howto manager.   (line 2897)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL: howto manager.
                                                             (line 2931)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_TLS_GD: howto manager.  (line 2925)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_TLS_IE: howto manager.  (line 2937)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_TLS_LE: howto manager.  (line 2921)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_PCREL:   howto manager.      (line 2889)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_PLT_PCREL: howto manager.    (line 2905)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_TLS_GD:  howto manager.      (line 2917)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_TLS_IE:  howto manager.      (line 2929)
* BFD_RELOC_TILEGX_IMM16_X0_HW0_TLS_LE:  howto manager.      (line 2919)
* BFD_RELOC_TILEGX_IMM16_X0_HW1:         howto manager.      (line 2877)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST:    howto manager.      (line 2885)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_GOT: howto manager.     (line 2913)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_PCREL: howto manager.   (line 2899)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL: howto manager.
                                                             (line 2933)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_TLS_GD: howto manager.  (line 2927)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_TLS_IE: howto manager.  (line 2939)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_TLS_LE: howto manager.  (line 2923)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_PCREL:   howto manager.      (line 2891)
* BFD_RELOC_TILEGX_IMM16_X0_HW1_PLT_PCREL: howto manager.    (line 2907)
* BFD_RELOC_TILEGX_IMM16_X0_HW2:         howto manager.      (line 2879)
* BFD_RELOC_TILEGX_IMM16_X0_HW2_LAST:    howto manager.      (line 2887)
* BFD_RELOC_TILEGX_IMM16_X0_HW2_LAST_PCREL: howto manager.   (line 2901)
* BFD_RELOC_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL: howto manager.
                                                             (line 2935)
* BFD_RELOC_TILEGX_IMM16_X0_HW2_PCREL:   howto manager.      (line 2893)
* BFD_RELOC_TILEGX_IMM16_X0_HW2_PLT_PCREL: howto manager.    (line 2909)
* BFD_RELOC_TILEGX_IMM16_X0_HW3:         howto manager.      (line 2881)
* BFD_RELOC_TILEGX_IMM16_X0_HW3_PCREL:   howto manager.      (line 2895)
* BFD_RELOC_TILEGX_IMM16_X0_HW3_PLT_PCREL: howto manager.    (line 2915)
* BFD_RELOC_TILEGX_IMM16_X1_HW0:         howto manager.      (line 2876)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_GOT:     howto manager.      (line 2904)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST:    howto manager.      (line 2884)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_GOT: howto manager.     (line 2912)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_PCREL: howto manager.   (line 2898)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL: howto manager.
                                                             (line 2932)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_TLS_GD: howto manager.  (line 2926)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_TLS_IE: howto manager.  (line 2938)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_TLS_LE: howto manager.  (line 2922)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_PCREL:   howto manager.      (line 2890)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_PLT_PCREL: howto manager.    (line 2906)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_TLS_GD:  howto manager.      (line 2918)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_TLS_IE:  howto manager.      (line 2930)
* BFD_RELOC_TILEGX_IMM16_X1_HW0_TLS_LE:  howto manager.      (line 2920)
* BFD_RELOC_TILEGX_IMM16_X1_HW1:         howto manager.      (line 2878)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST:    howto manager.      (line 2886)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_GOT: howto manager.     (line 2914)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_PCREL: howto manager.   (line 2900)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL: howto manager.
                                                             (line 2934)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_TLS_GD: howto manager.  (line 2928)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_TLS_IE: howto manager.  (line 2940)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_TLS_LE: howto manager.  (line 2924)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_PCREL:   howto manager.      (line 2892)
* BFD_RELOC_TILEGX_IMM16_X1_HW1_PLT_PCREL: howto manager.    (line 2908)
* BFD_RELOC_TILEGX_IMM16_X1_HW2:         howto manager.      (line 2880)
* BFD_RELOC_TILEGX_IMM16_X1_HW2_LAST:    howto manager.      (line 2888)
* BFD_RELOC_TILEGX_IMM16_X1_HW2_LAST_PCREL: howto manager.   (line 2902)
* BFD_RELOC_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL: howto manager.
                                                             (line 2936)
* BFD_RELOC_TILEGX_IMM16_X1_HW2_PCREL:   howto manager.      (line 2894)
* BFD_RELOC_TILEGX_IMM16_X1_HW2_PLT_PCREL: howto manager.    (line 2910)
* BFD_RELOC_TILEGX_IMM16_X1_HW3:         howto manager.      (line 2882)
* BFD_RELOC_TILEGX_IMM16_X1_HW3_PCREL:   howto manager.      (line 2896)
* BFD_RELOC_TILEGX_IMM16_X1_HW3_PLT_PCREL: howto manager.    (line 2916)
* BFD_RELOC_TILEGX_IMM8_X0:              howto manager.      (line 2862)
* BFD_RELOC_TILEGX_IMM8_X0_TLS_ADD:      howto manager.      (line 2953)
* BFD_RELOC_TILEGX_IMM8_X0_TLS_GD_ADD:   howto manager.      (line 2948)
* BFD_RELOC_TILEGX_IMM8_X1:              howto manager.      (line 2864)
* BFD_RELOC_TILEGX_IMM8_X1_TLS_ADD:      howto manager.      (line 2954)
* BFD_RELOC_TILEGX_IMM8_X1_TLS_GD_ADD:   howto manager.      (line 2949)
* BFD_RELOC_TILEGX_IMM8_Y0:              howto manager.      (line 2863)
* BFD_RELOC_TILEGX_IMM8_Y0_TLS_ADD:      howto manager.      (line 2955)
* BFD_RELOC_TILEGX_IMM8_Y0_TLS_GD_ADD:   howto manager.      (line 2950)
* BFD_RELOC_TILEGX_IMM8_Y1:              howto manager.      (line 2865)
* BFD_RELOC_TILEGX_IMM8_Y1_TLS_ADD:      howto manager.      (line 2956)
* BFD_RELOC_TILEGX_IMM8_Y1_TLS_GD_ADD:   howto manager.      (line 2951)
* BFD_RELOC_TILEGX_JMP_SLOT:             howto manager.      (line 2857)
* BFD_RELOC_TILEGX_JUMPOFF_X1:           howto manager.      (line 2860)
* BFD_RELOC_TILEGX_JUMPOFF_X1_PLT:       howto manager.      (line 2861)
* BFD_RELOC_TILEGX_MF_IMM14_X1:          howto manager.      (line 2868)
* BFD_RELOC_TILEGX_MMEND_X0:             howto manager.      (line 2870)
* BFD_RELOC_TILEGX_MMSTART_X0:           howto manager.      (line 2869)
* BFD_RELOC_TILEGX_MT_IMM14_X1:          howto manager.      (line 2867)
* BFD_RELOC_TILEGX_RELATIVE:             howto manager.      (line 2858)
* BFD_RELOC_TILEGX_SHAMT_X0:             howto manager.      (line 2871)
* BFD_RELOC_TILEGX_SHAMT_X1:             howto manager.      (line 2872)
* BFD_RELOC_TILEGX_SHAMT_Y0:             howto manager.      (line 2873)
* BFD_RELOC_TILEGX_SHAMT_Y1:             howto manager.      (line 2874)
* BFD_RELOC_TILEGX_TLS_DTPMOD32:         howto manager.      (line 2944)
* BFD_RELOC_TILEGX_TLS_DTPMOD64:         howto manager.      (line 2941)
* BFD_RELOC_TILEGX_TLS_DTPOFF32:         howto manager.      (line 2945)
* BFD_RELOC_TILEGX_TLS_DTPOFF64:         howto manager.      (line 2942)
* BFD_RELOC_TILEGX_TLS_GD_CALL:          howto manager.      (line 2947)
* BFD_RELOC_TILEGX_TLS_IE_LOAD:          howto manager.      (line 2952)
* BFD_RELOC_TILEGX_TLS_TPOFF32:          howto manager.      (line 2946)
* BFD_RELOC_TILEGX_TLS_TPOFF64:          howto manager.      (line 2943)
* BFD_RELOC_TILEPRO_BROFF_X1:            howto manager.      (line 2772)
* BFD_RELOC_TILEPRO_COPY:                howto manager.      (line 2768)
* BFD_RELOC_TILEPRO_DEST_IMM8_X1:        howto manager.      (line 2779)
* BFD_RELOC_TILEPRO_GLOB_DAT:            howto manager.      (line 2769)
* BFD_RELOC_TILEPRO_IMM16_X0:            howto manager.      (line 2782)
* BFD_RELOC_TILEPRO_IMM16_X0_GOT:        howto manager.      (line 2798)
* BFD_RELOC_TILEPRO_IMM16_X0_GOT_HA:     howto manager.      (line 2804)
* BFD_RELOC_TILEPRO_IMM16_X0_GOT_HI:     howto manager.      (line 2802)
* BFD_RELOC_TILEPRO_IMM16_X0_GOT_LO:     howto manager.      (line 2800)
* BFD_RELOC_TILEPRO_IMM16_X0_HA:         howto manager.      (line 2788)
* BFD_RELOC_TILEPRO_IMM16_X0_HA_PCREL:   howto manager.      (line 2796)
* BFD_RELOC_TILEPRO_IMM16_X0_HI:         howto manager.      (line 2786)
* BFD_RELOC_TILEPRO_IMM16_X0_HI_PCREL:   howto manager.      (line 2794)
* BFD_RELOC_TILEPRO_IMM16_X0_LO:         howto manager.      (line 2784)
* BFD_RELOC_TILEPRO_IMM16_X0_LO_PCREL:   howto manager.      (line 2792)
* BFD_RELOC_TILEPRO_IMM16_X0_PCREL:      howto manager.      (line 2790)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_GD:     howto manager.      (line 2820)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_GD_HA:  howto manager.      (line 2826)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_GD_HI:  howto manager.      (line 2824)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_GD_LO:  howto manager.      (line 2822)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_IE:     howto manager.      (line 2828)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_IE_HA:  howto manager.      (line 2834)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_IE_HI:  howto manager.      (line 2832)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_IE_LO:  howto manager.      (line 2830)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_LE:     howto manager.      (line 2839)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_LE_HA:  howto manager.      (line 2845)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_LE_HI:  howto manager.      (line 2843)
* BFD_RELOC_TILEPRO_IMM16_X0_TLS_LE_LO:  howto manager.      (line 2841)
* BFD_RELOC_TILEPRO_IMM16_X1:            howto manager.      (line 2783)
* BFD_RELOC_TILEPRO_IMM16_X1_GOT:        howto manager.      (line 2799)
* BFD_RELOC_TILEPRO_IMM16_X1_GOT_HA:     howto manager.      (line 2805)
* BFD_RELOC_TILEPRO_IMM16_X1_GOT_HI:     howto manager.      (line 2803)
* BFD_RELOC_TILEPRO_IMM16_X1_GOT_LO:     howto manager.      (line 2801)
* BFD_RELOC_TILEPRO_IMM16_X1_HA:         howto manager.      (line 2789)
* BFD_RELOC_TILEPRO_IMM16_X1_HA_PCREL:   howto manager.      (line 2797)
* BFD_RELOC_TILEPRO_IMM16_X1_HI:         howto manager.      (line 2787)
* BFD_RELOC_TILEPRO_IMM16_X1_HI_PCREL:   howto manager.      (line 2795)
* BFD_RELOC_TILEPRO_IMM16_X1_LO:         howto manager.      (line 2785)
* BFD_RELOC_TILEPRO_IMM16_X1_LO_PCREL:   howto manager.      (line 2793)
* BFD_RELOC_TILEPRO_IMM16_X1_PCREL:      howto manager.      (line 2791)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_GD:     howto manager.      (line 2821)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_GD_HA:  howto manager.      (line 2827)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_GD_HI:  howto manager.      (line 2825)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_GD_LO:  howto manager.      (line 2823)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_IE:     howto manager.      (line 2829)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_IE_HA:  howto manager.      (line 2835)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_IE_HI:  howto manager.      (line 2833)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_IE_LO:  howto manager.      (line 2831)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_LE:     howto manager.      (line 2840)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_LE_HA:  howto manager.      (line 2846)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_LE_HI:  howto manager.      (line 2844)
* BFD_RELOC_TILEPRO_IMM16_X1_TLS_LE_LO:  howto manager.      (line 2842)
* BFD_RELOC_TILEPRO_IMM8_X0:             howto manager.      (line 2775)
* BFD_RELOC_TILEPRO_IMM8_X0_TLS_GD_ADD:  howto manager.      (line 2815)
* BFD_RELOC_TILEPRO_IMM8_X1:             howto manager.      (line 2777)
* BFD_RELOC_TILEPRO_IMM8_X1_TLS_GD_ADD:  howto manager.      (line 2816)
* BFD_RELOC_TILEPRO_IMM8_Y0:             howto manager.      (line 2776)
* BFD_RELOC_TILEPRO_IMM8_Y0_TLS_GD_ADD:  howto manager.      (line 2817)
* BFD_RELOC_TILEPRO_IMM8_Y1:             howto manager.      (line 2778)
* BFD_RELOC_TILEPRO_IMM8_Y1_TLS_GD_ADD:  howto manager.      (line 2818)
* BFD_RELOC_TILEPRO_JMP_SLOT:            howto manager.      (line 2770)
* BFD_RELOC_TILEPRO_JOFFLONG_X1:         howto manager.      (line 2773)
* BFD_RELOC_TILEPRO_JOFFLONG_X1_PLT:     howto manager.      (line 2774)
* BFD_RELOC_TILEPRO_MF_IMM15_X1:         howto manager.      (line 2781)
* BFD_RELOC_TILEPRO_MMEND_X0:            howto manager.      (line 2807)
* BFD_RELOC_TILEPRO_MMEND_X1:            howto manager.      (line 2809)
* BFD_RELOC_TILEPRO_MMSTART_X0:          howto manager.      (line 2806)
* BFD_RELOC_TILEPRO_MMSTART_X1:          howto manager.      (line 2808)
* BFD_RELOC_TILEPRO_MT_IMM15_X1:         howto manager.      (line 2780)
* BFD_RELOC_TILEPRO_RELATIVE:            howto manager.      (line 2771)
* BFD_RELOC_TILEPRO_SHAMT_X0:            howto manager.      (line 2810)
* BFD_RELOC_TILEPRO_SHAMT_X1:            howto manager.      (line 2811)
* BFD_RELOC_TILEPRO_SHAMT_Y0:            howto manager.      (line 2812)
* BFD_RELOC_TILEPRO_SHAMT_Y1:            howto manager.      (line 2813)
* BFD_RELOC_TILEPRO_TLS_DTPMOD32:        howto manager.      (line 2836)
* BFD_RELOC_TILEPRO_TLS_DTPOFF32:        howto manager.      (line 2837)
* BFD_RELOC_TILEPRO_TLS_GD_CALL:         howto manager.      (line 2814)
* BFD_RELOC_TILEPRO_TLS_IE_LOAD:         howto manager.      (line 2819)
* BFD_RELOC_TILEPRO_TLS_TPOFF32:         howto manager.      (line 2838)
* bfd_reloc_type_lookup:                 howto manager.      (line 2975)
* BFD_RELOC_V850_16_GOT:                 howto manager.      (line 1375)
* BFD_RELOC_V850_16_GOTOFF:              howto manager.      (line 1391)
* BFD_RELOC_V850_16_PCREL:               howto manager.      (line 1355)
* BFD_RELOC_V850_16_S1:                  howto manager.      (line 1367)
* BFD_RELOC_V850_16_SPLIT_OFFSET:        howto manager.      (line 1365)
* BFD_RELOC_V850_17_PCREL:               howto manager.      (line 1357)
* BFD_RELOC_V850_22_PCREL:               howto manager.      (line 1309)
* BFD_RELOC_V850_22_PLT_PCREL:           howto manager.      (line 1379)
* BFD_RELOC_V850_23:                     howto manager.      (line 1359)
* BFD_RELOC_V850_32_ABS:                 howto manager.      (line 1363)
* BFD_RELOC_V850_32_GOT:                 howto manager.      (line 1377)
* BFD_RELOC_V850_32_GOTOFF:              howto manager.      (line 1393)
* BFD_RELOC_V850_32_GOTPCREL:            howto manager.      (line 1373)
* BFD_RELOC_V850_32_PCREL:               howto manager.      (line 1361)
* BFD_RELOC_V850_32_PLT_PCREL:           howto manager.      (line 1381)
* BFD_RELOC_V850_9_PCREL:                howto manager.      (line 1307)
* BFD_RELOC_V850_ALIGN:                  howto manager.      (line 1350)
* BFD_RELOC_V850_CALLT_15_16_OFFSET:     howto manager.      (line 1371)
* BFD_RELOC_V850_CALLT_16_16_OFFSET:     howto manager.      (line 1344)
* BFD_RELOC_V850_CALLT_6_7_OFFSET:       howto manager.      (line 1342)
* BFD_RELOC_V850_CODE:                   howto manager.      (line 1395)
* BFD_RELOC_V850_COPY:                   howto manager.      (line 1383)
* BFD_RELOC_V850_DATA:                   howto manager.      (line 1397)
* BFD_RELOC_V850_GLOB_DAT:               howto manager.      (line 1385)
* BFD_RELOC_V850_JMP_SLOT:               howto manager.      (line 1387)
* BFD_RELOC_V850_LO16_S1:                howto manager.      (line 1369)
* BFD_RELOC_V850_LO16_SPLIT_OFFSET:      howto manager.      (line 1352)
* BFD_RELOC_V850_LONGCALL:               howto manager.      (line 1346)
* BFD_RELOC_V850_LONGJUMP:               howto manager.      (line 1348)
* BFD_RELOC_V850_RELATIVE:               howto manager.      (line 1389)
* BFD_RELOC_V850_SDA_15_16_OFFSET:       howto manager.      (line 1313)
* BFD_RELOC_V850_SDA_16_16_OFFSET:       howto manager.      (line 1311)
* BFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET: howto manager.      (line 1336)
* BFD_RELOC_V850_TDA_16_16_OFFSET:       howto manager.      (line 1329)
* BFD_RELOC_V850_TDA_4_4_OFFSET:         howto manager.      (line 1334)
* BFD_RELOC_V850_TDA_4_5_OFFSET:         howto manager.      (line 1331)
* BFD_RELOC_V850_TDA_6_8_OFFSET:         howto manager.      (line 1321)
* BFD_RELOC_V850_TDA_7_7_OFFSET:         howto manager.      (line 1327)
* BFD_RELOC_V850_TDA_7_8_OFFSET:         howto manager.      (line 1324)
* BFD_RELOC_V850_ZDA_15_16_OFFSET:       howto manager.      (line 1318)
* BFD_RELOC_V850_ZDA_16_16_OFFSET:       howto manager.      (line 1316)
* BFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET: howto manager.      (line 1339)
* BFD_RELOC_VAX_GLOB_DAT:                howto manager.      (line 2278)
* BFD_RELOC_VAX_JMP_SLOT:                howto manager.      (line 2279)
* BFD_RELOC_VAX_RELATIVE:                howto manager.      (line 2280)
* BFD_RELOC_VPE4KMATH_DATA:              howto manager.      (line 1881)
* BFD_RELOC_VPE4KMATH_INSN:              howto manager.      (line 1882)
* BFD_RELOC_VTABLE_ENTRY:                howto manager.      (line 1885)
* BFD_RELOC_VTABLE_INHERIT:              howto manager.      (line 1884)
* BFD_RELOC_X86_64_32S:                  howto manager.      (line  545)
* BFD_RELOC_X86_64_COPY:                 howto manager.      (line  540)
* BFD_RELOC_X86_64_DTPMOD64:             howto manager.      (line  546)
* BFD_RELOC_X86_64_DTPOFF32:             howto manager.      (line  551)
* BFD_RELOC_X86_64_DTPOFF64:             howto manager.      (line  547)
* BFD_RELOC_X86_64_GLOB_DAT:             howto manager.      (line  541)
* BFD_RELOC_X86_64_GOT32:                howto manager.      (line  538)
* BFD_RELOC_X86_64_GOT64:                howto manager.      (line  556)
* BFD_RELOC_X86_64_GOTOFF64:             howto manager.      (line  554)
* BFD_RELOC_X86_64_GOTPC32:              howto manager.      (line  555)
* BFD_RELOC_X86_64_GOTPC32_TLSDESC:      howto manager.      (line  561)
* BFD_RELOC_X86_64_GOTPC64:              howto manager.      (line  558)
* BFD_RELOC_X86_64_GOTPCREL:             howto manager.      (line  544)
* BFD_RELOC_X86_64_GOTPCREL64:           howto manager.      (line  557)
* BFD_RELOC_X86_64_GOTPLT64:             howto manager.      (line  559)
* BFD_RELOC_X86_64_GOTTPOFF:             howto manager.      (line  552)
* BFD_RELOC_X86_64_IRELATIVE:            howto manager.      (line  564)
* BFD_RELOC_X86_64_JUMP_SLOT:            howto manager.      (line  542)
* BFD_RELOC_X86_64_PC32_BND:             howto manager.      (line  565)
* BFD_RELOC_X86_64_PLT32:                howto manager.      (line  539)
* BFD_RELOC_X86_64_PLT32_BND:            howto manager.      (line  566)
* BFD_RELOC_X86_64_PLTOFF64:             howto manager.      (line  560)
* BFD_RELOC_X86_64_RELATIVE:             howto manager.      (line  543)
* BFD_RELOC_X86_64_TLSDESC:              howto manager.      (line  563)
* BFD_RELOC_X86_64_TLSDESC_CALL:         howto manager.      (line  562)
* BFD_RELOC_X86_64_TLSGD:                howto manager.      (line  549)
* BFD_RELOC_X86_64_TLSLD:                howto manager.      (line  550)
* BFD_RELOC_X86_64_TPOFF32:              howto manager.      (line  553)
* BFD_RELOC_X86_64_TPOFF64:              howto manager.      (line  548)
* BFD_RELOC_XC16X_PAG:                   howto manager.      (line 2273)
* BFD_RELOC_XC16X_POF:                   howto manager.      (line 2274)
* BFD_RELOC_XC16X_SEG:                   howto manager.      (line 2275)
* BFD_RELOC_XC16X_SOF:                   howto manager.      (line 2276)
* BFD_RELOC_XGATE_24:                    howto manager.      (line 2028)
* BFD_RELOC_XGATE_GPAGE:                 howto manager.      (line 2026)
* BFD_RELOC_XGATE_IMM3:                  howto manager.      (line 2040)
* BFD_RELOC_XGATE_IMM4:                  howto manager.      (line 2042)
* BFD_RELOC_XGATE_IMM5:                  howto manager.      (line 2044)
* BFD_RELOC_XGATE_IMM8_HI:               howto manager.      (line 2037)
* BFD_RELOC_XGATE_IMM8_LO:               howto manager.      (line 2034)
* BFD_RELOC_XGATE_LO16:                  howto manager.      (line 2023)
* BFD_RELOC_XGATE_PCREL_10:              howto manager.      (line 2032)
* BFD_RELOC_XGATE_PCREL_9:               howto manager.      (line 2030)
* BFD_RELOC_XGATE_RL_GROUP:              howto manager.      (line 2019)
* BFD_RELOC_XGATE_RL_JUMP:               howto manager.      (line 2016)
* BFD_RELOC_XSTORMY16_12:                howto manager.      (line 2267)
* BFD_RELOC_XSTORMY16_24:                howto manager.      (line 2268)
* BFD_RELOC_XSTORMY16_FPTR16:            howto manager.      (line 2269)
* BFD_RELOC_XSTORMY16_REL_12:            howto manager.      (line 2266)
* BFD_RELOC_XTENSA_ASM_EXPAND:           howto manager.      (line 2423)
* BFD_RELOC_XTENSA_ASM_SIMPLIFY:         howto manager.      (line 2427)
* BFD_RELOC_XTENSA_DIFF16:               howto manager.      (line 2374)
* BFD_RELOC_XTENSA_DIFF32:               howto manager.      (line 2375)
* BFD_RELOC_XTENSA_DIFF8:                howto manager.      (line 2373)
* BFD_RELOC_XTENSA_GLOB_DAT:             howto manager.      (line 2365)
* BFD_RELOC_XTENSA_JMP_SLOT:             howto manager.      (line 2366)
* BFD_RELOC_XTENSA_OP0:                  howto manager.      (line 2418)
* BFD_RELOC_XTENSA_OP1:                  howto manager.      (line 2419)
* BFD_RELOC_XTENSA_OP2:                  howto manager.      (line 2420)
* BFD_RELOC_XTENSA_PLT:                  howto manager.      (line 2369)
* BFD_RELOC_XTENSA_RELATIVE:             howto manager.      (line 2367)
* BFD_RELOC_XTENSA_RTLD:                 howto manager.      (line 2361)
* BFD_RELOC_XTENSA_SLOT0_ALT:            howto manager.      (line 2401)
* BFD_RELOC_XTENSA_SLOT0_OP:             howto manager.      (line 2382)
* BFD_RELOC_XTENSA_SLOT10_ALT:           howto manager.      (line 2411)
* BFD_RELOC_XTENSA_SLOT10_OP:            howto manager.      (line 2392)
* BFD_RELOC_XTENSA_SLOT11_ALT:           howto manager.      (line 2412)
* BFD_RELOC_XTENSA_SLOT11_OP:            howto manager.      (line 2393)
* BFD_RELOC_XTENSA_SLOT12_ALT:           howto manager.      (line 2413)
* BFD_RELOC_XTENSA_SLOT12_OP:            howto manager.      (line 2394)
* BFD_RELOC_XTENSA_SLOT13_ALT:           howto manager.      (line 2414)
* BFD_RELOC_XTENSA_SLOT13_OP:            howto manager.      (line 2395)
* BFD_RELOC_XTENSA_SLOT14_ALT:           howto manager.      (line 2415)
* BFD_RELOC_XTENSA_SLOT14_OP:            howto manager.      (line 2396)
* BFD_RELOC_XTENSA_SLOT1_ALT:            howto manager.      (line 2402)
* BFD_RELOC_XTENSA_SLOT1_OP:             howto manager.      (line 2383)
* BFD_RELOC_XTENSA_SLOT2_ALT:            howto manager.      (line 2403)
* BFD_RELOC_XTENSA_SLOT2_OP:             howto manager.      (line 2384)
* BFD_RELOC_XTENSA_SLOT3_ALT:            howto manager.      (line 2404)
* BFD_RELOC_XTENSA_SLOT3_OP:             howto manager.      (line 2385)
* BFD_RELOC_XTENSA_SLOT4_ALT:            howto manager.      (line 2405)
* BFD_RELOC_XTENSA_SLOT4_OP:             howto manager.      (line 2386)
* BFD_RELOC_XTENSA_SLOT5_ALT:            howto manager.      (line 2406)
* BFD_RELOC_XTENSA_SLOT5_OP:             howto manager.      (line 2387)
* BFD_RELOC_XTENSA_SLOT6_ALT:            howto manager.      (line 2407)
* BFD_RELOC_XTENSA_SLOT6_OP:             howto manager.      (line 2388)
* BFD_RELOC_XTENSA_SLOT7_ALT:            howto manager.      (line 2408)
* BFD_RELOC_XTENSA_SLOT7_OP:             howto manager.      (line 2389)
* BFD_RELOC_XTENSA_SLOT8_ALT:            howto manager.      (line 2409)
* BFD_RELOC_XTENSA_SLOT8_OP:             howto manager.      (line 2390)
* BFD_RELOC_XTENSA_SLOT9_ALT:            howto manager.      (line 2410)
* BFD_RELOC_XTENSA_SLOT9_OP:             howto manager.      (line 2391)
* BFD_RELOC_XTENSA_TLSDESC_ARG:          howto manager.      (line 2432)
* BFD_RELOC_XTENSA_TLSDESC_FN:           howto manager.      (line 2431)
* BFD_RELOC_XTENSA_TLS_ARG:              howto manager.      (line 2436)
* BFD_RELOC_XTENSA_TLS_CALL:             howto manager.      (line 2437)
* BFD_RELOC_XTENSA_TLS_DTPOFF:           howto manager.      (line 2433)
* BFD_RELOC_XTENSA_TLS_FUNC:             howto manager.      (line 2435)
* BFD_RELOC_XTENSA_TLS_TPOFF:            howto manager.      (line 2434)
* BFD_RELOC_Z80_DISP8:                   howto manager.      (line 2439)
* BFD_RELOC_Z8K_CALLR:                   howto manager.      (line 2443)
* BFD_RELOC_Z8K_DISP7:                   howto manager.      (line 2441)
* BFD_RELOC_Z8K_IMM4L:                   howto manager.      (line 2445)
* bfd_rename_section:                    section prototypes. (line  167)
* bfd_scan_arch:                         Architectures.      (line  514)
* bfd_scan_vma:                          Miscellaneous.      (line  124)
* bfd_seach_for_target:                  bfd_target.         (line  520)
* bfd_sections_find_if:                  section prototypes. (line  197)
* bfd_section_already_linked:            Writing the symbol table.
                                                             (line   55)
* bfd_section_list_clear:                section prototypes. (line    7)
* bfd_set_archive_head:                  Archives.           (line   74)
* bfd_set_arch_info:                     Architectures.      (line  555)
* bfd_set_assert_handler:                Error reporting.    (line  143)
* bfd_set_default_target:                bfd_target.         (line  459)
* bfd_set_error:                         Error reporting.    (line   57)
* bfd_set_error_handler:                 Error reporting.    (line  100)
* bfd_set_error_program_name:            Error reporting.    (line  109)
* bfd_set_file_flags:                    Miscellaneous.      (line   43)
* bfd_set_format:                        Formats.            (line   67)
* bfd_set_gp_size:                       Miscellaneous.      (line  114)
* bfd_set_private_flags:                 Miscellaneous.      (line  188)
* bfd_set_reloc:                         Miscellaneous.      (line   33)
* bfd_set_section_contents:              section prototypes. (line  229)
* bfd_set_section_flags:                 section prototypes. (line  152)
* bfd_set_section_size:                  section prototypes. (line  214)
* bfd_set_start_address:                 Miscellaneous.      (line   93)
* bfd_set_symtab:                        symbol handling functions.
                                                             (line   63)
* bfd_symbol_info:                       symbol handling functions.
                                                             (line  135)
* bfd_target_list:                       bfd_target.         (line  511)
* bfd_write_bigendian_4byte_int:         Internal.           (line   12)
* bfd_zalloc:                            Opening and Closing.
                                                             (line  256)
* bfd_zalloc2:                           Opening and Closing.
                                                             (line  265)
* coff_symbol_type:                      coff.               (line  244)
* core_file_matches_executable_p:        Core Files.         (line   38)
* find_separate_debug_file:              Opening and Closing.
                                                             (line  331)
* generic_core_file_matches_executable_p: Core Files.        (line   48)
* Hash tables:                           Hash Tables.        (line    6)
* internal object-file format:           Canonical format.   (line   11)
* Linker:                                Linker Functions.   (line    6)
* Other functions:                       Miscellaneous.      (line  202)
* separate_alt_debug_file_exists:        Opening and Closing.
                                                             (line  322)
* separate_debug_file_exists:            Opening and Closing.
                                                             (line  313)
* struct bfd_iovec:                      Miscellaneous.      (line  364)
* target vector (_bfd_final_link):       Performing the Final Link.
                                                             (line    6)
* target vector (_bfd_link_add_symbols): Adding Symbols to the Hash Table.
                                                             (line    6)
* target vector (_bfd_link_hash_table_create): Creating a Linker Hash Table.
                                                             (line    6)
* The HOWTO Macro:                       typedef arelent.    (line  289)
* what is it?:                           Overview.           (line    6)

